Search.setIndex({"docnames": ["_autosummary/cocohelper", "_autosummary/cocohelper.adapters", "_autosummary/cocohelper.adapters.binary_mask_adapter", "_autosummary/cocohelper.adapters.binary_mask_adapter.BinaryMaskDatasetAdapter", "_autosummary/cocohelper.adapters.dataset_adapter", "_autosummary/cocohelper.adapters.dataset_adapter.DatasetAdapter", "_autosummary/cocohelper.dataframe", "_autosummary/cocohelper.dataframe.COCODataFrame", "_autosummary/cocohelper.errors", "_autosummary/cocohelper.errors.not_found_error", "_autosummary/cocohelper.errors.not_found_error.COCOAnnotationNotFoundError", "_autosummary/cocohelper.errors.not_found_error.COCOImageNotFoundError", "_autosummary/cocohelper.errors.validation_error", "_autosummary/cocohelper.errors.validation_error.COCOValidationError", "_autosummary/cocohelper.filters", "_autosummary/cocohelper.filters.cocofilters", "_autosummary/cocohelper.filters.cocofilters.cocofilters", "_autosummary/cocohelper.filters.cocofilters.cocofilters.anns_filter", "_autosummary/cocohelper.filters.cocofilters.cocofilters.cats_filter", "_autosummary/cocohelper.filters.cocofilters.cocofilters.imgs_filter", "_autosummary/cocohelper.filters.filter", "_autosummary/cocohelper.filters.filter.AndFilter", "_autosummary/cocohelper.filters.filter.ColumnFilter", "_autosummary/cocohelper.filters.filter.ComposeFilter", "_autosummary/cocohelper.filters.filter.Filter", "_autosummary/cocohelper.filters.filter.NotFilter", "_autosummary/cocohelper.filters.filter.OrFilter", "_autosummary/cocohelper.filters.filter.RangeFilter", "_autosummary/cocohelper.filters.filter.ValueFilter", "_autosummary/cocohelper.filters.strategies", "_autosummary/cocohelper.filters.strategies.functional", "_autosummary/cocohelper.filters.strategies.functional.filter_multi_rows_having_all", "_autosummary/cocohelper.filters.strategies.functional.filter_multi_rows_having_any", "_autosummary/cocohelper.filters.strategies.functional.filter_rows_having", "_autosummary/cocohelper.filters.strategies.functional.filter_rows_in_range", "_autosummary/cocohelper.filters.strategies.functional.filter_rows_out_range", "_autosummary/cocohelper.filters.strategies.strategies", "_autosummary/cocohelper.filters.strategies.strategies.AllValueFilterStrategy", "_autosummary/cocohelper.filters.strategies.strategies.AnyValueFilterStrategy", "_autosummary/cocohelper.filters.strategies.strategies.HavingValueFilterStrategy", "_autosummary/cocohelper.filters.strategies.strategies.InRangeFilterStrategy", "_autosummary/cocohelper.filters.strategies.strategies.NotInRangeFilterStrategy", "_autosummary/cocohelper.filters.strategies.strategies.RangeFilterStrategy", "_autosummary/cocohelper.filters.strategies.strategies.ValueFilterStrategy", "_autosummary/cocohelper.helper", "_autosummary/cocohelper.helper.COCOColsMapper", "_autosummary/cocohelper.helper.COCOHelper", "_autosummary/cocohelper.helper.COCOHelperPaths", "_autosummary/cocohelper.importer", "_autosummary/cocohelper.importer.Importer", "_autosummary/cocohelper.importer._get_empty_json", "_autosummary/cocohelper.joins", "_autosummary/cocohelper.joins.COCOJoins", "_autosummary/cocohelper.merge", "_autosummary/cocohelper.merge._create_cat_mapping", "_autosummary/cocohelper.merge._create_image_mapping", "_autosummary/cocohelper.merge._merge_annotations", "_autosummary/cocohelper.merge._merge_categories", "_autosummary/cocohelper.merge._merge_images", "_autosummary/cocohelper.merge._merge_info", "_autosummary/cocohelper.merge._merge_licenses", "_autosummary/cocohelper.merge.merge_coco", "_autosummary/cocohelper.splitters", "_autosummary/cocohelper.splitters.kfold", "_autosummary/cocohelper.splitters.kfold.KFoldSplitter", "_autosummary/cocohelper.splitters.proportional", "_autosummary/cocohelper.splitters.proportional.ProportionalDataSplitter", "_autosummary/cocohelper.splitters.splitter", "_autosummary/cocohelper.splitters.splitter.Splitter", "_autosummary/cocohelper.splitters.stratified", "_autosummary/cocohelper.splitters.stratified.StratifiedDataSplitter", "_autosummary/cocohelper.stats", "_autosummary/cocohelper.stats.COCOStats", "_autosummary/cocohelper.transforms", "_autosummary/cocohelper.transforms.compose", "_autosummary/cocohelper.transforms.compose.Compose", "_autosummary/cocohelper.transforms.crop", "_autosummary/cocohelper.transforms.crop.CenterCrop", "_autosummary/cocohelper.transforms.crop.Crop", "_autosummary/cocohelper.transforms.crop.RandomCrop", "_autosummary/cocohelper.transforms.crop.SizeMode", "_autosummary/cocohelper.transforms.crop._check_bbox", "_autosummary/cocohelper.transforms.crop._crop_bbox", "_autosummary/cocohelper.transforms.crop._crop_segmentation", "_autosummary/cocohelper.transforms.crop._norm_bbox", "_autosummary/cocohelper.transforms.crop.crop_img", "_autosummary/cocohelper.transforms.randomflip", "_autosummary/cocohelper.transforms.randomflip.RandomFlip", "_autosummary/cocohelper.transforms.resize", "_autosummary/cocohelper.transforms.resize.Resize", "_autosummary/cocohelper.transforms.transform", "_autosummary/cocohelper.transforms.transform.Transform", "_autosummary/cocohelper.utils", "_autosummary/cocohelper.utils.colmapper", "_autosummary/cocohelper.utils.colmapper.ColMap", "_autosummary/cocohelper.utils.colmapper.ColsMapper", "_autosummary/cocohelper.utils.dataframe", "_autosummary/cocohelper.utils.dataframe.df_to_records", "_autosummary/cocohelper.utils.dataframe.drop_duplicate_rows", "_autosummary/cocohelper.utils.dataframe.fix_fk_after_drop_duplicate", "_autosummary/cocohelper.utils.dataframe.records_to_df", "_autosummary/cocohelper.utils.dataframe.serialize_row", "_autosummary/cocohelper.utils.path", "_autosummary/cocohelper.utils.path.subtract", "_autosummary/cocohelper.utils.segmentation", "_autosummary/cocohelper.utils.segmentation.CompressedRLEMaskConverter", "_autosummary/cocohelper.utils.segmentation.MaskConverter", "_autosummary/cocohelper.utils.segmentation.PolygonMaskConverter", "_autosummary/cocohelper.utils.segmentation.RLEMaskConverter", "_autosummary/cocohelper.utils.segmentation.coco_to_binary_masks", "_autosummary/cocohelper.utils.segmentation.compressed_rle_to_mask", "_autosummary/cocohelper.utils.segmentation.compute_polygon_area", "_autosummary/cocohelper.utils.segmentation.convert_to_mask", "_autosummary/cocohelper.utils.segmentation.convert_to_mode", "_autosummary/cocohelper.utils.segmentation.decode_mask", "_autosummary/cocohelper.utils.segmentation.encode_mask", "_autosummary/cocohelper.utils.segmentation.get_segmentation_mode", "_autosummary/cocohelper.utils.segmentation.mask_to_compressed_rle", "_autosummary/cocohelper.utils.segmentation.mask_to_polygon", "_autosummary/cocohelper.utils.segmentation.mask_to_rle", "_autosummary/cocohelper.utils.segmentation.polygon_to_mask", "_autosummary/cocohelper.utils.segmentation.rle_to_mask", "_autosummary/cocohelper.utils.timer", "_autosummary/cocohelper.utils.timer.Timer", "_autosummary/cocohelper.utils.types", "_autosummary/cocohelper.utils.utils", "_autosummary/cocohelper.utils.utils.fix_not_tuple", "_autosummary/cocohelper.utils.utils.fix_not_tuple_object", "_autosummary/cocohelper.utils.utils.isArrayLike", "_autosummary/cocohelper.utils.utils.not_empty_intersect", "_autosummary/cocohelper.validator", "_autosummary/cocohelper.validator.COCOValidator", "_autosummary/cocohelper.validator._assert_dict_value_type", "_autosummary/cocohelper.visualizer", "_autosummary/cocohelper.visualizer.COCOVisualizer", "apigen", "call_for_contributions", "contributing", "index", "installation", "roadmap", "usage"], "filenames": ["_autosummary/cocohelper.rst", "_autosummary/cocohelper.adapters.rst", "_autosummary/cocohelper.adapters.binary_mask_adapter.rst", "_autosummary/cocohelper.adapters.binary_mask_adapter.BinaryMaskDatasetAdapter.rst", "_autosummary/cocohelper.adapters.dataset_adapter.rst", "_autosummary/cocohelper.adapters.dataset_adapter.DatasetAdapter.rst", "_autosummary/cocohelper.dataframe.rst", "_autosummary/cocohelper.dataframe.COCODataFrame.rst", "_autosummary/cocohelper.errors.rst", "_autosummary/cocohelper.errors.not_found_error.rst", "_autosummary/cocohelper.errors.not_found_error.COCOAnnotationNotFoundError.rst", "_autosummary/cocohelper.errors.not_found_error.COCOImageNotFoundError.rst", "_autosummary/cocohelper.errors.validation_error.rst", "_autosummary/cocohelper.errors.validation_error.COCOValidationError.rst", "_autosummary/cocohelper.filters.rst", "_autosummary/cocohelper.filters.cocofilters.rst", "_autosummary/cocohelper.filters.cocofilters.cocofilters.rst", "_autosummary/cocohelper.filters.cocofilters.cocofilters.anns_filter.rst", "_autosummary/cocohelper.filters.cocofilters.cocofilters.cats_filter.rst", "_autosummary/cocohelper.filters.cocofilters.cocofilters.imgs_filter.rst", "_autosummary/cocohelper.filters.filter.rst", "_autosummary/cocohelper.filters.filter.AndFilter.rst", "_autosummary/cocohelper.filters.filter.ColumnFilter.rst", "_autosummary/cocohelper.filters.filter.ComposeFilter.rst", "_autosummary/cocohelper.filters.filter.Filter.rst", "_autosummary/cocohelper.filters.filter.NotFilter.rst", "_autosummary/cocohelper.filters.filter.OrFilter.rst", "_autosummary/cocohelper.filters.filter.RangeFilter.rst", "_autosummary/cocohelper.filters.filter.ValueFilter.rst", "_autosummary/cocohelper.filters.strategies.rst", "_autosummary/cocohelper.filters.strategies.functional.rst", "_autosummary/cocohelper.filters.strategies.functional.filter_multi_rows_having_all.rst", "_autosummary/cocohelper.filters.strategies.functional.filter_multi_rows_having_any.rst", "_autosummary/cocohelper.filters.strategies.functional.filter_rows_having.rst", "_autosummary/cocohelper.filters.strategies.functional.filter_rows_in_range.rst", "_autosummary/cocohelper.filters.strategies.functional.filter_rows_out_range.rst", "_autosummary/cocohelper.filters.strategies.strategies.rst", "_autosummary/cocohelper.filters.strategies.strategies.AllValueFilterStrategy.rst", "_autosummary/cocohelper.filters.strategies.strategies.AnyValueFilterStrategy.rst", "_autosummary/cocohelper.filters.strategies.strategies.HavingValueFilterStrategy.rst", "_autosummary/cocohelper.filters.strategies.strategies.InRangeFilterStrategy.rst", "_autosummary/cocohelper.filters.strategies.strategies.NotInRangeFilterStrategy.rst", "_autosummary/cocohelper.filters.strategies.strategies.RangeFilterStrategy.rst", "_autosummary/cocohelper.filters.strategies.strategies.ValueFilterStrategy.rst", "_autosummary/cocohelper.helper.rst", "_autosummary/cocohelper.helper.COCOColsMapper.rst", "_autosummary/cocohelper.helper.COCOHelper.rst", "_autosummary/cocohelper.helper.COCOHelperPaths.rst", "_autosummary/cocohelper.importer.rst", "_autosummary/cocohelper.importer.Importer.rst", "_autosummary/cocohelper.importer._get_empty_json.rst", "_autosummary/cocohelper.joins.rst", "_autosummary/cocohelper.joins.COCOJoins.rst", "_autosummary/cocohelper.merge.rst", "_autosummary/cocohelper.merge._create_cat_mapping.rst", "_autosummary/cocohelper.merge._create_image_mapping.rst", "_autosummary/cocohelper.merge._merge_annotations.rst", "_autosummary/cocohelper.merge._merge_categories.rst", "_autosummary/cocohelper.merge._merge_images.rst", "_autosummary/cocohelper.merge._merge_info.rst", "_autosummary/cocohelper.merge._merge_licenses.rst", "_autosummary/cocohelper.merge.merge_coco.rst", "_autosummary/cocohelper.splitters.rst", "_autosummary/cocohelper.splitters.kfold.rst", "_autosummary/cocohelper.splitters.kfold.KFoldSplitter.rst", "_autosummary/cocohelper.splitters.proportional.rst", "_autosummary/cocohelper.splitters.proportional.ProportionalDataSplitter.rst", "_autosummary/cocohelper.splitters.splitter.rst", "_autosummary/cocohelper.splitters.splitter.Splitter.rst", "_autosummary/cocohelper.splitters.stratified.rst", "_autosummary/cocohelper.splitters.stratified.StratifiedDataSplitter.rst", "_autosummary/cocohelper.stats.rst", "_autosummary/cocohelper.stats.COCOStats.rst", "_autosummary/cocohelper.transforms.rst", "_autosummary/cocohelper.transforms.compose.rst", "_autosummary/cocohelper.transforms.compose.Compose.rst", "_autosummary/cocohelper.transforms.crop.rst", "_autosummary/cocohelper.transforms.crop.CenterCrop.rst", "_autosummary/cocohelper.transforms.crop.Crop.rst", "_autosummary/cocohelper.transforms.crop.RandomCrop.rst", "_autosummary/cocohelper.transforms.crop.SizeMode.rst", "_autosummary/cocohelper.transforms.crop._check_bbox.rst", "_autosummary/cocohelper.transforms.crop._crop_bbox.rst", "_autosummary/cocohelper.transforms.crop._crop_segmentation.rst", "_autosummary/cocohelper.transforms.crop._norm_bbox.rst", "_autosummary/cocohelper.transforms.crop.crop_img.rst", "_autosummary/cocohelper.transforms.randomflip.rst", "_autosummary/cocohelper.transforms.randomflip.RandomFlip.rst", "_autosummary/cocohelper.transforms.resize.rst", "_autosummary/cocohelper.transforms.resize.Resize.rst", "_autosummary/cocohelper.transforms.transform.rst", "_autosummary/cocohelper.transforms.transform.Transform.rst", "_autosummary/cocohelper.utils.rst", "_autosummary/cocohelper.utils.colmapper.rst", "_autosummary/cocohelper.utils.colmapper.ColMap.rst", "_autosummary/cocohelper.utils.colmapper.ColsMapper.rst", "_autosummary/cocohelper.utils.dataframe.rst", "_autosummary/cocohelper.utils.dataframe.df_to_records.rst", "_autosummary/cocohelper.utils.dataframe.drop_duplicate_rows.rst", "_autosummary/cocohelper.utils.dataframe.fix_fk_after_drop_duplicate.rst", "_autosummary/cocohelper.utils.dataframe.records_to_df.rst", "_autosummary/cocohelper.utils.dataframe.serialize_row.rst", "_autosummary/cocohelper.utils.path.rst", "_autosummary/cocohelper.utils.path.subtract.rst", "_autosummary/cocohelper.utils.segmentation.rst", "_autosummary/cocohelper.utils.segmentation.CompressedRLEMaskConverter.rst", "_autosummary/cocohelper.utils.segmentation.MaskConverter.rst", "_autosummary/cocohelper.utils.segmentation.PolygonMaskConverter.rst", "_autosummary/cocohelper.utils.segmentation.RLEMaskConverter.rst", "_autosummary/cocohelper.utils.segmentation.coco_to_binary_masks.rst", "_autosummary/cocohelper.utils.segmentation.compressed_rle_to_mask.rst", "_autosummary/cocohelper.utils.segmentation.compute_polygon_area.rst", "_autosummary/cocohelper.utils.segmentation.convert_to_mask.rst", "_autosummary/cocohelper.utils.segmentation.convert_to_mode.rst", "_autosummary/cocohelper.utils.segmentation.decode_mask.rst", "_autosummary/cocohelper.utils.segmentation.encode_mask.rst", "_autosummary/cocohelper.utils.segmentation.get_segmentation_mode.rst", "_autosummary/cocohelper.utils.segmentation.mask_to_compressed_rle.rst", "_autosummary/cocohelper.utils.segmentation.mask_to_polygon.rst", "_autosummary/cocohelper.utils.segmentation.mask_to_rle.rst", "_autosummary/cocohelper.utils.segmentation.polygon_to_mask.rst", "_autosummary/cocohelper.utils.segmentation.rle_to_mask.rst", "_autosummary/cocohelper.utils.timer.rst", "_autosummary/cocohelper.utils.timer.Timer.rst", "_autosummary/cocohelper.utils.types.rst", "_autosummary/cocohelper.utils.utils.rst", "_autosummary/cocohelper.utils.utils.fix_not_tuple.rst", "_autosummary/cocohelper.utils.utils.fix_not_tuple_object.rst", "_autosummary/cocohelper.utils.utils.isArrayLike.rst", "_autosummary/cocohelper.utils.utils.not_empty_intersect.rst", "_autosummary/cocohelper.validator.rst", "_autosummary/cocohelper.validator.COCOValidator.rst", "_autosummary/cocohelper.validator._assert_dict_value_type.rst", "_autosummary/cocohelper.visualizer.rst", "_autosummary/cocohelper.visualizer.COCOVisualizer.rst", "apigen.rst", "call_for_contributions.md", "contributing.md", "index.rst", "installation.md", "roadmap.md", "usage.md"], "titles": ["cocohelper", "adapters", "binary_mask_adapter", "BinaryMaskDatasetAdapter", "dataset_adapter", "DatasetAdapter", "dataframe", "COCODataFrame", "errors", "not_found_error", "cocohelper.errors.not_found_error.COCOAnnotationNotFoundError", "cocohelper.errors.not_found_error.COCOImageNotFoundError", "validation_error", "cocohelper.errors.validation_error.COCOValidationError", "filters", "cocofilters", "cocofilters", "anns_filter", "cats_filter", "imgs_filter", "filter", "AndFilter", "ColumnFilter", "ComposeFilter", "Filter", "NotFilter", "OrFilter", "RangeFilter", "ValueFilter", "strategies", "functional", "filter_multi_rows_having_all", "filter_multi_rows_having_any", "filter_rows_having", "filter_rows_in_range", "filter_rows_out_range", "strategies", "AllValueFilterStrategy", "AnyValueFilterStrategy", "HavingValueFilterStrategy", "InRangeFilterStrategy", "NotInRangeFilterStrategy", "RangeFilterStrategy", "ValueFilterStrategy", "helper", "COCOColsMapper", "COCOHelper", "COCOHelperPaths", "importer", "Importer", "_get_empty_json", "joins", "COCOJoins", "merge", "_create_cat_mapping", "_create_image_mapping", "_merge_annotations", "_merge_categories", "_merge_images", "_merge_info", "_merge_licenses", "merge_coco", "splitters", "kfold", "KFoldSplitter", "proportional", "ProportionalDataSplitter", "splitter", "Splitter", "stratified", "StratifiedDataSplitter", "stats", "COCOStats", "transforms", "compose", "Compose", "crop", "CenterCrop", "Crop", "RandomCrop", "SizeMode", "_check_bbox", "_crop_bbox", "_crop_segmentation", "_norm_bbox", "crop_img", "randomflip", "RandomFlip", "resize", "Resize", "transform", "Transform", "utils", "colmapper", "ColMap", "ColsMapper", "dataframe", "df_to_records", "drop_duplicate_rows", "fix_fk_after_drop_duplicate", "records_to_df", "serialize_row", "path", "subtract", "segmentation", "CompressedRLEMaskConverter", "MaskConverter", "PolygonMaskConverter", "RLEMaskConverter", "coco_to_binary_masks", "compressed_rle_to_mask", "compute_polygon_area", "convert_to_mask", "convert_to_mode", "decode_mask", "encode_mask", "get_segmentation_mode", "mask_to_compressed_rle", "mask_to_polygon", "mask_to_rle", "polygon_to_mask", "rle_to_mask", "timer", "Timer", "types", "utils", "fix_not_tuple", "fix_not_tuple_object", "isArrayLike", "not_empty_intersect", "validator", "COCOValidator", "_assert_dict_value_type", "visualizer", "COCOVisualizer", "API Reference", "Call For Contributions", "How to contribute", "COCOHelper", "Installation", "Roadmap", "Usage"], "terms": {"A": [0, 3, 5, 7, 17, 18, 19, 23, 24, 27, 28, 37, 38, 46, 49, 50, 52, 57, 59, 64, 66, 68, 70, 72, 98, 99, 105, 117, 118, 122, 129, 134, 136], "python": [0, 7, 129, 137], "api": [0, 7, 138], "make": [0, 7, 134, 138], "work": [0, 7, 46, 136, 138, 140], "coco": [0, 1, 2, 3, 4, 6, 7, 9, 13, 15, 16, 17, 44, 46, 47, 49, 50, 51, 52, 53, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 107, 109, 116, 120, 130, 131, 133, 134, 138], "dataset": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 44, 46, 47, 48, 49, 50, 51, 52, 53, 57, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 87, 89, 91, 109, 130, 131, 134, 138], "format": [0, 1, 2, 3, 4, 7, 13, 44, 46, 49, 104, 105, 107, 116, 117, 120, 123, 138], "simpler": 0, "submodul": [0, 1, 8, 14, 15, 29, 62, 73, 92], "transform": [1, 7, 46, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89], "custom": [1, 7, 8, 46], "an": [2, 3, 4, 7, 17, 18, 19, 21, 26, 46, 49, 50, 52, 72, 75, 77, 78, 79, 87, 89, 91, 108, 109, 110, 116, 120, 121, 123, 126, 127, 128, 129, 134], "adapt": [2, 3, 4, 5, 49], "convert": [2, 3, 4, 7, 46, 49, 104, 105, 107, 108, 109, 110, 112, 113, 117, 118, 119, 120, 121, 126], "binari": [2, 3, 7, 105, 108, 109, 110, 112, 115, 117, 119, 121, 137], "mask": [2, 3, 7, 105, 106, 107, 108, 109, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 134], "class": [2, 3, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 86, 87, 88, 89, 90, 91, 93, 94, 95, 104, 105, 106, 107, 108, 110, 118, 120, 121, 122, 123, 130, 131, 133, 134], "cocohelp": [3, 5, 7, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 68, 70, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 131, 132, 134, 137, 139, 141], "binary_mask_adapt": 3, "sourc": [3, 5, 7, 10, 11, 13, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 64, 66, 68, 70, 72, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 89, 91, 94, 95, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 128, 129, 131, 132, 134, 137], "base": [3, 5, 7, 14, 21, 22, 23, 24, 25, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 64, 66, 68, 70, 72, 75, 77, 78, 79, 80, 87, 89, 91, 94, 95, 105, 106, 107, 108, 116, 123, 130, 131, 134], "datasetadapt": [3, 49], "paramet": [3, 5, 7, 10, 11, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 46, 49, 52, 56, 57, 58, 59, 60, 61, 64, 66, 68, 70, 72, 75, 77, 78, 79, 81, 82, 83, 84, 85, 87, 89, 91, 94, 97, 98, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 129, 131, 132, 134], "data_path": 3, "dictionari": [3, 5, 7, 46, 59, 70, 72, 131, 132], "map": [3, 7, 57, 98, 99], "imag": [3, 5, 11, 16, 19, 46, 47, 49, 52, 58, 61, 64, 66, 70, 71, 72, 73, 75, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 110, 120, 131, 133, 134], "filenam": 3, "its": [3, 7, 75, 77, 78, 79, 87, 89, 91, 111, 134], "image_load": 3, "function": [3, 7, 16, 31, 32, 33, 34, 35, 48, 53, 72, 76, 96, 102, 104, 123, 125, 130, 131], "load": [3, 5, 7, 46, 49, 134], "mask_load": 3, "categori": [3, 5, 7, 16, 18, 46, 52, 57, 61, 72, 131], "valu": [3, 7, 22, 27, 28, 31, 32, 33, 37, 38, 39, 40, 41, 42, 43, 46, 72, 77, 78, 79, 98, 99, 107, 109, 114, 118, 120, 126, 127, 132], "mode": [3, 7, 72, 77, 78, 79, 81, 84, 113, 114, 115, 116], "how": [3, 7, 72, 77, 78, 79, 138], "encod": [3, 7, 105, 106, 107, 108, 110, 114, 115, 117, 119], "default": [3, 7, 17, 18, 19, 46, 72, 134, 137], "polygon": [3, 107, 111, 114, 116, 118, 120], "compression_factor": 3, "compress": [3, 7, 105, 110, 117], "factor": [3, 7], "method": [3, 5, 7, 21, 22, 23, 24, 25, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 64, 66, 68, 70, 72, 75, 77, 78, 79, 80, 87, 89, 91, 94, 95, 99, 105, 106, 107, 108, 123, 131, 134], "list": [3, 5, 7, 21, 22, 23, 24, 25, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 56, 57, 58, 59, 61, 64, 66, 68, 70, 72, 75, 77, 78, 79, 80, 82, 83, 85, 87, 89, 91, 94, 95, 97, 98, 100, 105, 106, 107, 108, 110, 116, 118, 119, 120, 121, 123, 131, 132, 134, 136, 137], "attribut": [3, 5, 7, 21, 22, 23, 24, 25, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 52, 64, 66, 68, 70, 72, 75, 77, 78, 79, 80, 87, 89, 91, 94, 95, 105, 106, 107, 108, 123, 128], "detail": [3, 5, 7, 21, 22, 23, 24, 25, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 52, 64, 66, 68, 70, 72, 75, 77, 78, 79, 80, 87, 89, 91, 94, 95, 105, 106, 107, 108, 123, 131, 134, 137], "static": [3, 7, 46, 70, 75, 77, 78, 79, 87, 89, 91, 131, 134], "extract_bbox_from_binary_mask": 3, "binary_mask": [3, 119], "extract": [3, 7, 14, 52, 72, 118], "bound": [3, 7, 27, 72, 75, 77, 78, 79, 87, 89, 91, 134], "box": [3, 7, 72, 75, 77, 78, 79, 87, 89, 91, 134], "from": [3, 7, 14, 15, 16, 37, 46, 48, 49, 52, 75, 77, 78, 79, 87, 89, 91, 107, 109, 111, 118, 120, 131, 137, 138, 141], "segment": [3, 83, 87, 89, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 134, 138], "nb": 3, "we": [3, 7, 28, 37, 38, 49, 68, 75, 77, 78, 79, 87, 89, 91, 99, 136, 137], "do": [3, 7, 72, 137], "support": [3, 7, 123], "rotat": [3, 7], "ndarrai": [3, 5, 7, 46, 75, 77, 78, 79, 85, 87, 89, 91, 105, 106, 107, 108, 110, 112, 114, 115, 117, 118, 119, 120, 134], "semant": [3, 7, 105, 108, 110], "object": [3, 5, 7, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 52, 64, 66, 68, 70, 72, 75, 77, 78, 79, 87, 89, 91, 94, 95, 105, 106, 107, 108, 116, 118, 126, 127, 128, 131, 134, 138], "return": [3, 5, 7, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 46, 49, 50, 52, 56, 57, 58, 59, 60, 61, 64, 66, 68, 70, 72, 75, 77, 78, 79, 82, 83, 84, 85, 87, 89, 91, 94, 97, 98, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 126, 127, 129, 131, 132, 134], "surround": [3, 7], "input": [3, 7, 13, 46, 98, 131, 134], "type": [3, 5, 7, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 46, 49, 50, 52, 56, 57, 58, 59, 60, 61, 64, 66, 68, 70, 72, 75, 77, 78, 79, 82, 83, 84, 85, 87, 89, 91, 94, 97, 98, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 129, 131, 132, 134], "get_categori": [3, 5], "get": [3, 5, 7, 46, 50, 52, 57, 66, 70, 72], "dict": [3, 5, 7, 46, 50, 56, 58, 59, 70, 72, 75, 77, 78, 79, 85, 87, 89, 91, 94, 97, 98, 99, 100, 116, 119, 131, 132], "get_individual_inst": 3, "kwarg": [3, 7, 105, 106, 107, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121, 134], "separ": [3, 7], "disjoint": 3, "insid": [3, 7, 72, 75, 77, 78, 79, 87, 89, 91], "same": [3, 7, 28, 37, 38, 46, 72, 98], "arrai": [3, 5, 7, 46, 75, 77, 78, 79, 87, 89, 91, 105, 107, 108, 110, 112, 114, 115, 118, 119, 120, 121, 126, 127, 134], "ar": [3, 7, 22, 28, 37, 38, 46, 72, 98, 105, 107, 108, 110, 115, 116, 117, 118, 119, 120, 121, 129, 131, 134, 137], "two": [3, 7, 134], "rule": [3, 7, 63, 65, 69], "have": [3, 7, 28, 37, 38, 40, 41, 46, 59, 75, 77, 78, 79, 87, 89, 91, 99, 131, 137, 141], "differ": [3, 7, 28, 46, 51, 52, 61, 75, 104, 118], "label": [3, 7, 46, 70, 72, 137], "e": [3, 7, 99, 139], "g": [3, 7, 99, 139], "one": [3, 7, 28, 37, 38, 39, 75, 123, 129, 134, 137], "i": [3, 7, 13, 28, 37, 38, 46, 49, 57, 64, 75, 77, 78, 79, 87, 89, 91, 116, 118, 123, 127, 129, 131, 132, 134, 135, 136, 137, 138], "associ": [3, 7, 37, 38, 72, 118, 134], "1": [3, 7, 37, 38, 72, 75, 80, 87, 99, 109, 118, 123, 134, 139, 141], "other": [3, 7, 52, 118, 125], "2": [3, 7, 37, 38, 57, 99, 123, 134], "space": [3, 7], "structur": [3, 7, 46, 131], "element": [3, 5, 7, 75, 77, 78, 79, 87, 89, 91, 98], "scipi": [3, 7], "ndimag": 3, "numpi": [3, 5, 7, 46, 105, 107, 108, 110, 112, 114, 115, 118, 119, 120, 121, 134], "contain": [3, 7, 27, 37, 38, 46, 52, 57, 64, 66, 70, 72, 99, 107, 109, 118, 127, 131, 132, 134, 137], "str": [3, 7, 18, 19, 22, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 46, 47, 49, 72, 75, 77, 78, 79, 87, 89, 91, 94, 98, 99, 103, 109, 110, 113, 114, 115, 116, 117, 119, 120, 121, 123, 131, 134], "can": [3, 7, 14, 28, 37, 38, 49, 72, 98, 123, 131, 136, 137, 138, 139], "rle": [3, 105, 108, 110, 114, 116, 117, 119, 121], "crle": [3, 114, 116], "union": [3, 7, 17, 18, 19, 46, 49, 75, 77, 78, 79, 87, 89, 91, 103, 109, 110, 116, 120, 121, 131], "float": [3, 7, 17, 46, 72, 89, 109, 111, 118, 120], "tupl": [3, 5, 7, 17, 27, 34, 35, 40, 41, 46, 57, 58, 72, 75, 77, 78, 79, 82, 83, 84, 85, 87, 89, 91, 98, 110, 120, 121, 126, 127, 131], "befor": [3, 7, 123, 137], "convers": [3, 7, 127], "us": [3, 7, 14, 15, 16, 22, 27, 28, 46, 49, 52, 64, 72, 75, 77, 78, 79, 87, 89, 91, 114, 115, 118, 120, 123, 134, 137, 138, 139], "": [3, 7, 46, 72], "t": [3, 7, 123, 137], "doe": [3, 7, 10, 11, 37, 38, 46, 131], "occupi": 3, "too": [3, 7], "much": [3, 7], "memori": [3, 7], "The": [3, 4, 7, 21, 22, 23, 24, 25, 26, 27, 28, 46, 57, 68, 72, 75, 77, 78, 79, 87, 89, 91, 98, 99, 105, 107, 108, 110, 111, 112, 113, 114, 115, 116, 119, 120, 121, 131, 134, 137], "consist": [3, 7], "down": [3, 7], "sampl": [3, 5, 7, 66, 70], "lower": [3, 7, 27], "resolut": [3, 72], "subsequ": 3, "option": [3, 5, 7, 17, 18, 19, 31, 32, 33, 34, 35, 46, 49, 97, 98, 100, 103, 109, 131, 134], "keyword": [3, 7], "get_sampl": [3, 5], "idx": [3, 5, 7, 37, 46], "represent": [3, 7], "specif": [3, 7, 14, 15, 16, 45], "index": [3, 5, 7, 28, 37, 38, 46, 57, 75, 98, 99, 138], "int": [3, 5, 7, 17, 18, 19, 34, 35, 40, 41, 46, 72, 75, 77, 78, 79, 81, 82, 83, 84, 85, 87, 89, 91, 110, 112, 113, 120, 121, 134], "image_annot": 3, "read_imag": [3, 5], "read": [3, 5, 7, 46, 137], "posit": [3, 7, 79], "id": [3, 7, 10, 11, 17, 18, 19, 45, 46, 57, 61, 64, 66, 70, 72, 130, 131, 134], "data": [3, 7, 15, 16, 46, 49, 68, 72, 75, 77, 78, 79, 87, 89, 91, 130, 131, 138], "path": [3, 7, 46, 49, 75, 77, 78, 79, 87, 89, 91, 103, 109, 131, 137, 141], "correspond": [3, 7, 46, 98, 136], "given": [3, 7, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 38, 46, 64, 66, 67, 70, 75, 77, 78, 79, 87, 89, 91, 105, 108, 109, 110, 121, 132, 134], "_abc_impl": [3, 5, 21, 22, 23, 24, 25, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 64, 66, 68, 70, 75, 77, 78, 79, 87, 89, 91, 105, 106, 107, 108], "_abc": [3, 5, 21, 22, 23, 24, 25, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 64, 66, 68, 70, 75, 77, 78, 79, 87, 89, 91, 105, 106, 107, 108], "_abc_data": [3, 5, 21, 22, 23, 24, 25, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 64, 66, 68, 70, 75, 77, 78, 79, 87, 89, 91, 105, 106, 107, 108], "abstract": [4, 5, 22, 23, 24, 42, 43, 68, 75, 77, 78, 79, 87, 89, 91, 106], "arbitrari": [4, 7, 49], "dataset_adapt": 5, "abc": [5, 7, 22, 23, 24, 42, 43, 68, 91, 106], "To": [5, 7, 37, 38, 46, 118, 134, 137], "implement": [5, 7], "fetch": [5, 7, 134], "extend": [6, 7, 14], "panda": [6, 7, 46], "allow": [6, 7, 123], "easier": [6, 7, 37, 38], "manipul": [6, 73, 96, 102], "datafram": [7, 14, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 46, 52, 56, 57, 58, 60, 97, 98, 99, 100, 101], "easi": [7, 46, 52, 138], "column": [7, 22, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 45, 52, 72, 93, 98, 99, 134], "remap": [7, 45], "join": [7, 46, 52, 72], "origin": [7, 66, 68, 70], "name": [7, 18, 19, 46, 72, 131, 137], "col_mapp": 7, "mapper": [7, 93], "_accum_func": 7, "func": 7, "axi": [7, 72], "none": [7, 17, 18, 19, 27, 28, 35, 38, 46, 97, 98, 100, 109, 110, 120, 121, 131, 132, 134, 139], "skipna": 7, "true": [7, 46, 49, 61, 64, 72, 131, 134, 137, 141], "arg": [7, 126], "bool": [7, 17, 46, 49, 61, 72, 87, 110, 121, 131, 134], "classmethod": [7, 46, 94], "_add_numeric_oper": 7, "add": [7, 137], "oper": [7, 20, 123, 138], "cl": 7, "evalu": 7, "doc": [7, 134], "string": [7, 105, 116, 117, 132], "again": 7, "_agg_by_level": 7, "0": [7, 37, 38, 57, 72, 75, 80, 81, 87, 99, 109, 118, 120, 134, 139], "level": 7, "hashabl": 7, "_align_fram": 7, "outer": 7, "copi": [7, 46, 99], "fill_valu": 7, "limit": 7, "fill_axi": 7, "_align_seri": 7, "_append": 7, "ignore_index": 7, "fals": [7, 46, 49, 131, 134], "verify_integr": 7, "sort": 7, "_arith_method": 7, "op": 7, "_as_manag": 7, "typ": 7, "privat": [7, 123], "helper": [7, 45, 46, 47, 56, 58, 134], "creat": [7, 22, 46, 49, 107, 120], "manag": [7, 123], "block": 7, "onli": [7, 28, 46, 52, 99, 131, 134, 137], "control": 7, "whether": 7, "arraymanag": 7, "1d": 7, "ensur": 7, "proper": 7, "contigu": 7, "layout": 7, "self": [7, 75, 123], "ndframet": 7, "new": [7, 45, 46, 49, 57, 75, 77, 78, 79, 87, 89, 91, 94, 123, 141], "specifi": [7, 113, 114, 115], "guarante": [7, 72], "_box_col_valu": 7, "loc": 7, "provid": [7, 46, 49, 79, 137, 139], "singledatamanag": 7, "seri": 7, "_check_inplace_and_allows_duplicate_label": 7, "inplac": 7, "_check_inplace_set": 7, "check": [7, 28, 46, 128, 130, 131, 132, 138], "place": 7, "set": [7, 27, 28, 43, 68, 129, 137], "thi": [7, 28, 37, 38, 46, 49, 72, 75, 77, 78, 79, 87, 89, 91, 99, 123, 131, 134, 135, 137], "_check_is_chained_assignment_poss": 7, "view": [7, 52], "cacher": 7, "mix": 7, "If": [7, 37, 38, 46, 49, 64, 127, 129, 131, 134, 136, 137, 141], "so": [7, 37, 118, 137], "forc": 7, "setitem_copi": 7, "should": [7, 75, 77, 78, 79, 87, 89, 91, 99, 137], "call": 7, "just": [7, 75, 77, 78, 79, 87, 89, 91, 123, 138], "Will": 7, "boolean": [7, 17], "cach": 7, "singl": [7, 46], "dtype": [7, 105, 107, 108, 110, 114, 120, 121], "mean": [7, 72], "updat": 7, "follow": [7, 131, 134, 136, 137], "_check_label_or_level_ambigu": 7, "kei": [7, 99, 131, 132], "ambigu": 7, "By": 7, "match": [7, 137], "both": [7, 34, 37, 72, 123, 129], "rais": [7, 10, 11, 12, 13, 46, 132], "valueerror": 7, "_check_setitem_copi": 7, "error": [7, 46, 132], "show": [7, 134, 137], "valid": [7, 12, 13, 46, 64, 131, 132, 137], "setitem": 7, "chain": 7, "It": 7, "technic": 7, "possibl": [7, 45], "figur": [7, 134], "out": [7, 41], "word": 7, "even": 7, "WITH": 7, "multi": [7, 28, 37, 38], "In": [7, 28, 37, 38, 75, 77, 78, 79, 87, 89, 91, 131, 137], "some": [7, 46, 98, 131], "alwai": 7, "mai": [7, 118], "while": [7, 72, 79], "current": [7, 46, 68, 135], "_is_view": 7, "case": [7, 28, 37, 38, 75, 77, 78, 79, 87, 89, 91, 131], "avoid": [7, 72], "handl": [7, 77, 78, 79], "np": [7, 46], "arang": 7, "df": [7, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 98], "9": 7, "count": [7, 116], "b": [7, 37, 38, 118, 129], "group": [7, 28, 70], "need": [7, 70, 134, 137], "settingwithcopi": 7, "howev": 7, "which": [7, 28, 68, 99, 136, 137], "gener": [7, 20, 21, 22, 23, 24, 26, 46, 48, 49, 67, 90, 131, 134, 135], "usual": 7, "param": [7, 66, 70, 105, 107, 108, 112, 113, 114, 115], "good": 7, "practic": 7, "recommend": [7, 131, 137], "iloc": 7, "5": [7, 99, 123], "_clear_item_cach": 7, "_clip_with_one_bound": 7, "threshold": 7, "_clip_with_scalar": 7, "upper": [7, 27], "_cmp_method": 7, "_combine_fram": 7, "_consolid": 7, "comput": [7, 70, 72, 75, 77, 78, 79, 87, 89, 91, 111], "ndframe": 7, "consolid": 7, "intern": 7, "each": [7, 37, 38, 46, 66, 70, 72, 107, 118, 126], "togeth": [7, 53, 61, 99], "caller": 7, "_consolidate_inplac": 7, "_construct_axes_dict": 7, "ax": [7, 87, 134], "myself": 7, "_construct_axes_from_argu": 7, "require_al": 7, "sentinel": 7, "construct": 7, "suppli": 7, "all": [7, 17, 18, 19, 37, 38, 39, 45, 46, 57, 61, 72, 95], "argument": [7, 17, 66, 70, 72, 126], "when": [7, 10, 11, 12, 13, 27, 28, 46, 72, 75, 77, 78, 79, 87, 89, 91, 109], "distinguish": 7, "user": 7, "explicitli": [7, 131], "pass": [7, 134], "scenario": 7, "where": [7, 22, 46, 99, 116, 118, 136, 137], "ha": [7, 57, 99, 128, 131, 132], "special": [7, 15, 16], "_construct_result": 7, "result": [7, 37, 38, 46], "wrap": 7, "arithmet": [7, 138], "comparison": 7, "logic": 7, "_convert": 7, "datetim": 7, "numer": 7, "timedelta": 7, "attempt": 7, "infer": 7, "better": 7, "date": 7, "number": [7, 64, 66, 70, 72, 118, 134], "includ": [7, 137], "unconvert": 7, "becom": 7, "nan": 7, "_count_level": 7, "numeric_onli": 7, "_dir_addit": 7, "like": [7, 37, 38, 123, 126, 127, 137, 141], "info_axi": 7, "multiindex": 7, "first": [7, 57, 75, 77, 78, 79, 87, 89, 91, 134, 137], "_dir_delet": 7, "delet": 7, "unwant": 7, "__dir__": 7, "_dispatch_frame_op": 7, "right": 7, "frame": 7, "left": [7, 52], "dispatch": 7, "scalar": 7, "_drop_axi": 7, "only_slic": 7, "drop": [7, 46, 98, 99], "For": [7, 37, 38, 57, 66, 72, 118, 137], "ignor": [7, 98, 105, 107, 108, 110, 115, 117, 118, 119, 120, 121], "suppress": 7, "exist": [7, 10, 11, 46, 131, 137], "along": 7, "_drop_labels_or_level": 7, "otherwis": [7, 38, 72, 123, 129, 131], "row": [7, 22, 27, 28, 37, 38, 39, 40, 41, 42, 43, 46, 61, 98, 99, 101], "ani": [7, 31, 32, 33, 38, 72, 105, 106, 107, 108, 110, 112, 113, 114, 115, 120, 121, 127, 132, 137, 139], "neither": 7, "nor": 7, "_ensure_valid_index": 7, "don": 7, "_find_valid_index": 7, "retriev": [7, 75, 77, 78, 79, 87, 89, 91], "last": 7, "chang": [7, 46], "between": [7, 17, 18, 19, 46, 52, 72, 104], "idx_first_valid": 7, "_from_arrai": 7, "order": 7, "enforc": 7, "homogen": 7, "assum": 7, "actual": 7, "thei": [7, 37, 38], "store": [7, 46], "extensionarrai": 7, "length": 7, "align": 7, "_get_agg_axi": 7, "axis_num": 7, "let": 7, "explicit": 7, "about": [7, 46, 47, 59, 72], "_get_axi": 7, "_get_axis_nam": 7, "_get_axis_numb": 7, "_get_axis_resolv": 7, "_get_block_manager_axi": 7, "block_manag": 7, "_get_bool_data": 7, "_get_cleaned_column_resolv": 7, "charact": 7, "free": [7, 137], "resolv": 7, "clean": 7, "up": [7, 136, 137], "refer": [7, 75, 77, 78, 79, 87, 89, 91], "backtick": 7, "quot": 7, "eval": 7, "_get_column_arrai": 7, "th": 7, "warn": [7, 131], "doesn": [7, 137], "write": 7, "caution": 7, "purpos": [7, 137], "_get_index_resolv": 7, "_get_item_cach": 7, "item": [7, 9, 57, 132, 136, 137], "repres": [7, 44, 46, 52, 116], "_get_label_or_level_valu": 7, "d": [7, 137, 141], "keyerror": 7, "multipl": [7, 28, 37, 38, 46, 53, 59, 61, 74, 107, 118], "futurewarn": 7, "futur": 7, "version": 7, "_get_numeric_data": 7, "_get_valu": 7, "col": [7, 72], "takeabl": 7, "quickli": 7, "interpret": 7, "note": [7, 137], "_index_as_uniqu": 7, "respons": 7, "_getitem_bool_arrai": 7, "_getitem_multilevel": 7, "_gotitem": 7, "ndim": 7, "subset": [7, 68, 70], "sub": [7, 62], "defin": [7, 64, 72, 98], "slice": 7, "select": [7, 28, 37, 38, 39], "request": [7, 28, 37, 38], "act": 7, "core": 7, "_indexed_sam": 7, "_info_repr": 7, "repr": 7, "info": [7, 46, 59], "_init_mgr": 7, "mgr": 7, "bool_t": 7, "_inplace_method": 7, "_invert_join_how": 7, "invert": [7, 46], "opposit": [7, 25], "_is_label_or_level_refer": 7, "test": [7, 132], "consid": [7, 28, 37, 38], "either": 7, "must": [7, 28, 46, 79, 107, 118, 131, 132, 137], "potenti": [7, 46], "_is_label_refer": 7, "entri": 7, "perpendicular": 7, "search": [7, 138], "is_label": 7, "_is_level_refer": 7, "NOT": 7, "is_level": 7, "_iset_item": 7, "_iset_item_mgr": 7, "_iset_not_inplac": 7, "_iter_column_arrai": 7, "iter": [7, 64], "over": [7, 22, 64, 72], "_ix": 7, "_join_compat": 7, "lsuffix": 7, "rsuffix": 7, "sequenc": [7, 17, 18, 19, 46, 110, 120, 121, 134], "_logical_func": 7, "bool_onli": 7, "_logical_method": 7, "_maybe_cache_chang": 7, "back": [7, 37, 38], "u": 7, "sai": 7, "mayb": 7, "_maybe_update_cach": 7, "clear": [7, 75], "verify_is_copi": 7, "see": [7, 123, 134, 137], "our": [7, 138, 141], "parent": 7, "is_copi": 7, "_min_count_stat_funct": 7, "min_count": 7, "_needs_reindex_multi": 7, "reindex": 7, "_protect_consolid": 7, "f": 7, "_mgr": 7, "_reduc": 7, "filter_typ": 7, "kwd": 7, "_reduce_axis1": 7, "try": [7, 118], "expens": 7, "transpos": 7, "appli": [7, 21, 22, 23, 24, 25, 26, 27, 28, 37, 38, 39, 40, 41, 42, 43, 46, 64, 66, 68, 70, 75, 77, 78, 79, 87, 89, 91, 141], "reduct": 7, "wise": 7, "reduc": [7, 118], "_reindex_ax": 7, "toler": [7, 118], "_reindex_column": 7, "new_column": 7, "_reindex_index": 7, "new_index": 7, "_reindex_multi": 7, "non": [7, 46, 129], "_reindex_with_index": 7, "allow_dup": 7, "indic": [7, 37, 38, 66, 98, 99, 105, 107, 108, 114], "here": [7, 136, 137, 141], "_renam": 7, "callabl": 7, "_replace_columnwis": 7, "regex": 7, "replac": [7, 72], "form": [7, 72], "target": [7, 66], "to_replac": 7, "_repr_data_resource_": 7, "Not": 7, "real": 7, "jupyt": [7, 141], "convent": 7, "_repr_fits_horizontal_": 7, "ignore_width": 7, "full": 7, "fit": 7, "horizont": [7, 87], "boundari": 7, "impos": [7, 28, 37, 38, 39], "displai": 7, "width": [7, 72, 77, 79, 105, 107, 110, 112, 113, 114, 120], "max_column": 7, "interact": 7, "session": 7, "ipynb": 7, "html": 7, "output": [7, 46, 89, 105, 107, 108, 109, 110, 112, 113, 114, 120, 121], "behav": 7, "wai": [7, 46], "expect": [7, 49, 132], "remain": [7, 72, 134], "effect": 7, "gh3541": 7, "gh3573": 7, "_repr_fits_vertical_": 7, "against": 7, "max_row": 7, "_repr_html_": 7, "particular": 7, "mainli": 7, "ipython": 7, "notebook": [7, 137, 141], "_repr_latex_": 7, "latex": 7, "nbconvert": 7, "pdf": 7, "_reset_cach": 7, "reset": 7, "properti": [7, 52, 116], "_sanitize_column": 7, "go": [7, 37, 38], "blockmanag": 7, "_set_axi": 7, "anyarraylik": 7, "_set_axis_nam": 7, "renam": [7, 94], "alter": 7, "exampl": [7, 37, 38, 57, 118, 131, 134, 137, 138], "pd": 7, "num_leg": 7, "4": [7, 72, 99], "dog": 7, "cat": [7, 45, 46, 52, 72], "monkei": 7, "anim": 7, "from_product": 7, "mammal": 7, "_set_axis_nocheck": 7, "_set_is_copi": 7, "ref": 7, "_set_item": 7, "timeseri": 7, "thrown": 7, "conform": 7, "_set_item_frame_valu": 7, "_set_item_mgr": 7, "_set_valu": 7, "put": 7, "_setitem_arrai": 7, "_setitem_fram": 7, "_setitem_slic": 7, "_slice": 7, "slobj": 7, "_stat_funct": 7, "liter": 7, "no_default": 7, "_stat_function_ddof": 7, "ddof": 7, "_take": 7, "convert_indic": 7, "take": [7, 75, 77, 78, 79, 87, 89, 91, 137], "addit": [7, 134], "docstr": [7, 137], "explan": 7, "_take_with_is_copi": 7, "_is_copi": 7, "keep": [7, 28, 37, 38, 39, 99], "track": 7, "settingwithcopywarn": 7, "_to_dict_of_block": 7, "constructor": 7, "_update_inplac": 7, "_validate_dtyp": 7, "dtypeobj": 7, "_where": 7, "cond": 7, "_nodefault": 7, "equival": 7, "public": 7, "except": [7, 8, 9, 10, 11, 12, 13, 98, 131], "__setitem__": 7, "ab": 7, "absolut": 7, "calcul": [7, 71, 72], "complex": [7, 15, 16, 138], "1j": 7, "sqrt": 7, "10": [7, 118, 141], "3": [7, 38, 72, 99], "33": 7, "00": 7, "float64": 7, "56205": 7, "dai": 7, "timedelta64": 7, "n": [7, 64, 66, 70], "closest": 7, "certain": [7, 10, 11, 27, 28, 37, 38, 40, 41], "argsort": 7, "stackoverflow": 7, "6": 7, "7": 7, "20": [7, 141], "30": 7, "40": 7, "c": [7, 46, 118], "100": 7, "50": 7, "43": 7, "substitut": [7, 120], "miss": [7, 72, 131], "With": 7, "revers": [7, 75], "radd": 7, "among": 7, "flexibl": 7, "wrapper": 7, "mul": 7, "div": 7, "mod": 7, "pow": 7, "compar": 7, "broadcast": 7, "across": 7, "fill": 7, "success": 7, "locat": 7, "subtract": 7, "multipli": 7, "divid": 7, "divis": 7, "truediv": 7, "floordiv": 7, "integ": [7, 66, 70], "modulo": 7, "remaind": 7, "after": [7, 46, 72, 131, 137], "exponenti": 7, "power": 7, "mismatch": 7, "angl": 7, "degre": 7, "360": 7, "180": 7, "circl": 7, "triangl": 7, "rectangl": 7, "361": 7, "181": 7, "constant": 7, "36": 7, "18": 7, "rdiv": 7, "inf": 7, "027778": 7, "333333": 7, "055556": 7, "500000": 7, "358": 7, "178": 7, "359": 7, "179": 7, "720": 7, "12": 7, "1080": 7, "shape": [7, 46, 87, 105, 107, 114], "16": [7, 72], "df_multindex": 7, "540": 7, "squar": 7, "pentagon": 7, "hexagon": 7, "add_prefix": 7, "prefix": [7, 123], "add_suffix": 7, "suffix": 7, "int64": 7, "item_": 7, "item_0": 7, "item_1": 7, "item_2": 7, "item_3": 7, "col_": 7, "col_a": 7, "col_b": 7, "_item": 7, "0_item": 7, "1_item": 7, "2_item": 7, "3_item": 7, "_col": 7, "a_col": 7, "b_col": 7, "agg": 7, "aggreg": 7, "more": [7, 134, 137], "accept": 7, "combin": [7, 21, 23, 26, 75], "sum": 7, "sever": [7, 76], "perform": [7, 46, 77, 78, 79], "behavior": [7, 25, 46, 137], "median": [7, 72], "prod": 7, "std": 7, "var": 7, "flatten": 7, "arr_2d": 7, "oppos": 7, "alia": 7, "groupbi": 7, "resampl": [7, 72], "bin": [7, 137], "window": 7, "roll": 7, "expand": 7, "exponentialmovingwindow": 7, "weight": 7, "mutat": 7, "produc": 7, "unexpect": 7, "gotcha": 7, "udf": 7, "8": 7, "min": 7, "15": 7, "per": [7, 66], "max": 7, "x": [7, 54, 55, 81], "y": [7, 81], "z": 7, "broadcast_axi": 7, "inner": 7, "requir": [7, 17, 18, 19, 50], "compat": [7, 52], "backfil": 7, "bfill": 7, "pad": 7, "ffill": 7, "hole": 7, "propag": 7, "observ": 7, "forward": 7, "next": 7, "gap": 7, "maximum": [7, 72], "consecut": 7, "backward": 7, "than": 7, "partial": [7, 46], "entir": 7, "greater": 7, "dimens": [7, 72], "60": 7, "70": [7, 141], "80": 7, "90": 7, "600": 7, "700": 7, "800": 7, "900": 7, "also": [7, 134, 137], "final": [7, 137], "unless": 7, "least": [7, 28, 37, 38, 52, 72], "within": [7, 70], "zero": [7, 107, 114, 120], "empti": [7, 50, 129, 134], "unus": 7, "whose": [7, 28, 132, 137], "everyth": 7, "exclud": [7, 37, 38], "na": [7, 72], "null": 7, "treat": 7, "becaus": [7, 37, 38], "equal": 7, "hierarch": 7, "collaps": 7, "deprec": [7, 45], "sinc": 7, "instead": 7, "might": 7, "col1": 7, "col2": 7, "behaviour": [7, 21, 26], "Or": 7, "everi": 7, "append": [7, 75], "end": [7, 98, 123], "concat": 7, "further": 7, "whatsnew_140": 7, "frame_series_append": 7, "ad": 7, "duplic": [7, 46, 61, 98, 99, 131], "concaten": 7, "unchang": 7, "computation": 7, "intens": 7, "solut": 7, "those": [7, 129], "onc": [7, 136, 137], "df2": 7, "less": 7, "effici": [7, 138], "rang": [7, 17, 27, 40, 41, 42, 123], "raw": 7, "result_typ": 7, "depend": [7, 42, 43, 137], "determin": 7, "receiv": 7, "you": [7, 57, 79, 131, 136, 137, 138, 139, 141], "achiev": 7, "These": 7, "turn": 7, "rather": 7, "retain": 7, "applymap": 7, "elementwis": 7, "univers": 7, "27": 7, "13": 7, "lambda": 7, "similar": [7, 137], "foo": 7, "bar": 7, "na_act": 7, "without": [7, 72, 98, 137], "them": [7, 137], "356": 7, "567": 7, "000": 7, "120": 7, "len": 7, "df_copi": 7, "vector": 7, "often": 7, "faster": 7, "could": 7, "000000": 7, "494400": 7, "11": 7, "262736": 7, "857489": 7, "But": 7, "asfreq": 7, "freq": 7, "normal": [7, 72], "time": [7, 37, 38, 75, 77, 78, 79, 87, 89, 91, 123], "frequenc": 7, "periodindex": 7, "date_rang": 7, "start": [7, 123], "respect": [7, 46, 66], "timestep": 7, "were": 7, "present": 7, "unknown": 7, "below": [7, 137], "appropri": 7, "necessari": 7, "dateoffset": 7, "alreadi": [7, 137], "midnight": 7, "dure": 7, "upsampl": 7, "learn": [7, 138], "pleas": [7, 136, 137], "link": [7, 136, 137], "minut": 7, "timestamp": 7, "2000": 7, "period": 7, "01": 7, "02": 7, "03": 7, "second": [7, 57, 75, 77, 78, 79, 87, 89, 91, 123], "asof": 7, "taken": 7, "merge_asof": 7, "merg": [7, 46, 52, 54, 55, 56, 57, 58, 59, 60, 61, 98, 99], "though": 7, "consider": 7, "500": 7, "datetimeindex": 7, "2018": 7, "09": 7, "04": 7, "05": 7, "assign": [7, 52, 136], "ones": 7, "re": 7, "overwritten": 7, "simpli": 7, "later": 7, "newli": 7, "modifi": [7, 46, 75, 77, 78, 79, 87, 89, 91], "temp_c": 7, "17": 7, "25": 7, "portland": 7, "berkelei": 7, "temp_f": 7, "32": 7, "62": 7, "77": 7, "altern": 7, "directli": [7, 137], "referenc": 7, "anoth": [7, 49, 129], "temp_k": 7, "459": 7, "67": 7, "290": 7, "298": 7, "astyp": 7, "cast": 7, "veri": 7, "care": [7, 137], "invalid": [7, 46], "On": 7, "to_datetim": 7, "to_timedelta": 7, "to_numer": 7, "timezon": 7, "naiv": 7, "awar": 7, "dt": 7, "tz_local": 7, "int32": 7, "ser": 7, "categor": 7, "import": [7, 50, 123, 141], "categoricaldtyp": 7, "cat_dtyp": 7, "s1": 7, "s2": 7, "ser_dat": 7, "20200101": 7, "2020": 7, "datetime64": 7, "at_tim": 7, "30am": 7, "typeerror": [7, 132], "between_tim": 7, "initi": 7, "offset": 7, "indexer_at_tim": 7, "12h": 7, "auto_reset_index": 7, "col_level": 7, "col_fil": 7, "reset_index": 7, "remov": [7, 37, 38, 46, 75, 99, 118], "insert": [7, 75], "repeat": 7, "downcast": 7, "synonym": 7, "fillna": 7, "start_tim": 7, "end_tim": 7, "include_start": 7, "include_end": 7, "inclus": [7, 34, 35], "am": 7, "filter": [7, 15, 16, 17, 18, 19, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 64], "been": [7, 99], "standard": [7, 37, 38, 52, 116, 134, 138], "close": 7, "open": [7, 109], "indexer_between_tim": 7, "1d20min": 7, "45": 7, "exactli": 7, "bool_": 7, "boxplot": 7, "fontsiz": 7, "rot": 7, "grid": 7, "figsiz": [7, 134], "return_typ": 7, "backend": 7, "plot": [7, 134], "whisker": 7, "graphic": 7, "depict": 7, "through": 7, "quartil": 7, "q1": 7, "q3": 7, "line": [7, 137, 138], "q2": 7, "edg": 7, "iqr": 7, "farthest": 7, "point": [7, 99], "interv": 7, "outlier": 7, "dot": 7, "wikipedia": 7, "One": 7, "done": 7, "matplotlib": [7, 134], "tick": 7, "font": 7, "size": [7, 72, 89, 116, 134], "larg": [7, 134, 138], "screen": 7, "coordin": [7, 107, 111, 120, 134], "system": 7, "height": [7, 72, 77, 79, 105, 107, 110, 112, 113, 114, 120], "inch": 7, "subplot": [7, 134], "top": [7, 134], "kind": 7, "drawn": [7, 134], "namedtupl": 7, "instanc": [7, 46, 99, 123], "whole": [7, 75, 77, 78, 79, 87, 89, 91], "pyplot": 7, "hist": 7, "histogram": 7, "line2d": 7, "abov": 7, "want": [7, 68, 136, 137], "tweak": 7, "appear": 7, "cap": 7, "flier": 7, "variabl": [7, 137], "distribut": 7, "third": 7, "adjust": 7, "give": [7, 137], "_subplot": 7, "axessubplot": 7, "clip": 7, "cocojoin": [7, 46], "cdf": 7, "automat": [7, 116, 135, 137], "exploit": 7, "foreign": [7, 99], "execut": [7, 75, 77, 78, 79, 87, 89, 91, 123, 137], "overwrit": 7, "prior": 7, "combine_first": 7, "simpl": [7, 28], "choos": 7, "smaller": [7, 72], "df1": 7, "take_smal": 7, "els": 7, "minimum": [7, 72], "preserv": [7, 72], "demonstr": 7, "prefer": 7, "overrid": 7, "upon": 7, "still": 7, "persist": 7, "align_axi": 7, "keep_shap": 7, "keep_equ": 7, "result_nam": 7, "stack": 7, "vertic": [7, 87, 118], "kept": [7, 38, 98, 99], "shown": [7, 134], "side": 7, "ident": 7, "col3": 7, "convert_dtyp": 7, "infer_object": 7, "convert_str": 7, "convert_integ": 7, "convert_boolean": 7, "convert_flo": 7, "best": 7, "stringdtyp": 7, "extens": 7, "booleandtyp": 7, "faithfulli": 7, "off": 7, "individu": [7, 72], "Then": 7, "leav": 7, "nullabl": 7, "o": 7, "h": [7, 46, 77, 79, 81], "200": 7, "dfn": 7, "obtain": [7, 15, 16, 25, 72, 75, 77, 78, 79, 87, 89, 91, 118], "deep": 7, "corr": 7, "pearson": 7, "min_period": 7, "pairwis": 7, "correl": 7, "kendal": 7, "spearman": 7, "coeffici": 7, "tau": 7, "rank": 7, "matrix": 7, "diagon": 7, "symmetr": 7, "regardless": 7, "pair": [7, 72, 132], "avail": [7, 137, 141], "corrwith": 7, "complet": 7, "def": [7, 123], "histogram_intersect": 7, "v": 7, "round": 7, "decim": 7, "three": 7, "four": 7, "reshap": 7, "cell": 7, "nat": 7, "use_inf_as_na": 7, "value_count": [7, 72], "uniqu": [7, 37, 38, 131], "isna": 7, "person": 7, "john": 7, "myla": 7, "lewi": 7, "ag": 7, "24": 7, "21": 7, "26": 7, "notic": 7, "uncount": 7, "cov": 7, "covari": 7, "bia": 7, "analysi": [7, 138], "understand": [7, 49], "relationship": 7, "measur": 7, "delta": 7, "freedom": 7, "divisor": 7, "ewm": 7, "random": [7, 79, 134], "unbias": 7, "estim": [7, 72], "varianc": 7, "member": [7, 136, 137], "mani": [7, 57, 72], "applic": 7, "semi": 7, "definit": 7, "lead": 7, "matric": 7, "666667": 7, "seed": 7, "42": [7, 123], "randn": 7, "1000": 7, "998438": 7, "020161": 7, "059277": 7, "008943": 7, "014144": 7, "059352": 7, "008543": 7, "024738": 7, "009826": 7, "010670": 7, "001486": 7, "000271": 7, "921297": 7, "013692": 7, "977795": 7, "316741": 7, "150812": 7, "248003": 7, "191417": 7, "895202": 7, "cummax": 7, "cumul": 7, "cummin": 7, "cumsum": 7, "cumprod": 7, "product": 7, "find": 7, "describ": [7, 66, 70], "percentil": 7, "datetime_is_numer": 7, "descript": 7, "statist": [7, 71, 72, 138], "summar": 7, "central": 7, "tendenc": 7, "dispers": 7, "analyz": 7, "well": 7, "vari": 7, "what": 7, "fall": 7, "75": 7, "25th": 7, "50th": 7, "75th": 7, "white": 7, "submit": [7, 137], "style": 7, "select_dtyp": 7, "black": 7, "omit": 7, "noth": 7, "affect": 7, "summari": 7, "deviat": 7, "most": 7, "common": 7, "highest": 7, "arbitrarili": 7, "chosen": [7, 28], "via": [7, 123, 137], "2010": 7, "2006": 7, "08": 7, "2004": 7, "31": 7, "field": [7, 50, 56, 58, 59, 131], "access": [7, 46, 51, 52, 57], "diff": 7, "discret": 7, "previou": 7, "shift": 7, "neg": 7, "pct_chang": 7, "percent": 7, "desir": 7, "xor": 7, "accord": [7, 46, 63, 65, 67, 69], "28": 7, "3rd": 7, "overflow": 7, "uint8": 7, "255": [7, 118], "rtruediv": 7, "arr": 7, "shuffl": 7, "guid": [7, 141], "advanc": 7, "shown_level": 7, "inform": [7, 14, 46, 47, 59, 72], "now": [7, 99], "found": [7, 9, 137], "dropna": 7, "drop_dupl": [7, 46, 61], "midx": 7, "lama": 7, "cow": 7, "falcon": 7, "speed": 7, "code": [7, 105, 106, 107, 108, 114, 138], "big": 7, "small": [7, 72], "250": 7, "150": 7, "320": 7, "identifi": [7, 98], "occurr": 7, "ramen": 7, "rate": 7, "brand": 7, "yum": 7, "indomi": 7, "cup": 7, "pack": 7, "droplevel": 7, "set_index": 7, "rename_axi": 7, "from_tupl": 7, "level_1": 7, "level_2": 7, "thresh": 7, "cannot": 7, "would": [7, 136, 137], "notna": 7, "alfr": 7, "batman": 7, "catwoman": 7, "toi": 7, "batmobil": 7, "bullwhip": 7, "born": 7, "1940": 7, "look": [7, 136, 141], "denot": 7, "mark": 7, "eq": 7, "ne": 7, "le": 7, "lt": 7, "ge": 7, "gt": 7, "inequ": 7, "strictli": 7, "cost": 7, "revenu": 7, "300": 7, "220": 7, "175": 7, "225": 7, "long": 7, "assert_series_equ": 7, "assertionerror": 7, "interfac": [7, 15, 20, 21, 22, 23, 24, 26, 48, 49, 123], "precis": 7, "assert_frame_equ": 7, "array_equ": 7, "exactly_equ": 7, "different_column_typ": 7, "different_data_typ": 7, "expr": 7, "run": [7, 131, 138], "vulner": 7, "inject": 7, "express": [7, 137], "document": [7, 103, 135, 137, 138], "queri": 7, "variou": 7, "enhanc": 7, "com": 7, "span": 7, "halflif": 7, "alpha": 7, "ignore_na": 7, "ew": 7, "decai": 7, "term": 7, "center": [7, 77], "mass": 7, "geq": 7, "half": 7, "life": 7, "exp": 7, "ln": 7, "unit": [7, 137], "smooth": 7, "leq": 7, "begin": 7, "account": 7, "imbal": 7, "rel": [7, 46, 49], "ewma": 7, "move": 7, "averag": [7, 72], "w_i": 7, "x_0": 7, "x_1": 7, "x_t": 7, "y_t": 7, "frac": 7, "x_": 7, "recurs": 7, "split": [7, 62, 63, 64, 65, 66, 67, 68, 69, 70], "y_0": 7, "y_": 7, "x_2": 7, "monoton": 7, "increas": [7, 118], "tabl": [7, 15, 16, 46, 51, 52], "engin": 7, "numba": 7, "subclass": 7, "usag": [7, 123, 138], "750000": 7, "615385": 7, "670213": 7, "555556": 7, "650794": 7, "225000": 7, "585786": 7, "523889": 7, "233686": 7, "explod": 7, "replic": 7, "indexlabel": 7, "rowwis": 7, "unstack": 7, "pivot": 7, "necessarili": 7, "melt": 7, "unpivot": 7, "wide": [7, 138], "routin": 7, "determinist": 7, "ac": 7, "interpol": 7, "abcd": 7, "happen": 7, "content": 7, "regular": [7, 137], "mutual": 7, "exclus": 7, "mous": 7, "rabbit": 7, "bbi": 7, "few": [7, 138], "dateutil": 7, "relativedelta": 7, "1m": 7, "month": 7, "2d": 7, "3d": 7, "calendar": 7, "therefor": 7, "wa": [7, 38], "first_valid_index": 7, "rfloordiv": 7, "from_dict": 7, "orient": 7, "Of": 7, "tight": 7, "index_nam": 7, "column_nam": 7, "from_record": 7, "creation": 7, "to_dict": 7, "col_1": 7, "col_2": 7, "row_1": 7, "row_2": 7, "manual": [7, 137], "n1": 7, "n2": 7, "z1": 7, "z2": 7, "coerce_float": 7, "nrow": 7, "record": [7, 100], "sql": 7, "i4": 7, "u1": 7, "ex": 7, "high": 7, "87": 7, "22": 7, "71": 7, "medium": 7, "35": 7, "95": 7, "temp_celsiu": 7, "temp_fahrenheit": 7, "windspe": 7, "2014": 7, "14": 7, "isn": 7, "temp_kelvin": 7, "default_valu": 7, "as_index": 7, "group_kei": 7, "squeez": 7, "involv": [7, 137], "amount": 7, "relev": 7, "influenc": 7, "piec": 7, "longer": 7, "dimension": 7, "grouper": 7, "dataframegroupbi": 7, "conveni": 7, "parrot": 7, "380": 7, "370": 7, "375": 7, "captiv": 7, "wild": 7, "from_arrai": 7, "390": 7, "350": 7, "210": 7, "185": 7, "l": 7, "123": 7, "head": 7, "your": [7, 136, 137], "larger": [7, 134], "tail": 7, "allig": 7, "bee": 7, "lion": 7, "shark": 7, "whale": 7, "zebra": 7, "xlabels": 7, "xrot": 7, "ylabels": 7, "yrot": 7, "sharex": 7, "sharei": 7, "legend": 7, "hold": 7, "clockwis": 7, "share": [7, 37, 38, 137], "invis": 7, "rcparam": 7, "unmodifi": 7, "draw": [7, 134], "idxmax": 7, "maxima": 7, "argmax": 7, "food": 7, "consumpt": 7, "argentina": 7, "51": 7, "103": 7, "55": 7, "48": 7, "co2_emiss": 7, "37": 7, "19": 7, "66": 7, "1712": 7, "pork": 7, "wheat": 7, "beef": 7, "idxmin": 7, "minima": 7, "argmin": 7, "soft": 7, "verbos": 7, "buf": 7, "max_col": 7, "memory_usag": 7, "show_count": 7, "null_count": 7, "print": [7, 123], "concis": 7, "max_info_column": 7, "writabl": 7, "buffer": 7, "sy": 7, "stdout": 7, "send": 7, "process": [7, 137], "switch": 7, "truncat": 7, "total": [7, 66, 70], "never": 7, "introspect": 7, "human": [7, 109], "readabl": 7, "made": 7, "consum": 7, "resourc": 7, "frequent": 7, "ask": 7, "question": 7, "max_info_row": 7, "int_valu": 7, "text_valu": 7, "beta": 7, "gamma": 7, "epsilon": [7, 72], "float_valu": 7, "int_col": 7, "text_col": 7, "float_col": 7, "rangeindex": 7, "248": 7, "byte": 7, "pipe": 7, "text": 7, "file": [7, 19, 46, 47, 50, 109, 131, 135, 138], "io": 7, "stringio": 7, "getvalu": 7, "df_info": 7, "txt": 7, "w": [7, 46, 77, 79, 81], "utf": 7, "260": 7, "fine": 7, "tune": 7, "optim": [7, 72], "random_strings_arrai": 7, "choic": 7, "column_1": 7, "column_2": 7, "column_3": 7, "1000000": 7, "999999": 7, "mb": 7, "165": 7, "allow_dupl": 7, "verifi": 7, "lib": 7, "newcol": 7, "99": 7, "col0": 7, "linear": 7, "limit_direct": 7, "limit_area": 7, "isetitem": 7, "analogu": 7, "arraylik": 7, "unlik": 7, "_never_": 7, "isin": 7, "pattern": 7, "num_w": 7, "leg": 7, "wing": 7, "spider": 7, "detect": [7, 116, 138], "isnul": 7, "invers": 7, "1939": 7, "joker": 7, "yield": 7, "being": [7, 46], "belong": 7, "iterrow": 7, "itertupl": 7, "speci": 7, "bear": 7, "marsupi": 7, "popul": 7, "1864": 7, "22000": 7, "80000": 7, "polar": 7, "koala": 7, "sep": 7, "iteritem": 7, "someth": 7, "possibli": 7, "underscor": 7, "hawk": 7, "excel": 7, "vlookup": 7, "lexicograph": 7, "intersect": [7, 129], "cross": [7, 64], "cartesian": 7, "overlap": 7, "one_to_on": 7, "one_to_mani": 7, "m": 7, "many_to_on": 7, "many_to_mani": 7, "versionad": 7, "23": 7, "k0": 7, "k1": 7, "k2": 7, "k3": 7, "k4": 7, "k5": 7, "a0": 7, "a1": 7, "a2": 7, "a3": 7, "a4": 7, "a5": 7, "b0": 7, "b1": 7, "b2": 7, "_caller": 7, "_other": 7, "key_cal": 7, "key_oth": 7, "kurt": 7, "kurtosi": 7, "fisher": 7, "last_valid_index": 7, "lookup": 7, "row_label": 7, "col_label": 7, "fanci": 7, "mad": 7, "map_dataframe_col": 7, "colmap": [7, 45, 97, 100], "try_cast": 7, "warm": 7, "cold": 7, "fish": 7, "blood": 7, "id_var": 7, "value_var": 7, "var_nam": 7, "value_nam": 7, "massag": 7, "pivot_t": 7, "spreadsheet": 7, "organ": [7, 46, 47], "myvarnam": 7, "myvalnam": 7, "around": [7, 77], "variable_0": 7, "variable_1": 7, "contribut": [7, 141], "deepli": 7, "interrog": 7, "nbyte": 7, "complex128": 7, "5000": 7, "0j": 7, "128": [7, 134], "40000": 7, "footprint": 7, "180000": 7, "storag": 7, "5244": 7, "left_on": 7, "right_on": 7, "left_index": 7, "right_index": 7, "_x": 7, "_y": 7, "databas": 7, "caveat": 7, "At": [7, 37, 38], "_merg": 7, "left_onli": 7, "right_onli": 7, "merge_ord": 7, "nearest": 7, "lkei": 7, "baz": 7, "rkei": 7, "value_x": 7, "value_i": 7, "_left": 7, "_right": 7, "value_left": 7, "value_right": 7, "traceback": 7, "recent": 7, "rmod": 7, "bird": 7, "arthropod": 7, "hors": 7, "ostrich": 7, "rmul": 7, "nlargest": 7, "descend": 7, "largest": 7, "sort_valu": 7, "ascend": 7, "priorit": 7, "nsmallest": 7, "59000000": 7, "65000000": 7, "434000": 7, "337000": 7, "11300": 7, "gdp": 7, "1937894": 7, "2583560": 7, "12011": 7, "4520": 7, "12128": 7, "17036": 7, "182": 7, "38": 7, "311": 7, "IT": 7, "fr": 7, "mt": 7, "mv": [7, 137], "bn": 7, "nr": 7, "tv": 7, "ai": 7, "itali": 7, "franc": 7, "malta": 7, "maldiv": 7, "brunei": 7, "iceland": 7, "nauru": 7, "tuvalu": 7, "anguilla": 7, "ti": 7, "maintain": [7, 72], "notnul": 7, "smallest": [7, 72], "nuniqu": 7, "distinct": 7, "fill_method": 7, "percentag": [7, 77, 78, 79, 80], "immedi": 7, "stop": 7, "increment": 7, "bdai": 7, "chg": 7, "91": 7, "85": 7, "011111": 7, "065934": 7, "french": 7, "deutsch": 7, "italian": 7, "lira": 7, "1980": 7, "0405": 7, "0963": 7, "3149": 7, "gr": 7, "7246": 7, "7482": 7, "8519": 7, "804": 7, "74": 7, "810": 7, "860": 7, "013810": 7, "013684": 7, "006549": 7, "053365": 7, "059318": 7, "061876": 7, "goog": 7, "appl": 7, "stock": 7, "volum": 7, "2016": 7, "1769950": 7, "30586265": 7, "2015": 7, "1500923": 7, "40912316": 7, "1371819": 7, "41403351": 7, "179241": 7, "094112": 7, "252395": 7, "011860": 7, "chainabl": 7, "data_keyword": 7, "arg1": 7, "arg2": 7, "arg3": 7, "suppos": 7, "wide_to_long": 7, "panel": 7, "friendli": 7, "finer": 7, "relat": [7, 118, 136], "zoo": 7, "q": 7, "lev1": 7, "lev2": 7, "lev3": 7, "lev4": 7, "aggfunc": 7, "margin": 7, "margins_nam": 7, "manner": 7, "themselv": 7, "subtot": 7, "grand": 7, "pop": [7, 75], "389": 7, "max_spe": 7, "rpow": 7, "fewer": 7, "thank": 7, "quantil": 7, "higher": 7, "midpoint": 7, "li": 7, "j": 7, "fraction": [7, 72], "part": [7, 66, 70], "whichev": 7, "2011": 7, "07": 7, "environ": 7, "thu": 7, "punctuat": 7, "besid": 7, "digit": 7, "area": [7, 17, 46, 75, 77, 78, 79, 87, 89, 91, 111], "cm": 7, "etc": 7, "introduc": [7, 137], "fail": [7, 12, 131, 132], "multidimension": 7, "__getitem__": 7, "slightli": 7, "syntax": 7, "bitwis": 7, "preced": 7, "cousin": 7, "syntact": 7, "parser": 7, "likewis": 7, "itself": 7, "ineffici": 7, "numexpr": 7, "namespac": 7, "pars": 7, "problem": 7, "disallow": 7, "exclam": 7, "dollar": 7, "sign": 7, "euro": 7, "outsid": 7, "ascii": 7, "0001": 7, "007f": 7, "pep": 7, "3131": 7, "whitespac": 7, "hashtag": 7, "comment": [7, 136], "escap": 7, "confus": 7, "lexic": 7, "http": [7, 137], "org": 7, "lexical_analysi": 7, "na_opt": 7, "pct": 7, "direct": 7, "dens": 7, "lowest": 7, "bottom": 7, "penguin": 7, "snake": 7, "number_leg": 7, "default_rank": 7, "max_rank": 7, "2nd": 7, "na_bottom": 7, "pct_rank": 7, "625": 7, "decreas": 7, "distanc": 7, "inexact": 7, "satisfi": 7, "equat": 7, "reindex_lik": 7, "index_label": 7, "column_label": 7, "highli": 7, "clarifi": 7, "intent": 7, "fiction": 7, "firefox": 7, "chrome": 7, "safari": 7, "ie10": 7, "konqueror": 7, "http_statu": 7, "404": 7, "301": 7, "response_tim": 7, "iceweasel": 7, "comodo": 7, "dragon": 7, "user_ag": 7, "illustr": 7, "date_index": 7, "price": 7, "101": 7, "89": 7, "88": 7, "06": 7, "decid": [7, 136], "cover": 7, "wider": 7, "date_index2": 7, "29": 7, "2009": 7, "did": 7, "scheme": 7, "Its": 7, "low": 7, "extra": [7, 46, 105, 107, 108, 110, 112, 113, 114, 115, 117, 118, 119, 120, 121], "throw": 7, "underli": 7, "index_mapp": 7, "columns_mapp": 7, "step": 7, "num_arm": 7, "limb": 7, "reorder_level": 7, "rearrang": 7, "reorder": 7, "reptil": 7, "diet": 7, "omnivor": 7, "carnivor": 7, "dynam": 7, "matter": 7, "whatev": 7, "nest": 7, "compil": [7, 137], "section": [7, 137], "condit": [7, 17, 18, 19], "under": [7, 132], "hood": 7, "lot": 7, "encourag": 7, "experi": 7, "plai": 7, "gain": 7, "intuit": 7, "400": 7, "bat": 7, "bait": 7, "xyz": 7, "r": 7, "ba": 7, "peculiar": 7, "why": 7, "hand": 7, "previous": 7, "silent": 7, "loffset": 7, "start_dai": 7, "timedeltaindex": 7, "bm": 7, "bq": 7, "bucket": 7, "evenli": 7, "subdivid": 7, "5min": 7, "epoch": 7, "1970": 7, "end_dai": 7, "ceil": 7, "earlier": 7, "releas": [7, 139], "downsampl": 7, "3t": 7, "custom_resampl": 7, "year": 7, "quarter": 7, "period_rang": 7, "2012": 7, "2013": 7, "dec": 7, "2012q1": 7, "2012q2": 7, "2012q3": 7, "2012q4": 7, "2013q1": 7, "2013q2": 7, "2013q3": 7, "2013q4": 7, "2018q1": 7, "2018q2": 7, "2018q3": 7, "2018q4": 7, "week_start": 7, "d2": 7, "morn": 7, "afternoon": 7, "110": 7, "140": 7, "fix": [7, 79, 99, 137], "rng": [7, 27, 34, 35, 40, 41], "7min": 7, "44": 7, "58": 7, "7t": 7, "17min": 7, "54": 7, "17t": 7, "52": 7, "39": 7, "41": 7, "47": 7, "23h30min": 7, "63": 7, "contrast": 7, "2min": 7, "tseri": 7, "to_offset": 7, "19min": 7, "ts_out": 7, "old": [7, 57], "sequenti": 7, "fly": 7, "jump": 7, "nonexist": 7, "genu": 7, "win_typ": 7, "baseindex": 7, "datetimelik": 7, "get_window_bound": 7, "signal": 7, "signatur": 7, "df_time": 7, "20130101": 7, "fixedforwardwindowindex": 7, "window_s": 7, "gaussian": 7, "986207": 7, "958621": 7, "rsub": 7, "random_st": 7, "reproduc": [7, 137], "probabl": [7, 75, 77, 78, 79, 87, 89, 91], "infinit": 7, "bitgener": 7, "randomst": 7, "stat": [7, 72], "randomli": [7, 134], "seriesgroupbi": 7, "num_specimen_seen": 7, "hierarchi": [7, 49], "datetimetz": 7, "tz": 7, "sem": 7, "set_axi": 7, "ii": 7, "set_flag": 7, "allows_duplicate_label": 7, "flag": 7, "attr": 7, "global": 7, "metadata": [7, 46], "reflect": 7, "intend": 7, "correct": [7, 131], "encompass": 7, "defer": 7, "until": 7, "improv": [7, 109], "realign": 7, "notimplementederror": 7, "inferred_freq": 7, "modul": [7, 138], "eom": 7, "That": 7, "na_valu": [7, 72], "tshift": 7, "skew": 7, "slice_shift": 7, "pai": 7, "sort_index": 7, "quicksort": 7, "na_posit": 7, "sort_remain": 7, "mergesort": 7, "heapsort": 7, "stabl": 7, "algorithm": 7, "multilevel": 7, "builtin": 7, "notabl": 7, "234": 7, "independ": 7, "col4": 7, "natur": 7, "natsort": 7, "github": [7, 136, 137], "sethmmorton": 7, "packag": [7, 139], "0hr": 7, "128hr": 7, "72hr": 7, "48hr": 7, "96hr": 7, "index_natsort": 7, "know": 7, "safe": 7, "project": [7, 135], "to_fram": 7, "prime": 7, "even_prim": 7, "odd_prim": 7, "df_a": 7, "df_0a": 7, "prescrib": 7, "onto": 7, "analogi": 7, "collect": 7, "book": 7, "reorgan": 7, "df_single_level_col": 7, "multicol1": 7, "kg": 7, "pound": 7, "df_multi_level_cols1": 7, "multicol2": 7, "df_multi_level_cols2": 7, "typic": 7, "df_multi_level_cols3": 7, "person_id": 7, "61": 7, "49": 7, "786076": 7, "237417": 7, "269219": 7, "205609": 7, "swapax": 7, "axis1": 7, "axis2": 7, "interchang": 7, "swap": 7, "swaplevel": 7, "innermost": 7, "grade": 7, "exam": 7, "coursework": 7, "histori": 7, "geographi": 7, "januari": 7, "februari": 7, "march": 7, "april": 7, "0th": 7, "to_clipboard": 7, "clipboard": 7, "past": 7, "csv": 7, "delimit": 7, "to_csv": 7, "comma": 7, "read_clipboard": 7, "read_csv": 7, "platform": 7, "linux": 7, "xclip": 7, "xsel": 7, "pyqt4": 7, "maco": 7, "develop": [7, 137], "pyperclip": 7, "render": 7, "wrote": 7, "to_html": 7, "path_or_buf": 7, "na_rep": 7, "float_format": 7, "header": [7, 132], "quotechar": 7, "linetermin": 7, "chunksiz": 7, "date_format": 7, "doublequot": 7, "escapechar": 7, "strict": 7, "storage_opt": 7, "pathlik": 7, "newlin": 7, "disabl": [7, 137], "alias": 7, "gz": 7, "bz2": 7, "zip": 7, "xz": 7, "zst": 7, "tar": 7, "gzip": 7, "zstd": 7, "zipfil": 7, "gzipfil": 7, "bz2file": 7, "zstandard": 7, "zstdcompressor": 7, "tarfil": 7, "As": 7, "archiv": 7, "compresslevel": 7, "mtime": 7, "prevent": 7, "quote_minim": 7, "quote_nonnumer": 7, "linesep": 7, "line_termin": 7, "librari": [7, 8], "recogn": 7, "european": 7, "decod": [7, 105, 106, 107, 108, 114], "sens": 7, "connect": [7, 99], "host": 7, "port": 7, "usernam": 7, "password": 7, "url": 7, "urllib": 7, "s3": 7, "gc": 7, "fsspec": 7, "to_excel": 7, "raphael": 7, "donatello": 7, "red": 7, "purpl": 7, "weapon": 7, "bo": 7, "staff": 7, "nraphael": 7, "ndonatello": 7, "compression_opt": 7, "archive_nam": 7, "folder": [7, 46, 47], "pathlib": 7, "filepath": 7, "subfold": 7, "mkdir": 7, "exist_ok": 7, "makedir": 7, "include_index": 7, "excel_writ": 7, "sheet_nam": 7, "sheet1": 7, "startrow": 7, "startcol": 7, "merge_cel": 7, "inf_rep": 7, "freeze_pan": 7, "sheet": 7, "xlsx": 7, "excelwrit": 7, "written": 7, "save": [7, 46, 49], "eras": 7, "2f": 7, "1234": 7, "dump": 7, "openpyxl": 7, "xlsxwriter": 7, "writer": 7, "xl": 7, "xlsm": 7, "xlwt": 7, "unicod": 7, "nativ": 7, "infin": 7, "log": [7, 123], "bottommost": 7, "rightmost": 7, "frozen": 7, "read_excel": 7, "styler": 7, "serial": 7, "workbook": 7, "rewrit": 7, "sheet_name_1": 7, "wish": [7, 136], "sheet_name_2": 7, "sheet_name_3": 7, "output1": 7, "to_feath": 7, "feather": 7, "root": [7, 46, 49, 137], "directori": [7, 46, 49, 109, 130, 131, 137], "partit": 7, "pyarrow": 7, "write_feath": 7, "compression_level": 7, "to_parquet": 7, "to_gbq": 7, "destination_t": 7, "project_id": 7, "reauth": 7, "if_exist": 7, "auth_local_webserv": 7, "table_schema": 7, "progress_bar": 7, "credenti": 7, "googl": [7, 137], "bigqueri": 7, "gbq": 7, "authent": 7, "instruct": 7, "tablenam": 7, "chunk": 7, "destin": [7, 109], "pandas_gbq": 7, "tablecreationerror": 7, "recreat": [7, 123], "local": [7, 137], "webserv": 7, "flow": 7, "consol": 7, "band": 7, "schema": 7, "job": 7, "tqdm": 7, "progress": [7, 140], "upload": 7, "auth": 7, "compute_engin": 7, "servic": 7, "oauth2": 7, "service_account": 7, "read_gbq": 7, "to_hdf": 7, "complevel": 7, "complib": 7, "min_items": 7, "nan_rep": 7, "data_column": 7, "hdf5": 7, "hdfstore": 7, "hdf": 7, "lost": 7, "zlib": 7, "lzo": 7, "bzip2": 7, "blosc": 7, "v0": 7, "compressor": 7, "blosclz": 7, "lz4": 7, "lz4hc": 7, "snappi": 7, "issu": [7, 123, 136], "fast": 7, "searchabl": 7, "pytabl": 7, "wors": 7, "get_opt": 7, "default_format": 7, "fallback": 7, "disk": 7, "read_hdf": 7, "to_orc": 7, "orc": 7, "parquet": 7, "to_sql": 7, "h5": 7, "col_spac": 7, "formatt": 7, "sparsifi": 7, "justifi": 7, "show_dimens": 7, "bold_row": 7, "border": 7, "table_id": 7, "render_link": 7, "css": 7, "px": 7, "abil": 7, "configur": [7, 137], "set_opt": 7, "inherit": 7, "unset": 7, "europ": 7, "bold": 7, "tag": 7, "to_str": 7, "to_json": 7, "double_precis": 7, "force_ascii": 7, "date_unit": 7, "default_handl": 7, "indent": 7, "json": [7, 46, 47, 50, 131, 141], "unix": 7, "compon": 7, "iso": 7, "millisecond": 7, "iso8601": 7, "govern": 7, "microsecond": 7, "nanosecond": 7, "handler": 7, "suitabl": 7, "serialis": 7, "incorrect": 7, "read_json": 7, "stdlib": 7, "pandas_vers": 7, "latest": 7, "revis": 7, "primarykei": 7, "to_latex": 7, "column_format": 7, "longtabl": 7, "multicolumn": 7, "multicolumn_format": 7, "multirow": 7, "caption": [7, 131, 138], "tabular": 7, "usepackag": 7, "booktab": 7, "main": 7, "extern": 7, "tex": 7, "config": 7, "rcl": 7, "preambl": 7, "cline": 7, "full_capt": 7, "short_capt": 7, "short": 7, "lll": 7, "toprul": 7, "midrul": 7, "bottomrul": 7, "to_markdown": 7, "wt": 7, "markdown": 7, "tabul": 7, "animal_1": 7, "elk": 7, "pig": 7, "animal_2": 7, "quetzal": 7, "tablefmt": 7, "to_numpi": 7, "float16": 7, "float32": [7, 120], "coerc": 7, "asarrai": 7, "heterogen": 7, "engine_kwarg": 7, "write_t": 7, "unsign": 7, "spars": 7, "read_orc": 7, "instal": [7, 137, 138], "featur": 7, "arrow": 7, "bytesio": 7, "doctest": 7, "skip": 7, "seek": 7, "auto": 7, "partition_col": 7, "fname": 7, "fastparquet": 7, "unavail": 7, "brotli": 7, "read_parquet": 7, "to_period": 7, "2001": 7, "2002": 7, "2003": 7, "yearli": 7, "to_pickl": 7, "protocol": 7, "pickl": 7, "pickler": 7, "highest_protocol": 7, "_": 7, "paragraph": 7, "read_pickl": 7, "original_df": 7, "dummi": 7, "pkl": 7, "unpickled_df": 7, "to_record": 7, "column_dtyp": 7, "index_dtyp": 7, "recarrai": 7, "analog": 7, "rec": 7, "i8": 7, "f8": 7, "con": 7, "sqlalchemi": 7, "sqlite3": 7, "db": 7, "legaci": 7, "dispos": 7, "closur": 7, "flavor": 7, "batch": 7, "datatyp": 7, "claus": 7, "pd_tabl": 7, "conn": 7, "data_it": 7, "rowcount": 7, "cursor": 7, "exact": 7, "stipul": 7, "read_sql": 7, "unawar": 7, "www": 7, "dev": 7, "0249": 7, "sqlite": 7, "create_engin": 7, "echo": 7, "scratch": 7, "fetchal": 7, "dbapi": 7, "especi": 7, "to_stata": 7, "convert_d": 7, "write_index": 7, "byteord": 7, "time_stamp": 7, "data_label": 7, "variable_label": 7, "114": 7, "convert_strl": 7, "value_label": 7, "export": 7, "stata": 7, "dta": 7, "tc": 7, "td": 7, "tm": 7, "tw": 7, "tq": 7, "ty": 7, "littl": 7, "117": 7, "118": 7, "119": 7, "244": 7, "767": 7, "exce": 7, "capac": 7, "unintend": 7, "consequ": 7, "novemb": 7, "se": 7, "strl": 7, "read_stata": 7, "statawrit": 7, "statawriter117": 7, "line_width": 7, "min_row": 7, "max_colwidth": 7, "to_timestamp": 7, "to_xarrai": 7, "xarrai": 7, "dataarrai": 7, "df_multiindex": 7, "to_xml": 7, "path_or_buff": 7, "root_nam": 7, "row_nam": 7, "attr_col": 7, "elem_col": 7, "xml_declar": 7, "pretty_print": 7, "lxml": 7, "stylesheet": 7, "xml": 7, "children": 7, "uri": 7, "declar": 7, "pretti": 7, "break": 7, "etre": 7, "build": [7, 137], "tree": [7, 130, 131], "xslt": 7, "script": 7, "xmln": 7, "invok": 7, "718282": 7, "414214": 7, "389056": 7, "108": 7, "121": 7, "vice": 7, "versa": 7, "accessor": 7, "permut": 7, "d1": 7, "df1_transpos": 7, "alic": 7, "bob": 7, "score": 7, "emploi": 7, "kid": 7, "df2_transpos": 7, "shorthand": 7, "k": [7, 63, 64, 137], "59": 7, "56": 7, "57": 7, "unspecifi": 7, "try_remap_col": 7, "to_orig": [7, 45, 94, 95], "color": [7, 134], "tri": 7, "tz_convert": 7, "zone": 7, "tzinfo": 7, "ia": 7, "clock": 7, "due": 7, "dst": 7, "aris": 7, "utc": 7, "occur": [7, 87], "situat": 7, "dictat": 7, "transit": 7, "hour": 7, "signifi": 7, "design": 7, "ambiguoustimeerror": 7, "shift_forward": 7, "shift_backward": 7, "nonexistenttimeerror": 7, "cet": 7, "Be": 7, "imposs": 7, "46": 7, "caus": 7, "warsaw": 7, "999999999": 7, "1h": 7, "unmap_dataframe_col": 7, "unmap": 7, "filter_func": 7, "There": [7, 131], "coercibl": 7, "new_df": 7, "proport": [7, 66, 70, 141], "ant": 7, "first_nam": 7, "ann": [7, 45, 46, 52, 72, 75, 77, 78, 79, 85, 87, 89, 91], "beth": 7, "middle_nam": 7, "smith": 7, "louis": 7, "352": 7, "916667": 7, "056367": 7, "264": 7, "687500": 7, "042275": 7, "drop_level": 7, "pure": 7, "slicer": 7, "superset": 7, "locomot": 7, "walk": 7, "fli": 7, "_axis_len": 7, "_axis_nam": 7, "_axis_numb": 7, "_axis_ord": 7, "_axis_to_axis_numb": 7, "_handled_typ": 7, "_accessor": 7, "_agg_examples_doc": 7, "nexampl": 7, "naggreg": 7, "nsum": 7, "nmin": 7, "ndiffer": 7, "nmax": 7, "ndatafram": 7, "nx": 7, "ny": 7, "nz": 7, "n0": 7, "n3": 7, "ndtype": 7, "_agg_summary_and_see_also_doc": 7, "nthe": 7, "nindex": 7, "narrai": 7, "nsee": 7, "ncore": 7, "_can_fast_transpos": 7, "_constructor": 7, "_data": 7, "_hidden_attr": 7, "frozenset": 7, "get_valu": 7, "_info_axi": 7, "_info_axis_nam": 7, "_info_axis_numb": 7, "_internal_nam": 7, "_cacher": 7, "_item_cach": 7, "_cach": 7, "_subtyp": 7, "_name": 7, "_default_kind": 7, "_default_fill_valu": 7, "_metadata": 7, "__array_struct__": 7, "__array_interface__": 7, "_flag": 7, "_internal_names_set": 7, "weakref": 7, "referencetyp": 7, "_is_homogeneous_typ": 7, "_is_mixed_typ": 7, "_seri": 7, "_stat_axi": 7, "_stat_axis_nam": 7, "_stat_axis_numb": 7, "_typ": 7, "_valu": 7, "iat": 7, "experiment": 7, "20180310": 7, "df_empti": 7, "ser_empti": 7, "indexerror": 7, "primarili": 7, "mydict": 7, "3000": 7, "4000": 7, "contrari": 7, "indexingerror": 7, "unalign": 7, "cobra": 7, "viper": 7, "sidewind": 7, "shield": 7, "mention": 7, "iii": 7, "orig_data": 7, "help": 7, "denomin": 7, "implicit": [7, 123], "upcast": 7, "accommod": 7, "deal": 7, "find_common_typ": 7, "uint64": 7, "94": 7, "170": 7, "115": 7, "broadest": 7, "_attr": 7, "annot": [10, 16, 17, 46, 47, 49, 52, 56, 61, 71, 72, 73, 75, 76, 77, 78, 79, 86, 87, 88, 89, 90, 91, 104, 109, 131, 133, 134, 138], "ann_id": [10, 46], "image_id": [11, 45], "assert": 12, "compos": 14, "cocofilt": [17, 18, 19], "area_rng": [17, 46], "is_crowd": [17, 46], "composit": [17, 18, 19, 21, 23, 26, 46, 74], "andfilt": [17, 18, 19, 46], "strategi": [17, 18, 19, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 49, 67, 68], "havingvaluefilterstrategi": [17, 18, 19], "rng_strategi": 17, "inrangefilterstrategi": 17, "characterist": [17, 18, 19], "composefilt": [17, 18, 19, 21, 26, 46], "AND": [17, 18, 19, 72], "valuefilterstrategi": [17, 18, 19, 28, 37, 38, 39], "rangefilterstrategi": [17, 27, 40, 41], "nm": [18, 19], "super_nm": 18, "super": [18, 46, 138], "constraint": 22, "_appli": [22, 27, 28], "negat": 25, "fltr": 25, "columnfilt": [27, 28], "rangestrategi": 27, "set_strategi": [27, 28], "having_valu": 28, "any_valu": 28, "all_valu": 28, "discard": 28, "valuestrategi": [28, 39], "valuefilt": 29, "rangefilt": 29, "visual": [37, 38, 134], "suffici": 38, "colsmapp": 45, "enabl": [45, 46, 52], "orig": [45, 94], "annotation_id": 45, "category_id": 45, "img": [45, 46, 52, 72, 75, 77, 78, 79, 85, 87, 89, 91], "lic": 45, "license_id": 45, "advis": 46, "img_df": 46, "ann_df": 46, "cat_df": 46, "lic_df": 46, "licens": [46, 131], "coco_dir": 46, "cocohelperpath": 46, "cocovalidationerror": 46, "_copy_imag": 46, "target_img_dir": 46, "_read_annotations_fil": 46, "annotation_fil": 46, "_remove_unlinked_ann": 46, "_valid": 46, "drop_duplicate_ann": 46, "drop_duplicate_cat": 46, "drop_duplicate_img": 46, "drop_duplicate_licens": 46, "drop_label": 46, "unlabel": 46, "drop_unlabel": 46, "cfilter": 46, "img_id": [46, 134, 141], "img_nm": 46, "cat_id": 46, "cat_nm": 46, "supercat_nm": 46, "drop_orphan": 46, "crowd": 46, "orphan": 46, "filter_ann": 46, "filter_cat": 46, "filter_img": 46, "filtered_ann": 46, "filtered_cat": 46, "filtered_img": 46, "get_ann_sampl": 46, "get_img": 46, "get_img_sampl": 46, "ann_fnam": [46, 47], "ann_dir": [46, 47, 49], "img_dir": [46, 47, 49], "load_data": 46, "load_json": 46, "json_annotations_fil": 46, "coco_help": [46, 52, 56, 57, 58, 59, 60, 61, 72, 137], "redund": [46, 118], "new_info_dict": 46, "fix_img_path": 46, "copy_imag": 46, "notimpl": 46, "to_coco": 46, "pycocotool": 46, "to_json_dataset": 46, "write_annotations_fil": 46, "annotation_file_path": 46, "labelled_img": 46, "root_path": 46, "unlabelled_img": 46, "cocovalid": 46, "deleg": 49, "out_coco_dir": 49, "save_imag": 49, "out_coco_path": 49, "extract_ann": 52, "joined_ann": 52, "extract_cat": 52, "joined_cat": 52, "extract_img": 52, "joined_img": 52, "anns_cat": 52, "anns_cats_img": 52, "anns_img": 52, "anns_imgs_cat": 52, "cats_ann": 52, "cats_anns_img": 52, "cats_imgs_ann": 52, "imgs_ann": 52, "imgs_anns_cat": 52, "imgs_cats_ann": 52, "todo": [54, 55, 75, 77, 78, 79, 87, 89, 91, 103, 137], "cat_id_map": 56, "image_id_map": 56, "portion": 62, "fold": [63, 64], "splitter": [64, 66, 70, 141], "kfold": 64, "n_fold": 64, "stratifi": [64, 70], "proportion": [66, 70], "_get_id": [66, 70], "ch": [66, 70, 109, 134, 141], "_get_n_sampl": [66, 70], "n_imag": [66, 70], "cocodataset": [68, 75, 77, 78, 79, 87, 89, 91], "proportionaldatasplitt": [70, 141], "_compute_label_ratio": 70, "images_by_label": 70, "ratio": [70, 72, 89], "__get_annotations_ratio": 72, "pick": [72, 134], "__get_category_ratio": 72, "return_nm": 72, "get_annotation_size_stat": 72, "bbox": [72, 75, 77, 78, 79, 82, 87, 89, 91, 134], "rescal": [72, 109], "loos": 72, "resiz": 72, "get_image_size_stat": 72, "ep": 72, "1e": 72, "get_optimal_image_s": 72, "n_pixel": 72, "lose": 72, "pixel": [72, 77, 78, 79, 80, 81, 84, 107, 114, 120], "cat_ids_ratio": 72, "cat_nms_ratio": 72, "nb_ann": 72, "nb_cat": 72, "nb_img": 72, "nb_imgs_wo_ann": 72, "compute_bbox_area": [75, 77, 78, 79, 87, 89, 91], "transform_dataset": [75, 77, 78, 79, 87, 89, 91], "out_dir": [75, 77, 78, 79, 87, 89, 91], "eagerli": [75, 77, 78, 79, 87, 89, 91], "lazi": [75, 77, 78, 79, 87, 89, 91], "crop": [77, 79, 80, 81, 82, 83, 84, 85], "xywh": [78, 82, 83, 84, 85], "enum": 80, "sizemod": [81, 84], "img_shap": 84, "flip": [86, 87], "horizontal_prob": 87, "vertical_prob": 87, "_flip_bbox": 87, "_flip_img": 87, "_flip_segment": 87, "_resize_bbox": 89, "_resize_image_arrai": 89, "output_s": 89, "_resize_segment": 89, "util": [94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 126, 127, 128, 129], "colmapp": [94, 95], "to_new": 94, "data_fram": 97, "id_col_mapp": [97, 100], "ignore_column": 98, "identif": 98, "connected_df": 99, "fk_column": 99, "merge_index_map": 99, "path_a": 103, "path_b": 103, "maskconvert": [105, 107, 108], "dest_dir": 109, "scale": [109, 138], "visibl": [109, 134], "ey": 109, "gui": 109, "tool": 109, "rle_cod": [110, 121], "512": [110, 120], "_supportsdtyp": [110, 120, 121], "supportsindex": [110, 120, 121], "_dtypedict": [110, 120, 121], "inspect": 116, "simplify_toler": 118, "polygon_simplify_toler": 118, "background": 118, "vertex": 118, "polygon_cod": 120, "contextdecor": 123, "context": 123, "decor": 123, "math": 123, "factori": 123, "end_msg": 123, "some_func": 123, "sleep": 123, "start_msg": 123, "elaps": 123, "instanti": 123, "messag": [123, 132], "log_fn": 123, "_recreate_cm": 123, "shot": 123, "_generatorcontextmanag": 123, "11647": 123, "obj_val": 127, "obj": 128, "__iter__": 128, "__len__": 128, "_annotation_ids_are_uniqu": 131, "json_data": 131, "_annotations_have_mandatory_kei": 131, "mandatory_kei": 131, "mandatori": 131, "_annotations_have_valid_category_id": 131, "_annotations_have_valid_image_id": 131, "_categories_have_mandatory_kei": 131, "recommended_kei": 131, "_category_ids_are_uniqu": 131, "_has_valid_dataset_tre": 131, "dataset_dir": 131, "_image_ids_are_uniqu": 131, "_images_have_mandatory_kei": 131, "_json_has_mandatory_kei": 131, "feed": 131, "_licenses_ids_are_uniqu": 131, "validate_dataset": 131, "valida": 131, "validate_dir": 131, "json_fnam": 131, "dir": 131, "expected_typ": 132, "msg_header": 132, "deliv": 132, "_visual": 134, "show_bbox": [134, 141], "show_segment": [134, 141], "titl": 134, "dpi": 134, "plt": 134, "rubric": 134, "fig": 134, "draw_bounding_box": 134, "bbox_thick": 134, "grai": 134, "thick": 134, "draw_segmentation_mask": 134, "load_image_arrai": 134, "pick_color_palett": 134, "rgb": 134, "palett": 134, "triplet": 134, "twelv": 134, "pick_random_color": 134, "pend": 136, "team": [136, 137], "appreci": [136, 137], "kera": 137, "cv": 137, "discuss": 137, "propos": 137, "feedback": 137, "bug": 137, "wrong": 137, "colab": 137, "minor": 137, "feel": 137, "pr": 137, "fork": 137, "repositori": 137, "readi": 137, "branch": 137, "master": 137, "cla": 137, "continu": 137, "integr": 137, "report": 137, "action": 137, "approv": 137, "clone": 137, "gh": 137, "repo": 137, "remot": 137, "cd": 137, "pip": [137, 139], "py": 137, "cli": 137, "command": 137, "abl": 137, "pytest": 137, "bazel": 137, "build_dep": 137, "custom_op": 137, "kerascv": 137, "keras_cv": 137, "your_regex": 137, "cut_mix_test": 137, "layer": 137, "preprocess": 137, "ll": 137, "cp": 137, "test_custom_op": 137, "adher": 137, "styleguid": 137, "sure": 137, "guidelin": 137, "microsoft": 138, "todai": 138, "adopt": 138, "tutori": 138, "wheel": 138, "page": [138, 139], "py3": 139, "whl": 139, "load_dict": 141, "cocovisu": 141, "ch_train": 141, "ch_val": 141, "ch_test": 141}, "objects": {"": [[0, 0, 0, "-", "cocohelper"]], "cocohelper": [[1, 0, 0, "-", "adapters"], [6, 0, 0, "-", "dataframe"], [8, 0, 0, "-", "errors"], [14, 0, 0, "-", "filters"], [44, 0, 0, "-", "helper"], [48, 0, 0, "-", "importer"], [51, 0, 0, "-", "joins"], [53, 0, 0, "-", "merge"], [62, 0, 0, "-", "splitters"], [71, 0, 0, "-", "stats"], [73, 0, 0, "-", "transforms"], [92, 0, 0, "-", "utils"], [130, 0, 0, "-", "validator"], [133, 0, 0, "-", "visualizer"]], "cocohelper.adapters": [[2, 0, 0, "-", "binary_mask_adapter"], [4, 0, 0, "-", "dataset_adapter"]], "cocohelper.adapters.binary_mask_adapter": [[3, 1, 1, "", "BinaryMaskDatasetAdapter"]], "cocohelper.adapters.binary_mask_adapter.BinaryMaskDatasetAdapter": [[3, 2, 1, "", "_abc_impl"], [3, 3, 1, "", "extract_bbox_from_binary_mask"], [3, 3, 1, "", "get_categories"], [3, 3, 1, "", "get_individual_instances"], [3, 3, 1, "", "get_sample"], [3, 3, 1, "", "read_image"]], "cocohelper.adapters.dataset_adapter": [[5, 1, 1, "", "DatasetAdapter"]], "cocohelper.adapters.dataset_adapter.DatasetAdapter": [[5, 2, 1, "", "_abc_impl"], [5, 3, 1, "", "get_categories"], [5, 3, 1, "", "get_sample"], [5, 3, 1, "", "read_image"]], "cocohelper.dataframe": [[7, 1, 1, "", "COCODataFrame"]], "cocohelper.dataframe.COCODataFrame": [[7, 2, 1, "", "T"], [7, 2, 1, "", "_AXIS_LEN"], [7, 2, 1, "", "_AXIS_NAMES"], [7, 2, 1, "", "_AXIS_NUMBERS"], [7, 2, 1, "", "_AXIS_ORDERS"], [7, 2, 1, "", "_AXIS_TO_AXIS_NUMBER"], [7, 2, 1, "", "_HANDLED_TYPES"], [7, 2, 1, "", "_accessors"], [7, 3, 1, "", "_accum_func"], [7, 3, 1, "", "_add_numeric_operations"], [7, 3, 1, "", "_agg_by_level"], [7, 2, 1, "", "_agg_examples_doc"], [7, 2, 1, "", "_agg_summary_and_see_also_doc"], [7, 3, 1, "", "_align_frame"], [7, 3, 1, "", "_align_series"], [7, 3, 1, "", "_append"], [7, 3, 1, "", "_arith_method"], [7, 3, 1, "", "_as_manager"], [7, 2, 1, "", "_attrs"], [7, 3, 1, "", "_box_col_values"], [7, 2, 1, "", "_cache"], [7, 2, 1, "", "_can_fast_transpose"], [7, 3, 1, "", "_check_inplace_and_allows_duplicate_labels"], [7, 3, 1, "", "_check_inplace_setting"], [7, 3, 1, "", "_check_is_chained_assignment_possible"], [7, 3, 1, "", "_check_label_or_level_ambiguity"], [7, 3, 1, "", "_check_setitem_copy"], [7, 3, 1, "", "_clear_item_cache"], [7, 3, 1, "", "_clip_with_one_bound"], [7, 3, 1, "", "_clip_with_scalar"], [7, 3, 1, "", "_cmp_method"], [7, 3, 1, "", "_combine_frame"], [7, 3, 1, "", "_consolidate"], [7, 3, 1, "", "_consolidate_inplace"], [7, 3, 1, "", "_construct_axes_dict"], [7, 3, 1, "", "_construct_axes_from_arguments"], [7, 3, 1, "", "_construct_result"], [7, 2, 1, "", "_constructor"], [7, 3, 1, "", "_convert"], [7, 3, 1, "", "_count_level"], [7, 2, 1, "", "_data"], [7, 3, 1, "", "_dir_additions"], [7, 3, 1, "", "_dir_deletions"], [7, 3, 1, "", "_dispatch_frame_op"], [7, 3, 1, "", "_drop_axis"], [7, 3, 1, "", "_drop_labels_or_levels"], [7, 3, 1, "", "_ensure_valid_index"], [7, 3, 1, "", "_find_valid_index"], [7, 3, 1, "", "_from_arrays"], [7, 3, 1, "", "_get_agg_axis"], [7, 3, 1, "", "_get_axis"], [7, 3, 1, "", "_get_axis_name"], [7, 3, 1, "", "_get_axis_number"], [7, 3, 1, "", "_get_axis_resolvers"], [7, 3, 1, "", "_get_block_manager_axis"], [7, 3, 1, "", "_get_bool_data"], [7, 3, 1, "", "_get_cleaned_column_resolvers"], [7, 3, 1, "", "_get_column_array"], [7, 3, 1, "", "_get_index_resolvers"], [7, 3, 1, "", "_get_item_cache"], [7, 3, 1, "", "_get_label_or_level_values"], [7, 3, 1, "", "_get_numeric_data"], [7, 3, 1, "", "_get_value"], [7, 3, 1, "", "_getitem_bool_array"], [7, 3, 1, "", "_getitem_multilevel"], [7, 3, 1, "", "_gotitem"], [7, 2, 1, "", "_hidden_attrs"], [7, 3, 1, "", "_indexed_same"], [7, 2, 1, "", "_info_axis"], [7, 2, 1, "", "_info_axis_name"], [7, 2, 1, "", "_info_axis_number"], [7, 3, 1, "", "_info_repr"], [7, 3, 1, "", "_init_mgr"], [7, 3, 1, "", "_inplace_method"], [7, 2, 1, "", "_internal_names"], [7, 2, 1, "", "_internal_names_set"], [7, 3, 1, "", "_invert_join_how"], [7, 2, 1, "", "_is_copy"], [7, 2, 1, "", "_is_homogeneous_type"], [7, 3, 1, "", "_is_label_or_level_reference"], [7, 3, 1, "", "_is_label_reference"], [7, 3, 1, "", "_is_level_reference"], [7, 2, 1, "", "_is_mixed_type"], [7, 2, 1, "", "_is_view"], [7, 3, 1, "", "_iset_item"], [7, 3, 1, "", "_iset_item_mgr"], [7, 3, 1, "", "_iset_not_inplace"], [7, 3, 1, "", "_iter_column_arrays"], [7, 3, 1, "", "_ixs"], [7, 3, 1, "", "_join_compat"], [7, 3, 1, "", "_logical_func"], [7, 3, 1, "", "_logical_method"], [7, 3, 1, "", "_maybe_cache_changed"], [7, 3, 1, "", "_maybe_update_cacher"], [7, 2, 1, "", "_metadata"], [7, 2, 1, "", "_mgr"], [7, 3, 1, "", "_min_count_stat_function"], [7, 3, 1, "", "_needs_reindex_multi"], [7, 3, 1, "", "_protect_consolidate"], [7, 3, 1, "", "_reduce"], [7, 3, 1, "", "_reduce_axis1"], [7, 3, 1, "", "_reindex_axes"], [7, 3, 1, "", "_reindex_columns"], [7, 3, 1, "", "_reindex_index"], [7, 3, 1, "", "_reindex_multi"], [7, 3, 1, "", "_reindex_with_indexers"], [7, 3, 1, "", "_rename"], [7, 3, 1, "", "_replace_columnwise"], [7, 3, 1, "", "_repr_data_resource_"], [7, 3, 1, "", "_repr_fits_horizontal_"], [7, 3, 1, "", "_repr_fits_vertical_"], [7, 3, 1, "", "_repr_html_"], [7, 3, 1, "", "_repr_latex_"], [7, 3, 1, "", "_reset_cache"], [7, 3, 1, "", "_reset_cacher"], [7, 3, 1, "", "_sanitize_column"], [7, 2, 1, "", "_series"], [7, 3, 1, "", "_set_axis"], [7, 3, 1, "", "_set_axis_name"], [7, 3, 1, "", "_set_axis_nocheck"], [7, 3, 1, "", "_set_is_copy"], [7, 3, 1, "", "_set_item"], [7, 3, 1, "", "_set_item_frame_value"], [7, 3, 1, "", "_set_item_mgr"], [7, 3, 1, "", "_set_value"], [7, 3, 1, "", "_setitem_array"], [7, 3, 1, "", "_setitem_frame"], [7, 3, 1, "", "_setitem_slice"], [7, 3, 1, "", "_slice"], [7, 2, 1, "", "_stat_axis"], [7, 2, 1, "", "_stat_axis_name"], [7, 2, 1, "", "_stat_axis_number"], [7, 3, 1, "", "_stat_function"], [7, 3, 1, "", "_stat_function_ddof"], [7, 3, 1, "", "_take"], [7, 3, 1, "", "_take_with_is_copy"], [7, 3, 1, "", "_to_dict_of_blocks"], [7, 2, 1, "", "_typ"], [7, 3, 1, "", "_update_inplace"], [7, 3, 1, "", "_validate_dtype"], [7, 2, 1, "", "_values"], [7, 3, 1, "", "_where"], [7, 3, 1, "", "abs"], [7, 3, 1, "", "add"], [7, 3, 1, "", "add_prefix"], [7, 3, 1, "", "add_suffix"], [7, 3, 1, "", "agg"], [7, 3, 1, "", "aggregate"], [7, 3, 1, "", "align"], [7, 3, 1, "", "all"], [7, 3, 1, "", "any"], [7, 3, 1, "", "append"], [7, 3, 1, "", "apply"], [7, 3, 1, "", "applymap"], [7, 3, 1, "", "asfreq"], [7, 3, 1, "", "asof"], [7, 3, 1, "", "assign"], [7, 3, 1, "", "astype"], [7, 2, 1, "", "at"], [7, 3, 1, "", "at_time"], [7, 2, 1, "", "attrs"], [7, 3, 1, "", "auto_reset_index"], [7, 2, 1, "", "axes"], [7, 3, 1, "", "backfill"], [7, 3, 1, "", "between_time"], [7, 3, 1, "", "bfill"], [7, 3, 1, "", "bool"], [7, 3, 1, "", "boxplot"], [7, 3, 1, "", "clip"], [7, 3, 1, "", "cocojoin"], [7, 2, 1, "", "columns"], [7, 3, 1, "", "combine"], [7, 3, 1, "", "combine_first"], [7, 3, 1, "", "compare"], [7, 3, 1, "", "convert_dtypes"], [7, 3, 1, "", "copy"], [7, 3, 1, "", "corr"], [7, 3, 1, "", "corrwith"], [7, 3, 1, "", "count"], [7, 3, 1, "", "cov"], [7, 3, 1, "", "cummax"], [7, 3, 1, "", "cummin"], [7, 3, 1, "", "cumprod"], [7, 3, 1, "", "cumsum"], [7, 2, 1, "", "data"], [7, 3, 1, "", "describe"], [7, 3, 1, "", "diff"], [7, 3, 1, "", "div"], [7, 3, 1, "", "divide"], [7, 3, 1, "", "dot"], [7, 3, 1, "", "drop"], [7, 3, 1, "", "drop_duplicates"], [7, 3, 1, "", "droplevel"], [7, 3, 1, "", "dropna"], [7, 2, 1, "", "dtypes"], [7, 3, 1, "", "duplicated"], [7, 2, 1, "", "empty"], [7, 3, 1, "", "eq"], [7, 3, 1, "", "equals"], [7, 3, 1, "", "eval"], [7, 3, 1, "", "ewm"], [7, 3, 1, "", "expanding"], [7, 3, 1, "", "explode"], [7, 3, 1, "", "ffill"], [7, 3, 1, "", "fillna"], [7, 3, 1, "", "filter"], [7, 3, 1, "", "first"], [7, 3, 1, "", "first_valid_index"], [7, 2, 1, "", "flags"], [7, 3, 1, "", "floordiv"], [7, 3, 1, "", "from_dict"], [7, 3, 1, "", "from_records"], [7, 3, 1, "", "ge"], [7, 3, 1, "", "get"], [7, 3, 1, "", "groupby"], [7, 3, 1, "", "gt"], [7, 3, 1, "", "head"], [7, 3, 1, "", "hist"], [7, 2, 1, "", "iat"], [7, 3, 1, "", "idxmax"], [7, 3, 1, "", "idxmin"], [7, 2, 1, "", "iloc"], [7, 2, 1, "", "index"], [7, 3, 1, "", "infer_objects"], [7, 3, 1, "", "info"], [7, 3, 1, "", "insert"], [7, 3, 1, "", "interpolate"], [7, 3, 1, "", "isetitem"], [7, 3, 1, "", "isin"], [7, 3, 1, "", "isna"], [7, 3, 1, "", "isnull"], [7, 3, 1, "", "items"], [7, 3, 1, "", "iteritems"], [7, 3, 1, "", "iterrows"], [7, 3, 1, "", "itertuples"], [7, 3, 1, "", "join"], [7, 3, 1, "", "keys"], [7, 3, 1, "", "kurt"], [7, 3, 1, "", "kurtosis"], [7, 3, 1, "", "last"], [7, 3, 1, "", "last_valid_index"], [7, 3, 1, "", "le"], [7, 2, 1, "", "loc"], [7, 3, 1, "", "lookup"], [7, 3, 1, "", "lt"], [7, 3, 1, "", "mad"], [7, 3, 1, "", "map_dataframe_cols"], [7, 3, 1, "", "mask"], [7, 3, 1, "", "max"], [7, 3, 1, "", "mean"], [7, 3, 1, "", "median"], [7, 3, 1, "", "melt"], [7, 3, 1, "", "memory_usage"], [7, 3, 1, "", "merge"], [7, 3, 1, "", "min"], [7, 3, 1, "", "mod"], [7, 3, 1, "", "mode"], [7, 3, 1, "", "mul"], [7, 3, 1, "", "multiply"], [7, 2, 1, "", "name"], [7, 2, 1, "", "ndim"], [7, 3, 1, "", "ne"], [7, 3, 1, "", "nlargest"], [7, 3, 1, "", "notna"], [7, 3, 1, "", "notnull"], [7, 3, 1, "", "nsmallest"], [7, 3, 1, "", "nunique"], [7, 2, 1, "", "orig_data"], [7, 3, 1, "", "pad"], [7, 3, 1, "", "pct_change"], [7, 3, 1, "", "pipe"], [7, 3, 1, "", "pivot"], [7, 3, 1, "", "pivot_table"], [7, 3, 1, "", "pop"], [7, 3, 1, "", "pow"], [7, 3, 1, "", "prod"], [7, 3, 1, "", "product"], [7, 3, 1, "", "quantile"], [7, 3, 1, "", "query"], [7, 3, 1, "", "radd"], [7, 3, 1, "", "rank"], [7, 3, 1, "", "rdiv"], [7, 3, 1, "", "reindex"], [7, 3, 1, "", "reindex_like"], [7, 3, 1, "", "rename"], [7, 3, 1, "", "rename_axis"], [7, 3, 1, "", "reorder_levels"], [7, 3, 1, "", "replace"], [7, 3, 1, "", "resample"], [7, 3, 1, "", "reset_index"], [7, 3, 1, "", "rfloordiv"], [7, 3, 1, "", "rmod"], [7, 3, 1, "", "rmul"], [7, 3, 1, "", "rolling"], [7, 3, 1, "", "round"], [7, 3, 1, "", "rpow"], [7, 3, 1, "", "rsub"], [7, 3, 1, "", "rtruediv"], [7, 3, 1, "", "sample"], [7, 3, 1, "", "select_dtypes"], [7, 3, 1, "", "sem"], [7, 3, 1, "", "set_axis"], [7, 3, 1, "", "set_flags"], [7, 3, 1, "", "set_index"], [7, 2, 1, "", "shape"], [7, 3, 1, "", "shift"], [7, 2, 1, "", "size"], [7, 3, 1, "", "skew"], [7, 3, 1, "", "slice_shift"], [7, 3, 1, "", "sort_index"], [7, 3, 1, "", "sort_values"], [7, 3, 1, "", "squeeze"], [7, 3, 1, "", "stack"], [7, 3, 1, "", "std"], [7, 2, 1, "", "style"], [7, 3, 1, "", "sub"], [7, 3, 1, "", "subtract"], [7, 3, 1, "", "sum"], [7, 3, 1, "", "swapaxes"], [7, 3, 1, "", "swaplevel"], [7, 3, 1, "", "tail"], [7, 3, 1, "", "take"], [7, 3, 1, "", "to_clipboard"], [7, 3, 1, "", "to_csv"], [7, 3, 1, "", "to_dict"], [7, 3, 1, "", "to_excel"], [7, 3, 1, "", "to_feather"], [7, 3, 1, "", "to_gbq"], [7, 3, 1, "", "to_hdf"], [7, 3, 1, "", "to_html"], [7, 3, 1, "", "to_json"], [7, 3, 1, "", "to_latex"], [7, 3, 1, "", "to_markdown"], [7, 3, 1, "", "to_numpy"], [7, 3, 1, "", "to_orc"], [7, 3, 1, "", "to_parquet"], [7, 3, 1, "", "to_period"], [7, 3, 1, "", "to_pickle"], [7, 3, 1, "", "to_records"], [7, 3, 1, "", "to_sql"], [7, 3, 1, "", "to_stata"], [7, 3, 1, "", "to_string"], [7, 3, 1, "", "to_timestamp"], [7, 3, 1, "", "to_xarray"], [7, 3, 1, "", "to_xml"], [7, 3, 1, "", "transform"], [7, 3, 1, "", "transpose"], [7, 3, 1, "", "truediv"], [7, 3, 1, "", "truncate"], [7, 3, 1, "", "try_remap_col"], [7, 3, 1, "", "tshift"], [7, 3, 1, "", "tz_convert"], [7, 3, 1, "", "tz_localize"], [7, 3, 1, "", "unmap_dataframe_cols"], [7, 3, 1, "", "unstack"], [7, 3, 1, "", "update"], [7, 3, 1, "", "value_counts"], [7, 2, 1, "", "values"], [7, 3, 1, "", "var"], [7, 3, 1, "", "where"], [7, 3, 1, "", "xs"]], "cocohelper.errors": [[9, 0, 0, "-", "not_found_error"], [12, 0, 0, "-", "validation_error"]], "cocohelper.errors.not_found_error": [[10, 4, 1, "", "COCOAnnotationNotFoundError"], [11, 4, 1, "", "COCOImageNotFoundError"]], "cocohelper.errors.validation_error": [[13, 4, 1, "", "COCOValidationError"]], "cocohelper.filters": [[15, 0, 0, "-", "cocofilters"], [20, 0, 0, "-", "filter"], [29, 0, 0, "-", "strategies"]], "cocohelper.filters.cocofilters": [[16, 0, 0, "-", "cocofilters"]], "cocohelper.filters.cocofilters.cocofilters": [[17, 5, 1, "", "anns_filter"], [18, 5, 1, "", "cats_filter"], [19, 5, 1, "", "imgs_filter"]], "cocohelper.filters.filter": [[21, 1, 1, "", "AndFilter"], [22, 1, 1, "", "ColumnFilter"], [23, 1, 1, "", "ComposeFilter"], [24, 1, 1, "", "Filter"], [25, 1, 1, "", "NotFilter"], [26, 1, 1, "", "OrFilter"], [27, 1, 1, "", "RangeFilter"], [28, 1, 1, "", "ValueFilter"]], "cocohelper.filters.filter.AndFilter": [[21, 2, 1, "", "_abc_impl"], [21, 3, 1, "", "apply"]], "cocohelper.filters.filter.ColumnFilter": [[22, 2, 1, "", "_abc_impl"], [22, 3, 1, "", "_apply"], [22, 3, 1, "", "apply"]], "cocohelper.filters.filter.ComposeFilter": [[23, 2, 1, "", "_abc_impl"], [23, 3, 1, "", "apply"]], "cocohelper.filters.filter.Filter": [[24, 2, 1, "", "_abc_impl"], [24, 3, 1, "", "apply"]], "cocohelper.filters.filter.NotFilter": [[25, 2, 1, "", "_abc_impl"], [25, 3, 1, "", "apply"]], "cocohelper.filters.filter.OrFilter": [[26, 2, 1, "", "_abc_impl"], [26, 3, 1, "", "apply"]], "cocohelper.filters.filter.RangeFilter": [[27, 2, 1, "", "_abc_impl"], [27, 3, 1, "", "_apply"], [27, 3, 1, "", "apply"], [27, 3, 1, "", "set_strategy"]], "cocohelper.filters.filter.ValueFilter": [[28, 2, 1, "", "_abc_impl"], [28, 3, 1, "", "_apply"], [28, 3, 1, "", "apply"], [28, 3, 1, "", "set_strategy"]], "cocohelper.filters.strategies": [[30, 0, 0, "-", "functional"], [36, 0, 0, "-", "strategies"]], "cocohelper.filters.strategies.functional": [[31, 5, 1, "", "filter_multi_rows_having_all"], [32, 5, 1, "", "filter_multi_rows_having_any"], [33, 5, 1, "", "filter_rows_having"], [34, 5, 1, "", "filter_rows_in_range"], [35, 5, 1, "", "filter_rows_out_range"]], "cocohelper.filters.strategies.strategies": [[37, 1, 1, "", "AllValueFilterStrategy"], [38, 1, 1, "", "AnyValueFilterStrategy"], [39, 1, 1, "", "HavingValueFilterStrategy"], [40, 1, 1, "", "InRangeFilterStrategy"], [41, 1, 1, "", "NotInRangeFilterStrategy"], [42, 1, 1, "", "RangeFilterStrategy"], [43, 1, 1, "", "ValueFilterStrategy"]], "cocohelper.filters.strategies.strategies.AllValueFilterStrategy": [[37, 2, 1, "", "_abc_impl"], [37, 3, 1, "", "apply"]], "cocohelper.filters.strategies.strategies.AnyValueFilterStrategy": [[38, 2, 1, "", "_abc_impl"], [38, 3, 1, "", "apply"]], "cocohelper.filters.strategies.strategies.HavingValueFilterStrategy": [[39, 2, 1, "", "_abc_impl"], [39, 3, 1, "", "apply"]], "cocohelper.filters.strategies.strategies.InRangeFilterStrategy": [[40, 2, 1, "", "_abc_impl"], [40, 3, 1, "", "apply"]], "cocohelper.filters.strategies.strategies.NotInRangeFilterStrategy": [[41, 2, 1, "", "_abc_impl"], [41, 3, 1, "", "apply"]], "cocohelper.filters.strategies.strategies.RangeFilterStrategy": [[42, 2, 1, "", "_abc_impl"], [42, 3, 1, "", "apply"]], "cocohelper.filters.strategies.strategies.ValueFilterStrategy": [[43, 2, 1, "", "_abc_impl"], [43, 3, 1, "", "apply"]], "cocohelper.helper": [[45, 1, 1, "", "COCOColsMapper"], [46, 1, 1, "", "COCOHelper"], [47, 1, 1, "", "COCOHelperPaths"]], "cocohelper.helper.COCOColsMapper": [[45, 2, 1, "", "all"], [45, 2, 1, "", "ann"], [45, 2, 1, "", "cat"], [45, 2, 1, "", "img"], [45, 2, 1, "", "lic"], [45, 2, 1, "", "to_origs"]], "cocohelper.helper.COCOHelper": [[46, 3, 1, "", "_copy_images"], [46, 3, 1, "", "_read_annotations_file"], [46, 3, 1, "", "_remove_unlinked_anns"], [46, 3, 1, "", "_validate"], [46, 2, 1, "", "anns"], [46, 2, 1, "", "cats"], [46, 3, 1, "", "copy"], [46, 3, 1, "", "drop_duplicate_anns"], [46, 3, 1, "", "drop_duplicate_cats"], [46, 3, 1, "", "drop_duplicate_imgs"], [46, 3, 1, "", "drop_duplicate_licenses"], [46, 3, 1, "", "drop_labelled"], [46, 3, 1, "", "drop_unlabelled"], [46, 3, 1, "", "filter"], [46, 3, 1, "", "filter_anns"], [46, 3, 1, "", "filter_cats"], [46, 3, 1, "", "filter_imgs"], [46, 3, 1, "", "filtered_anns"], [46, 3, 1, "", "filtered_cats"], [46, 3, 1, "", "filtered_imgs"], [46, 3, 1, "", "get_ann_sample"], [46, 3, 1, "", "get_img"], [46, 3, 1, "", "get_img_sample"], [46, 2, 1, "", "imgs"], [46, 2, 1, "", "info"], [46, 2, 1, "", "joins"], [46, 2, 1, "", "labelled_imgs"], [46, 2, 1, "", "licenses"], [46, 3, 1, "", "load"], [46, 3, 1, "", "load_data"], [46, 3, 1, "", "load_json"], [46, 3, 1, "", "merge"], [46, 3, 1, "", "new_info_dict"], [46, 2, 1, "", "paths"], [46, 2, 1, "", "root_path"], [46, 3, 1, "", "save"], [46, 3, 1, "", "to_coco"], [46, 3, 1, "", "to_json_dataset"], [46, 2, 1, "", "unlabelled_imgs"], [46, 2, 1, "", "validator"], [46, 3, 1, "", "write_annotations_file"]], "cocohelper.helper.COCOHelperPaths": [[47, 2, 1, "", "ann_dir"], [47, 2, 1, "", "ann_fname"], [47, 2, 1, "", "img_dir"]], "cocohelper.importer": [[49, 1, 1, "", "Importer"], [50, 5, 1, "", "_get_empty_json"]], "cocohelper.importer.Importer": [[49, 3, 1, "", "create"]], "cocohelper.joins": [[52, 1, 1, "", "COCOJoins"]], "cocohelper.joins.COCOJoins": [[52, 2, 1, "", "anns_cats"], [52, 2, 1, "", "anns_cats_imgs"], [52, 2, 1, "", "anns_imgs"], [52, 2, 1, "", "anns_imgs_cats"], [52, 2, 1, "", "cats_anns"], [52, 2, 1, "", "cats_anns_imgs"], [52, 2, 1, "", "cats_imgs_anns"], [52, 3, 1, "", "extract_anns"], [52, 3, 1, "", "extract_cats"], [52, 3, 1, "", "extract_imgs"], [52, 2, 1, "", "imgs_anns"], [52, 2, 1, "", "imgs_anns_cats"], [52, 2, 1, "", "imgs_cats_anns"]], "cocohelper.merge": [[54, 5, 1, "", "_create_cat_mapping"], [55, 5, 1, "", "_create_image_mapping"], [56, 5, 1, "", "_merge_annotations"], [57, 5, 1, "", "_merge_categories"], [58, 5, 1, "", "_merge_images"], [59, 5, 1, "", "_merge_info"], [60, 5, 1, "", "_merge_licenses"], [61, 5, 1, "", "merge_coco"]], "cocohelper.splitters": [[63, 0, 0, "-", "kfold"], [65, 0, 0, "-", "proportional"], [67, 0, 0, "-", "splitter"], [69, 0, 0, "-", "stratified"]], "cocohelper.splitters.kfold": [[64, 1, 1, "", "KFoldSplitter"]], "cocohelper.splitters.kfold.KFoldSplitter": [[64, 2, 1, "", "_abc_impl"], [64, 3, 1, "", "apply"], [64, 3, 1, "", "iter"]], "cocohelper.splitters.proportional": [[66, 1, 1, "", "ProportionalDataSplitter"]], "cocohelper.splitters.proportional.ProportionalDataSplitter": [[66, 2, 1, "", "_abc_impl"], [66, 3, 1, "", "_get_ids"], [66, 3, 1, "", "_get_n_samples"], [66, 3, 1, "", "apply"]], "cocohelper.splitters.splitter": [[68, 1, 1, "", "Splitter"]], "cocohelper.splitters.splitter.Splitter": [[68, 2, 1, "", "_abc_impl"], [68, 3, 1, "", "apply"]], "cocohelper.splitters.stratified": [[70, 1, 1, "", "StratifiedDataSplitter"]], "cocohelper.splitters.stratified.StratifiedDataSplitter": [[70, 2, 1, "", "_abc_impl"], [70, 3, 1, "", "_compute_label_ratios"], [70, 3, 1, "", "_get_ids"], [70, 3, 1, "", "_get_n_samples"], [70, 3, 1, "", "apply"]], "cocohelper.stats": [[72, 1, 1, "", "COCOStats"]], "cocohelper.stats.COCOStats": [[72, 3, 1, "", "__get_annotations_ratios"], [72, 3, 1, "", "__get_category_ratios"], [72, 2, 1, "", "cat_ids_ratios"], [72, 2, 1, "", "cat_nms_ratios"], [72, 2, 1, "", "coco_helper"], [72, 3, 1, "", "get_annotation_size_stats"], [72, 3, 1, "", "get_image_size_stats"], [72, 3, 1, "", "get_optimal_image_size"], [72, 2, 1, "", "nb_anns"], [72, 2, 1, "", "nb_cats"], [72, 2, 1, "", "nb_imgs"], [72, 2, 1, "", "nb_imgs_wo_anns"]], "cocohelper.transforms": [[74, 0, 0, "-", "compose"], [76, 0, 0, "-", "crop"], [86, 0, 0, "-", "randomflip"], [88, 0, 0, "-", "resize"], [90, 0, 0, "-", "transform"]], "cocohelper.transforms.compose": [[75, 1, 1, "", "Compose"]], "cocohelper.transforms.compose.Compose": [[75, 2, 1, "", "_abc_impl"], [75, 3, 1, "", "append"], [75, 3, 1, "", "apply"], [75, 3, 1, "", "clear"], [75, 3, 1, "", "compute_bbox_area"], [75, 3, 1, "", "insert"], [75, 3, 1, "", "pop"], [75, 3, 1, "", "remove"], [75, 3, 1, "", "reverse"], [75, 3, 1, "", "transform_dataset"]], "cocohelper.transforms.crop": [[77, 1, 1, "", "CenterCrop"], [78, 1, 1, "", "Crop"], [79, 1, 1, "", "RandomCrop"], [80, 1, 1, "", "SizeMode"], [81, 5, 1, "", "_check_bbox"], [82, 5, 1, "", "_crop_bbox"], [83, 5, 1, "", "_crop_segmentation"], [84, 5, 1, "", "_norm_bbox"], [85, 5, 1, "", "crop_img"]], "cocohelper.transforms.crop.CenterCrop": [[77, 2, 1, "", "_abc_impl"], [77, 3, 1, "", "apply"], [77, 3, 1, "", "compute_bbox_area"], [77, 3, 1, "", "transform_dataset"]], "cocohelper.transforms.crop.Crop": [[78, 2, 1, "", "_abc_impl"], [78, 3, 1, "", "apply"], [78, 3, 1, "", "compute_bbox_area"], [78, 3, 1, "", "transform_dataset"]], "cocohelper.transforms.crop.RandomCrop": [[79, 2, 1, "", "_abc_impl"], [79, 3, 1, "", "apply"], [79, 3, 1, "", "compute_bbox_area"], [79, 3, 1, "", "transform_dataset"]], "cocohelper.transforms.crop.SizeMode": [[80, 2, 1, "", "percentage"], [80, 2, 1, "", "pixel"]], "cocohelper.transforms.randomflip": [[87, 1, 1, "", "RandomFlip"]], "cocohelper.transforms.randomflip.RandomFlip": [[87, 2, 1, "", "_abc_impl"], [87, 3, 1, "", "_flip_bbox"], [87, 3, 1, "", "_flip_img"], [87, 3, 1, "", "_flip_segmentations"], [87, 3, 1, "", "apply"], [87, 3, 1, "", "compute_bbox_area"], [87, 3, 1, "", "transform_dataset"]], "cocohelper.transforms.resize": [[89, 1, 1, "", "Resize"]], "cocohelper.transforms.resize.Resize": [[89, 2, 1, "", "_abc_impl"], [89, 3, 1, "", "_resize_bbox"], [89, 3, 1, "", "_resize_image_array"], [89, 3, 1, "", "_resize_segmentations"], [89, 3, 1, "", "apply"], [89, 3, 1, "", "compute_bbox_area"], [89, 3, 1, "", "transform_dataset"]], "cocohelper.transforms.transform": [[91, 1, 1, "", "Transform"]], "cocohelper.transforms.transform.Transform": [[91, 2, 1, "", "_abc_impl"], [91, 3, 1, "", "apply"], [91, 3, 1, "", "compute_bbox_area"], [91, 3, 1, "", "transform_dataset"]], "cocohelper.utils": [[93, 0, 0, "-", "colmapper"], [96, 0, 0, "-", "dataframe"], [102, 0, 0, "-", "path"], [104, 0, 0, "-", "segmentation"], [122, 0, 0, "-", "timer"], [124, 0, 0, "-", "types"], [125, 0, 0, "-", "utils"]], "cocohelper.utils.colmapper": [[94, 1, 1, "", "ColMap"], [95, 1, 1, "", "ColsMapper"]], "cocohelper.utils.colmapper.ColMap": [[94, 2, 1, "", "new"], [94, 2, 1, "", "orig"], [94, 2, 1, "", "to_new"], [94, 2, 1, "", "to_orig"], [94, 3, 1, "", "to_origs"]], "cocohelper.utils.colmapper.ColsMapper": [[95, 2, 1, "", "all"], [95, 2, 1, "", "to_origs"]], "cocohelper.utils.dataframe": [[97, 5, 1, "", "df_to_records"], [98, 5, 1, "", "drop_duplicate_rows"], [99, 5, 1, "", "fix_fk_after_drop_duplicate"], [100, 5, 1, "", "records_to_df"], [101, 5, 1, "", "serialize_row"]], "cocohelper.utils.path": [[103, 5, 1, "", "subtract"]], "cocohelper.utils.segmentation": [[105, 1, 1, "", "CompressedRLEMaskConverter"], [106, 1, 1, "", "MaskConverter"], [107, 1, 1, "", "PolygonMaskConverter"], [108, 1, 1, "", "RLEMaskConverter"], [109, 5, 1, "", "coco_to_binary_masks"], [110, 5, 1, "", "compressed_rle_to_mask"], [111, 5, 1, "", "compute_polygon_area"], [112, 5, 1, "", "convert_to_mask"], [113, 5, 1, "", "convert_to_mode"], [114, 5, 1, "", "decode_mask"], [115, 5, 1, "", "encode_mask"], [116, 5, 1, "", "get_segmentation_mode"], [117, 5, 1, "", "mask_to_compressed_rle"], [118, 5, 1, "", "mask_to_polygon"], [119, 5, 1, "", "mask_to_rle"], [120, 5, 1, "", "polygon_to_mask"], [121, 5, 1, "", "rle_to_mask"]], "cocohelper.utils.segmentation.CompressedRLEMaskConverter": [[105, 2, 1, "", "_abc_impl"], [105, 3, 1, "", "decode"], [105, 3, 1, "", "encode"]], "cocohelper.utils.segmentation.MaskConverter": [[106, 2, 1, "", "_abc_impl"], [106, 3, 1, "", "decode"], [106, 3, 1, "", "encode"]], "cocohelper.utils.segmentation.PolygonMaskConverter": [[107, 2, 1, "", "_abc_impl"], [107, 3, 1, "", "decode"], [107, 3, 1, "", "encode"]], "cocohelper.utils.segmentation.RLEMaskConverter": [[108, 2, 1, "", "_abc_impl"], [108, 3, 1, "", "decode"], [108, 3, 1, "", "encode"]], "cocohelper.utils.timer": [[123, 1, 1, "", "Timer"]], "cocohelper.utils.timer.Timer": [[123, 3, 1, "", "_recreate_cm"], [123, 2, 1, "", "elapsed"]], "cocohelper.utils.utils": [[126, 5, 1, "", "fix_not_tuple"], [127, 5, 1, "", "fix_not_tuple_object"], [128, 5, 1, "", "isArrayLike"], [129, 5, 1, "", "not_empty_intersect"]], "cocohelper.validator": [[131, 1, 1, "", "COCOValidator"], [132, 5, 1, "", "_assert_dict_value_type"]], "cocohelper.validator.COCOValidator": [[131, 3, 1, "", "_annotation_ids_are_unique"], [131, 3, 1, "", "_annotations_have_mandatory_keys"], [131, 3, 1, "", "_annotations_have_valid_category_id"], [131, 3, 1, "", "_annotations_have_valid_image_id"], [131, 3, 1, "", "_categories_have_mandatory_keys"], [131, 3, 1, "", "_category_ids_are_unique"], [131, 3, 1, "", "_has_valid_dataset_tree"], [131, 3, 1, "", "_image_ids_are_unique"], [131, 3, 1, "", "_images_have_mandatory_keys"], [131, 3, 1, "", "_json_has_mandatory_keys"], [131, 3, 1, "", "_licenses_ids_are_unique"], [131, 3, 1, "", "validate_dataset"], [131, 3, 1, "", "validate_dir"]], "cocohelper.visualizer": [[134, 1, 1, "", "COCOVisualizer"]], "cocohelper.visualizer.COCOVisualizer": [[134, 3, 1, "", "_visualize"], [134, 3, 1, "", "draw_bounding_box"], [134, 3, 1, "", "draw_segmentation_mask"], [134, 3, 1, "", "load_image_array"], [134, 3, 1, "", "pick_color_palette"], [134, 3, 1, "", "pick_random_colors"], [134, 3, 1, "", "visualize"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:exception", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "exception", "Python exception"], "5": ["py", "function", "Python function"]}, "titleterms": {"cocohelp": [0, 10, 11, 13, 46, 138], "adapt": 1, "binary_mask_adapt": 2, "binarymaskdatasetadapt": 3, "dataset_adapt": 4, "datasetadapt": 5, "datafram": [6, 96], "cocodatafram": 7, "error": [8, 10, 11, 13], "not_found_error": [9, 10, 11], "cocoannotationnotfounderror": 10, "cocoimagenotfounderror": 11, "validation_error": [12, 13], "cocovalidationerror": 13, "filter": [14, 20, 24], "cocofilt": [15, 16], "anns_filt": 17, "cats_filt": 18, "imgs_filt": 19, "andfilt": 21, "columnfilt": 22, "composefilt": 23, "notfilt": 25, "orfilt": 26, "rangefilt": 27, "valuefilt": 28, "strategi": [29, 36], "function": 30, "filter_multi_rows_having_al": 31, "filter_multi_rows_having_ani": 32, "filter_rows_hav": 33, "filter_rows_in_rang": 34, "filter_rows_out_rang": 35, "allvaluefilterstrategi": 37, "anyvaluefilterstrategi": 38, "havingvaluefilterstrategi": 39, "inrangefilterstrategi": 40, "notinrangefilterstrategi": 41, "rangefilterstrategi": 42, "valuefilterstrategi": 43, "helper": 44, "cococolsmapp": 45, "cocohelperpath": 47, "import": [48, 49], "_get_empty_json": 50, "join": 51, "cocojoin": 52, "merg": [53, 137], "_create_cat_map": 54, "_create_image_map": 55, "_merge_annot": 56, "_merge_categori": 57, "_merge_imag": 58, "_merge_info": 59, "_merge_licens": 60, "merge_coco": 61, "splitter": [62, 67, 68], "kfold": 63, "kfoldsplitt": 64, "proport": 65, "proportionaldatasplitt": 66, "stratifi": 69, "stratifieddatasplitt": 70, "stat": 71, "cocostat": 72, "transform": [73, 90, 91], "compos": [74, 75], "crop": [76, 78], "centercrop": 77, "randomcrop": 79, "sizemod": 80, "_check_bbox": 81, "_crop_bbox": 82, "_crop_segment": 83, "_norm_bbox": 84, "crop_img": 85, "randomflip": [86, 87], "resiz": [88, 89], "util": [92, 125], "colmapp": 93, "colmap": 94, "colsmapp": 95, "df_to_record": 97, "drop_duplicate_row": 98, "fix_fk_after_drop_dupl": 99, "records_to_df": 100, "serialize_row": 101, "path": 102, "subtract": 103, "segment": 104, "compressedrlemaskconvert": 105, "maskconvert": 106, "polygonmaskconvert": 107, "rlemaskconvert": 108, "coco_to_binary_mask": 109, "compressed_rle_to_mask": 110, "compute_polygon_area": 111, "convert_to_mask": 112, "convert_to_mod": 113, "decode_mask": 114, "encode_mask": 115, "get_segmentation_mod": 116, "mask_to_compressed_rl": 117, "mask_to_polygon": 118, "mask_to_rl": 119, "polygon_to_mask": 120, "rle_to_mask": 121, "timer": [122, 123], "type": 124, "fix_not_tupl": 126, "fix_not_tuple_object": 127, "isarraylik": 128, "not_empty_intersect": 129, "valid": 130, "cocovalid": 131, "_assert_dict_value_typ": 132, "visual": [133, 141], "cocovisu": 134, "api": 135, "refer": [135, 138], "call": 136, "For": 136, "contribut": [136, 137], "how": 137, "step": 137, "1": 137, "open": 137, "an": 137, "issu": 137, "2": 137, "make": 137, "code": 137, "chang": 137, "3": 137, "creat": 137, "pull": 137, "request": 137, "4": 137, "sign": 137, "contributor": 137, "licens": 137, "agreement": 137, "5": 137, "review": 137, "6": 137, "setup": 137, "environ": 137, "run": 137, "test": [137, 141], "file": [137, 139], "singl": 137, "case": 137, "all": 137, "requir": 137, "custom": 137, "op": 137, "style": 137, "user": 138, "indic": 138, "tabl": 138, "instal": 139, "from": 139, "wheel": 139, "roadmap": 140, "usag": 141, "tutori": 141, "exampl": 141, "load": 141, "coco": 141, "dataset": 141, "imag": 141, "split": 141, "train": 141, "val": 141}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"cocohelper": [[0, "module-cocohelper"]], "adapters": [[1, "module-cocohelper.adapters"]], "binary_mask_adapter": [[2, "module-cocohelper.adapters.binary_mask_adapter"]], "BinaryMaskDatasetAdapter": [[3, "binarymaskdatasetadapter"]], "dataset_adapter": [[4, "module-cocohelper.adapters.dataset_adapter"]], "DatasetAdapter": [[5, "datasetadapter"]], "dataframe": [[6, "module-cocohelper.dataframe"], [96, "module-cocohelper.utils.dataframe"]], "COCODataFrame": [[7, "cocodataframe"]], "errors": [[8, "module-cocohelper.errors"]], "not_found_error": [[9, "module-cocohelper.errors.not_found_error"]], "cocohelper.errors.not_found_error.COCOAnnotationNotFoundError": [[10, "cocohelper-errors-not-found-error-cocoannotationnotfounderror"]], "cocohelper.errors.not_found_error.COCOImageNotFoundError": [[11, "cocohelper-errors-not-found-error-cocoimagenotfounderror"]], "validation_error": [[12, "module-cocohelper.errors.validation_error"]], "cocohelper.errors.validation_error.COCOValidationError": [[13, "cocohelper-errors-validation-error-cocovalidationerror"]], "filters": [[14, "module-cocohelper.filters"]], "cocofilters": [[15, "module-cocohelper.filters.cocofilters"], [16, "module-cocohelper.filters.cocofilters.cocofilters"]], "anns_filter": [[17, "anns-filter"]], "cats_filter": [[18, "cats-filter"]], "imgs_filter": [[19, "imgs-filter"]], "filter": [[20, "module-cocohelper.filters.filter"]], "AndFilter": [[21, "andfilter"]], "ColumnFilter": [[22, "columnfilter"]], "ComposeFilter": [[23, "composefilter"]], "Filter": [[24, "filter"]], "NotFilter": [[25, "notfilter"]], "OrFilter": [[26, "orfilter"]], "RangeFilter": [[27, "rangefilter"]], "ValueFilter": [[28, "valuefilter"]], "strategies": [[29, "module-cocohelper.filters.strategies"], [36, "module-cocohelper.filters.strategies.strategies"]], "functional": [[30, "module-cocohelper.filters.strategies.functional"]], "filter_multi_rows_having_all": [[31, "filter-multi-rows-having-all"]], "filter_multi_rows_having_any": [[32, "filter-multi-rows-having-any"]], "filter_rows_having": [[33, "filter-rows-having"]], "filter_rows_in_range": [[34, "filter-rows-in-range"]], "filter_rows_out_range": [[35, "filter-rows-out-range"]], "AllValueFilterStrategy": [[37, "allvaluefilterstrategy"]], "AnyValueFilterStrategy": [[38, "anyvaluefilterstrategy"]], "HavingValueFilterStrategy": [[39, "havingvaluefilterstrategy"]], "InRangeFilterStrategy": [[40, "inrangefilterstrategy"]], "NotInRangeFilterStrategy": [[41, "notinrangefilterstrategy"]], "RangeFilterStrategy": [[42, "rangefilterstrategy"]], "ValueFilterStrategy": [[43, "valuefilterstrategy"]], "helper": [[44, "module-cocohelper.helper"]], "COCOColsMapper": [[45, "cococolsmapper"]], "COCOHelper": [[46, "cocohelper"], [138, "cocohelper"]], "COCOHelperPaths": [[47, "cocohelperpaths"]], "importer": [[48, "module-cocohelper.importer"]], "Importer": [[49, "importer"]], "_get_empty_json": [[50, "get-empty-json"]], "joins": [[51, "module-cocohelper.joins"]], "COCOJoins": [[52, "cocojoins"]], "merge": [[53, "module-cocohelper.merge"]], "_create_cat_mapping": [[54, "create-cat-mapping"]], "_create_image_mapping": [[55, "create-image-mapping"]], "_merge_annotations": [[56, "merge-annotations"]], "_merge_categories": [[57, "merge-categories"]], "_merge_images": [[58, "merge-images"]], "_merge_info": [[59, "merge-info"]], "_merge_licenses": [[60, "merge-licenses"]], "merge_coco": [[61, "merge-coco"]], "splitters": [[62, "module-cocohelper.splitters"]], "kfold": [[63, "module-cocohelper.splitters.kfold"]], "KFoldSplitter": [[64, "kfoldsplitter"]], "proportional": [[65, "module-cocohelper.splitters.proportional"]], "ProportionalDataSplitter": [[66, "proportionaldatasplitter"]], "splitter": [[67, "module-cocohelper.splitters.splitter"]], "Splitter": [[68, "splitter"]], "stratified": [[69, "module-cocohelper.splitters.stratified"]], "StratifiedDataSplitter": [[70, "stratifieddatasplitter"]], "stats": [[71, "module-cocohelper.stats"]], "COCOStats": [[72, "cocostats"]], "transforms": [[73, "module-cocohelper.transforms"]], "compose": [[74, "module-cocohelper.transforms.compose"]], "Compose": [[75, "compose"]], "crop": [[76, "module-cocohelper.transforms.crop"]], "CenterCrop": [[77, "centercrop"]], "Crop": [[78, "crop"]], "RandomCrop": [[79, "randomcrop"]], "SizeMode": [[80, "sizemode"]], "_check_bbox": [[81, "check-bbox"]], "_crop_bbox": [[82, "crop-bbox"]], "_crop_segmentation": [[83, "crop-segmentation"]], "_norm_bbox": [[84, "norm-bbox"]], "crop_img": [[85, "crop-img"]], "randomflip": [[86, "module-cocohelper.transforms.randomflip"]], "RandomFlip": [[87, "randomflip"]], "resize": [[88, "module-cocohelper.transforms.resize"]], "Resize": [[89, "resize"]], "transform": [[90, "module-cocohelper.transforms.transform"]], "Transform": [[91, "transform"]], "utils": [[92, "module-cocohelper.utils"], [125, "module-cocohelper.utils.utils"]], "colmapper": [[93, "module-cocohelper.utils.colmapper"]], "ColMap": [[94, "colmap"]], "ColsMapper": [[95, "colsmapper"]], "df_to_records": [[97, "df-to-records"]], "drop_duplicate_rows": [[98, "drop-duplicate-rows"]], "fix_fk_after_drop_duplicate": [[99, "fix-fk-after-drop-duplicate"]], "records_to_df": [[100, "records-to-df"]], "serialize_row": [[101, "serialize-row"]], "path": [[102, "module-cocohelper.utils.path"]], "subtract": [[103, "subtract"]], "segmentation": [[104, "module-cocohelper.utils.segmentation"]], "CompressedRLEMaskConverter": [[105, "compressedrlemaskconverter"]], "MaskConverter": [[106, "maskconverter"]], "PolygonMaskConverter": [[107, "polygonmaskconverter"]], "RLEMaskConverter": [[108, "rlemaskconverter"]], "coco_to_binary_masks": [[109, "coco-to-binary-masks"]], "compressed_rle_to_mask": [[110, "compressed-rle-to-mask"]], "compute_polygon_area": [[111, "compute-polygon-area"]], "convert_to_mask": [[112, "convert-to-mask"]], "convert_to_mode": [[113, "convert-to-mode"]], "decode_mask": [[114, "decode-mask"]], "encode_mask": [[115, "encode-mask"]], "get_segmentation_mode": [[116, "get-segmentation-mode"]], "mask_to_compressed_rle": [[117, "mask-to-compressed-rle"]], "mask_to_polygon": [[118, "mask-to-polygon"]], "mask_to_rle": [[119, "mask-to-rle"]], "polygon_to_mask": [[120, "polygon-to-mask"]], "rle_to_mask": [[121, "rle-to-mask"]], "timer": [[122, "module-cocohelper.utils.timer"]], "Timer": [[123, "timer"]], "types": [[124, "module-cocohelper.utils.types"]], "fix_not_tuple": [[126, "fix-not-tuple"]], "fix_not_tuple_object": [[127, "fix-not-tuple-object"]], "isArrayLike": [[128, "isarraylike"]], "not_empty_intersect": [[129, "not-empty-intersect"]], "validator": [[130, "module-cocohelper.validator"]], "COCOValidator": [[131, "cocovalidator"]], "_assert_dict_value_type": [[132, "assert-dict-value-type"]], "visualizer": [[133, "module-cocohelper.visualizer"]], "COCOVisualizer": [[134, "cocovisualizer"]], "API Reference": [[135, "api-reference"]], "Call For Contributions": [[136, "call-for-contributions"]], "How to contribute": [[137, "how-to-contribute"]], "Step 1. Open an issue:": [[137, "step-1-open-an-issue"]], "Step 2. Make code changes:": [[137, "step-2-make-code-changes"]], "Step 3. Create a pull request:": [[137, "step-3-create-a-pull-request"]], "Step 4. Sign the Contributor License Agreement:": [[137, "step-4-sign-the-contributor-license-agreement"]], "Step 5. Code review:": [[137, "step-5-code-review"]], "Step 6. Merging:": [[137, "step-6-merging"]], "Setup environment:": [[137, "setup-environment"]], "Run tests": [[137, "run-tests"]], "Run a test file:": [[137, "run-a-test-file"]], "Run a single test case:": [[137, "run-a-single-test-case"]], "Run all tests:": [[137, "run-all-tests"]], "Tests that require custom ops:": [[137, "tests-that-require-custom-ops"]], "Code Style": [[137, "code-style"]], "User Reference:": [[138, null]], "Indices and tables": [[138, "indices-and-tables"]], "Installation": [[139, "installation"]], "Install from Wheel File": [[139, "install-from-wheel-file"]], "Roadmap": [[140, "roadmap"]], "Usage": [[141, "usage"]], "Tutorials": [[141, "tutorials"]], "Examples": [[141, "examples"]], "Load a coco dataset": [[141, "load-a-coco-dataset"]], "Visualize images": [[141, "visualize-images"]], "Split train/val/test": [[141, "split-train-val-test"]]}, "indexentries": {"cocohelper": [[0, "module-cocohelper"]], "module": [[0, "module-cocohelper"], [1, "module-cocohelper.adapters"], [2, "module-cocohelper.adapters.binary_mask_adapter"], [4, "module-cocohelper.adapters.dataset_adapter"], [6, "module-cocohelper.dataframe"], [8, "module-cocohelper.errors"], [9, "module-cocohelper.errors.not_found_error"], [12, "module-cocohelper.errors.validation_error"], [14, "module-cocohelper.filters"], [15, "module-cocohelper.filters.cocofilters"], [16, "module-cocohelper.filters.cocofilters.cocofilters"], [20, "module-cocohelper.filters.filter"], [29, "module-cocohelper.filters.strategies"], [30, "module-cocohelper.filters.strategies.functional"], [36, "module-cocohelper.filters.strategies.strategies"], [44, "module-cocohelper.helper"], [48, "module-cocohelper.importer"], [51, "module-cocohelper.joins"], [53, "module-cocohelper.merge"], [62, "module-cocohelper.splitters"], [63, "module-cocohelper.splitters.kfold"], [65, "module-cocohelper.splitters.proportional"], [67, "module-cocohelper.splitters.splitter"], [69, "module-cocohelper.splitters.stratified"], [71, "module-cocohelper.stats"], [73, "module-cocohelper.transforms"], [74, "module-cocohelper.transforms.compose"], [76, "module-cocohelper.transforms.crop"], [86, "module-cocohelper.transforms.randomflip"], [88, "module-cocohelper.transforms.resize"], [90, "module-cocohelper.transforms.transform"], [92, "module-cocohelper.utils"], [93, "module-cocohelper.utils.colmapper"], [96, "module-cocohelper.utils.dataframe"], [102, "module-cocohelper.utils.path"], [104, "module-cocohelper.utils.segmentation"], [122, "module-cocohelper.utils.timer"], [124, "module-cocohelper.utils.types"], [125, "module-cocohelper.utils.utils"], [130, "module-cocohelper.validator"], [133, "module-cocohelper.visualizer"]], "cocohelper.adapters": [[1, "module-cocohelper.adapters"]], "cocohelper.adapters.binary_mask_adapter": [[2, "module-cocohelper.adapters.binary_mask_adapter"]], "binarymaskdatasetadapter (class in cocohelper.adapters.binary_mask_adapter)": [[3, "cocohelper.adapters.binary_mask_adapter.BinaryMaskDatasetAdapter"]], "_abc_impl (cocohelper.adapters.binary_mask_adapter.binarymaskdatasetadapter attribute)": [[3, "cocohelper.adapters.binary_mask_adapter.BinaryMaskDatasetAdapter._abc_impl"]], "extract_bbox_from_binary_mask() (cocohelper.adapters.binary_mask_adapter.binarymaskdatasetadapter static method)": [[3, "cocohelper.adapters.binary_mask_adapter.BinaryMaskDatasetAdapter.extract_bbox_from_binary_mask"]], "get_categories() (cocohelper.adapters.binary_mask_adapter.binarymaskdatasetadapter method)": [[3, "cocohelper.adapters.binary_mask_adapter.BinaryMaskDatasetAdapter.get_categories"]], "get_individual_instances() (cocohelper.adapters.binary_mask_adapter.binarymaskdatasetadapter method)": [[3, "cocohelper.adapters.binary_mask_adapter.BinaryMaskDatasetAdapter.get_individual_instances"]], "get_sample() (cocohelper.adapters.binary_mask_adapter.binarymaskdatasetadapter method)": [[3, "cocohelper.adapters.binary_mask_adapter.BinaryMaskDatasetAdapter.get_sample"]], "read_image() (cocohelper.adapters.binary_mask_adapter.binarymaskdatasetadapter method)": [[3, "cocohelper.adapters.binary_mask_adapter.BinaryMaskDatasetAdapter.read_image"]], "cocohelper.adapters.dataset_adapter": [[4, "module-cocohelper.adapters.dataset_adapter"]], "datasetadapter (class in cocohelper.adapters.dataset_adapter)": [[5, "cocohelper.adapters.dataset_adapter.DatasetAdapter"]], "_abc_impl (cocohelper.adapters.dataset_adapter.datasetadapter attribute)": [[5, "cocohelper.adapters.dataset_adapter.DatasetAdapter._abc_impl"]], "get_categories() (cocohelper.adapters.dataset_adapter.datasetadapter method)": [[5, "cocohelper.adapters.dataset_adapter.DatasetAdapter.get_categories"]], "get_sample() (cocohelper.adapters.dataset_adapter.datasetadapter method)": [[5, "cocohelper.adapters.dataset_adapter.DatasetAdapter.get_sample"]], "read_image() (cocohelper.adapters.dataset_adapter.datasetadapter method)": [[5, "cocohelper.adapters.dataset_adapter.DatasetAdapter.read_image"]], "cocohelper.dataframe": [[6, "module-cocohelper.dataframe"]], "cocodataframe (class in cocohelper.dataframe)": [[7, "cocohelper.dataframe.COCODataFrame"]], "t (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.T"]], "_axis_len (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._AXIS_LEN"]], "_axis_names (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._AXIS_NAMES"]], "_axis_numbers (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._AXIS_NUMBERS"]], "_axis_orders (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._AXIS_ORDERS"]], "_axis_to_axis_number (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._AXIS_TO_AXIS_NUMBER"]], "_handled_types (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._HANDLED_TYPES"]], "_accessors (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._accessors"]], "_accum_func() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._accum_func"]], "_add_numeric_operations() (cocohelper.dataframe.cocodataframe class method)": [[7, "cocohelper.dataframe.COCODataFrame._add_numeric_operations"]], "_agg_by_level() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._agg_by_level"]], "_agg_examples_doc (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._agg_examples_doc"]], "_agg_summary_and_see_also_doc (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._agg_summary_and_see_also_doc"]], "_align_frame() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._align_frame"]], "_align_series() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._align_series"]], "_append() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._append"]], "_arith_method() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._arith_method"]], "_as_manager() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._as_manager"]], "_attrs (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._attrs"]], "_box_col_values() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._box_col_values"]], "_cache (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._cache"]], "_can_fast_transpose (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._can_fast_transpose"]], "_check_inplace_and_allows_duplicate_labels() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._check_inplace_and_allows_duplicate_labels"]], "_check_inplace_setting() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._check_inplace_setting"]], "_check_is_chained_assignment_possible() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._check_is_chained_assignment_possible"]], "_check_label_or_level_ambiguity() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._check_label_or_level_ambiguity"]], "_check_setitem_copy() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._check_setitem_copy"]], "_clear_item_cache() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._clear_item_cache"]], "_clip_with_one_bound() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._clip_with_one_bound"]], "_clip_with_scalar() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._clip_with_scalar"]], "_cmp_method() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._cmp_method"]], "_combine_frame() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._combine_frame"]], "_consolidate() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._consolidate"]], "_consolidate_inplace() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._consolidate_inplace"]], "_construct_axes_dict() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._construct_axes_dict"]], "_construct_axes_from_arguments() (cocohelper.dataframe.cocodataframe class method)": [[7, "cocohelper.dataframe.COCODataFrame._construct_axes_from_arguments"]], "_construct_result() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._construct_result"]], "_constructor (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._constructor"]], "_convert() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._convert"]], "_count_level() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._count_level"]], "_data (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._data"]], "_dir_additions() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._dir_additions"]], "_dir_deletions() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._dir_deletions"]], "_dispatch_frame_op() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._dispatch_frame_op"]], "_drop_axis() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._drop_axis"]], "_drop_labels_or_levels() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._drop_labels_or_levels"]], "_ensure_valid_index() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._ensure_valid_index"]], "_find_valid_index() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._find_valid_index"]], "_from_arrays() (cocohelper.dataframe.cocodataframe class method)": [[7, "cocohelper.dataframe.COCODataFrame._from_arrays"]], "_get_agg_axis() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._get_agg_axis"]], "_get_axis() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._get_axis"]], "_get_axis_name() (cocohelper.dataframe.cocodataframe class method)": [[7, "cocohelper.dataframe.COCODataFrame._get_axis_name"]], "_get_axis_number() (cocohelper.dataframe.cocodataframe class method)": [[7, "cocohelper.dataframe.COCODataFrame._get_axis_number"]], "_get_axis_resolvers() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._get_axis_resolvers"]], "_get_block_manager_axis() (cocohelper.dataframe.cocodataframe class method)": [[7, "cocohelper.dataframe.COCODataFrame._get_block_manager_axis"]], "_get_bool_data() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._get_bool_data"]], "_get_cleaned_column_resolvers() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._get_cleaned_column_resolvers"]], "_get_column_array() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._get_column_array"]], "_get_index_resolvers() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._get_index_resolvers"]], "_get_item_cache() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._get_item_cache"]], "_get_label_or_level_values() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._get_label_or_level_values"]], "_get_numeric_data() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._get_numeric_data"]], "_get_value() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._get_value"]], "_getitem_bool_array() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._getitem_bool_array"]], "_getitem_multilevel() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._getitem_multilevel"]], "_gotitem() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._gotitem"]], "_hidden_attrs (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._hidden_attrs"]], "_indexed_same() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._indexed_same"]], "_info_axis (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._info_axis"]], "_info_axis_name (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._info_axis_name"]], "_info_axis_number (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._info_axis_number"]], "_info_repr() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._info_repr"]], "_init_mgr() (cocohelper.dataframe.cocodataframe class method)": [[7, "cocohelper.dataframe.COCODataFrame._init_mgr"]], "_inplace_method() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._inplace_method"]], "_internal_names (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._internal_names"]], "_internal_names_set (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._internal_names_set"]], "_invert_join_how() (cocohelper.dataframe.cocodataframe static method)": [[7, "cocohelper.dataframe.COCODataFrame._invert_join_how"]], "_is_copy (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._is_copy"]], "_is_homogeneous_type (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._is_homogeneous_type"]], "_is_label_or_level_reference() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._is_label_or_level_reference"]], "_is_label_reference() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._is_label_reference"]], "_is_level_reference() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._is_level_reference"]], "_is_mixed_type (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._is_mixed_type"]], "_is_view (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._is_view"]], "_iset_item() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._iset_item"]], "_iset_item_mgr() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._iset_item_mgr"]], "_iset_not_inplace() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._iset_not_inplace"]], "_iter_column_arrays() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._iter_column_arrays"]], "_ixs() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._ixs"]], "_join_compat() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._join_compat"]], "_logical_func() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._logical_func"]], "_logical_method() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._logical_method"]], "_maybe_cache_changed() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._maybe_cache_changed"]], "_maybe_update_cacher() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._maybe_update_cacher"]], "_metadata (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._metadata"]], "_mgr (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._mgr"]], "_min_count_stat_function() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._min_count_stat_function"]], "_needs_reindex_multi() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._needs_reindex_multi"]], "_protect_consolidate() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._protect_consolidate"]], "_reduce() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._reduce"]], "_reduce_axis1() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._reduce_axis1"]], "_reindex_axes() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._reindex_axes"]], "_reindex_columns() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._reindex_columns"]], "_reindex_index() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._reindex_index"]], "_reindex_multi() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._reindex_multi"]], "_reindex_with_indexers() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._reindex_with_indexers"]], "_rename() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._rename"]], "_replace_columnwise() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._replace_columnwise"]], "_repr_data_resource_() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._repr_data_resource_"]], "_repr_fits_horizontal_() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._repr_fits_horizontal_"]], "_repr_fits_vertical_() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._repr_fits_vertical_"]], "_repr_html_() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._repr_html_"]], "_repr_latex_() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._repr_latex_"]], "_reset_cache() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._reset_cache"]], "_reset_cacher() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._reset_cacher"]], "_sanitize_column() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._sanitize_column"]], "_series (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._series"]], "_set_axis() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._set_axis"]], "_set_axis_name() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._set_axis_name"]], "_set_axis_nocheck() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._set_axis_nocheck"]], "_set_is_copy() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._set_is_copy"]], "_set_item() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._set_item"]], "_set_item_frame_value() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._set_item_frame_value"]], "_set_item_mgr() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._set_item_mgr"]], "_set_value() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._set_value"]], "_setitem_array() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._setitem_array"]], "_setitem_frame() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._setitem_frame"]], "_setitem_slice() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._setitem_slice"]], "_slice() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._slice"]], "_stat_axis (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._stat_axis"]], "_stat_axis_name (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._stat_axis_name"]], "_stat_axis_number (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._stat_axis_number"]], "_stat_function() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._stat_function"]], "_stat_function_ddof() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._stat_function_ddof"]], "_take() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._take"]], "_take_with_is_copy() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._take_with_is_copy"]], "_to_dict_of_blocks() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._to_dict_of_blocks"]], "_typ (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._typ"]], "_update_inplace() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._update_inplace"]], "_validate_dtype() (cocohelper.dataframe.cocodataframe class method)": [[7, "cocohelper.dataframe.COCODataFrame._validate_dtype"]], "_values (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame._values"]], "_where() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame._where"]], "abs() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.abs"]], "add() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.add"]], "add_prefix() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.add_prefix"]], "add_suffix() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.add_suffix"]], "agg() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.agg"]], "aggregate() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.aggregate"]], "align() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.align"]], "all() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.all"]], "any() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.any"]], "append() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.append"]], "apply() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.apply"]], "applymap() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.applymap"]], "asfreq() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.asfreq"]], "asof() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.asof"]], "assign() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.assign"]], "astype() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.astype"]], "at (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.at"]], "at_time() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.at_time"]], "attrs (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.attrs"]], "auto_reset_index() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.auto_reset_index"]], "axes (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.axes"]], "backfill() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.backfill"]], "between_time() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.between_time"]], "bfill() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.bfill"]], "bool() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.bool"]], "boxplot() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.boxplot"]], "clip() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.clip"]], "cocojoin() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.cocojoin"]], "columns (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.columns"]], "combine() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.combine"]], "combine_first() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.combine_first"]], "compare() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.compare"]], "convert_dtypes() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.convert_dtypes"]], "copy() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.copy"]], "corr() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.corr"]], "corrwith() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.corrwith"]], "count() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.count"]], "cov() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.cov"]], "cummax() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.cummax"]], "cummin() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.cummin"]], "cumprod() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.cumprod"]], "cumsum() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.cumsum"]], "data (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.data"]], "describe() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.describe"]], "diff() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.diff"]], "div() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.div"]], "divide() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.divide"]], "dot() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.dot"]], "drop() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.drop"]], "drop_duplicates() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.drop_duplicates"]], "droplevel() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.droplevel"]], "dropna() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.dropna"]], "dtypes (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.dtypes"]], "duplicated() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.duplicated"]], "empty (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.empty"]], "eq() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.eq"]], "equals() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.equals"]], "eval() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.eval"]], "ewm() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.ewm"]], "expanding() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.expanding"]], "explode() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.explode"]], "ffill() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.ffill"]], "fillna() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.fillna"]], "filter() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.filter"]], "first() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.first"]], "first_valid_index() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.first_valid_index"]], "flags (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.flags"]], "floordiv() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.floordiv"]], "from_dict() (cocohelper.dataframe.cocodataframe class method)": [[7, "cocohelper.dataframe.COCODataFrame.from_dict"]], "from_records() (cocohelper.dataframe.cocodataframe class method)": [[7, "cocohelper.dataframe.COCODataFrame.from_records"]], "ge() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.ge"]], "get() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.get"]], "groupby() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.groupby"]], "gt() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.gt"]], "head() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.head"]], "hist() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.hist"]], "iat (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.iat"]], "idxmax() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.idxmax"]], "idxmin() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.idxmin"]], "iloc (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.iloc"]], "index (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.index"]], "infer_objects() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.infer_objects"]], "info() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.info"]], "insert() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.insert"]], "interpolate() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.interpolate"]], "isetitem() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.isetitem"]], "isin() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.isin"]], "isna() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.isna"]], "isnull() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.isnull"]], "items() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.items"]], "iteritems() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.iteritems"]], "iterrows() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.iterrows"]], "itertuples() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.itertuples"]], "join() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.join"]], "keys() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.keys"]], "kurt() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.kurt"]], "kurtosis() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.kurtosis"]], "last() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.last"]], "last_valid_index() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.last_valid_index"]], "le() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.le"]], "loc (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.loc"]], "lookup() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.lookup"]], "lt() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.lt"]], "mad() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.mad"]], "map_dataframe_cols() (cocohelper.dataframe.cocodataframe static method)": [[7, "cocohelper.dataframe.COCODataFrame.map_dataframe_cols"]], "mask() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.mask"]], "max() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.max"]], "mean() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.mean"]], "median() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.median"]], "melt() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.melt"]], "memory_usage() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.memory_usage"]], "merge() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.merge"]], "min() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.min"]], "mod() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.mod"]], "mode() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.mode"]], "mul() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.mul"]], "multiply() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.multiply"]], "name (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.name"]], "ndim (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.ndim"]], "ne() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.ne"]], "nlargest() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.nlargest"]], "notna() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.notna"]], "notnull() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.notnull"]], "nsmallest() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.nsmallest"]], "nunique() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.nunique"]], "orig_data (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.orig_data"]], "pad() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.pad"]], "pct_change() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.pct_change"]], "pipe() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.pipe"]], "pivot() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.pivot"]], "pivot_table() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.pivot_table"]], "pop() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.pop"]], "pow() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.pow"]], "prod() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.prod"]], "product() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.product"]], "quantile() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.quantile"]], "query() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.query"]], "radd() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.radd"]], "rank() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.rank"]], "rdiv() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.rdiv"]], "reindex() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.reindex"]], "reindex_like() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.reindex_like"]], "rename() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.rename"]], "rename_axis() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.rename_axis"]], "reorder_levels() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.reorder_levels"]], "replace() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.replace"]], "resample() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.resample"]], "reset_index() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.reset_index"]], "rfloordiv() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.rfloordiv"]], "rmod() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.rmod"]], "rmul() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.rmul"]], "rolling() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.rolling"]], "round() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.round"]], "rpow() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.rpow"]], "rsub() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.rsub"]], "rtruediv() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.rtruediv"]], "sample() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.sample"]], "select_dtypes() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.select_dtypes"]], "sem() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.sem"]], "set_axis() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.set_axis"]], "set_flags() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.set_flags"]], "set_index() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.set_index"]], "shape (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.shape"]], "shift() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.shift"]], "size (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.size"]], "skew() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.skew"]], "slice_shift() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.slice_shift"]], "sort_index() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.sort_index"]], "sort_values() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.sort_values"]], "squeeze() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.squeeze"]], "stack() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.stack"]], "std() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.std"]], "style (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.style"]], "sub() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.sub"]], "subtract() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.subtract"]], "sum() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.sum"]], "swapaxes() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.swapaxes"]], "swaplevel() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.swaplevel"]], "tail() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.tail"]], "take() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.take"]], "to_clipboard() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_clipboard"]], "to_csv() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_csv"]], "to_dict() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_dict"]], "to_excel() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_excel"]], "to_feather() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_feather"]], "to_gbq() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_gbq"]], "to_hdf() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_hdf"]], "to_html() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_html"]], "to_json() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_json"]], "to_latex() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_latex"]], "to_markdown() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_markdown"]], "to_numpy() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_numpy"]], "to_orc() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_orc"]], "to_parquet() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_parquet"]], "to_period() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_period"]], "to_pickle() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_pickle"]], "to_records() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_records"]], "to_sql() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_sql"]], "to_stata() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_stata"]], "to_string() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_string"]], "to_timestamp() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_timestamp"]], "to_xarray() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_xarray"]], "to_xml() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.to_xml"]], "transform() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.transform"]], "transpose() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.transpose"]], "truediv() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.truediv"]], "truncate() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.truncate"]], "try_remap_col() (cocohelper.dataframe.cocodataframe static method)": [[7, "cocohelper.dataframe.COCODataFrame.try_remap_col"]], "tshift() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.tshift"]], "tz_convert() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.tz_convert"]], "tz_localize() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.tz_localize"]], "unmap_dataframe_cols() (cocohelper.dataframe.cocodataframe static method)": [[7, "cocohelper.dataframe.COCODataFrame.unmap_dataframe_cols"]], "unstack() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.unstack"]], "update() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.update"]], "value_counts() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.value_counts"]], "values (cocohelper.dataframe.cocodataframe attribute)": [[7, "cocohelper.dataframe.COCODataFrame.values"]], "var() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.var"]], "where() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.where"]], "xs() (cocohelper.dataframe.cocodataframe method)": [[7, "cocohelper.dataframe.COCODataFrame.xs"]], "cocohelper.errors": [[8, "module-cocohelper.errors"]], "cocohelper.errors.not_found_error": [[9, "module-cocohelper.errors.not_found_error"]], "cocoannotationnotfounderror": [[10, "cocohelper.errors.not_found_error.COCOAnnotationNotFoundError"]], "cocoimagenotfounderror": [[11, "cocohelper.errors.not_found_error.COCOImageNotFoundError"]], "cocohelper.errors.validation_error": [[12, "module-cocohelper.errors.validation_error"]], "cocovalidationerror": [[13, "cocohelper.errors.validation_error.COCOValidationError"]], "cocohelper.filters": [[14, "module-cocohelper.filters"]], "cocohelper.filters.cocofilters": [[15, "module-cocohelper.filters.cocofilters"]], "cocohelper.filters.cocofilters.cocofilters": [[16, "module-cocohelper.filters.cocofilters.cocofilters"]], "anns_filter() (in module cocohelper.filters.cocofilters.cocofilters)": [[17, "cocohelper.filters.cocofilters.cocofilters.anns_filter"]], "cats_filter() (in module cocohelper.filters.cocofilters.cocofilters)": [[18, "cocohelper.filters.cocofilters.cocofilters.cats_filter"]], "imgs_filter() (in module cocohelper.filters.cocofilters.cocofilters)": [[19, "cocohelper.filters.cocofilters.cocofilters.imgs_filter"]], "cocohelper.filters.filter": [[20, "module-cocohelper.filters.filter"]], "andfilter (class in cocohelper.filters.filter)": [[21, "cocohelper.filters.filter.AndFilter"]], "_abc_impl (cocohelper.filters.filter.andfilter attribute)": [[21, "cocohelper.filters.filter.AndFilter._abc_impl"]], "apply() (cocohelper.filters.filter.andfilter method)": [[21, "cocohelper.filters.filter.AndFilter.apply"]], "columnfilter (class in cocohelper.filters.filter)": [[22, "cocohelper.filters.filter.ColumnFilter"]], "_abc_impl (cocohelper.filters.filter.columnfilter attribute)": [[22, "cocohelper.filters.filter.ColumnFilter._abc_impl"]], "_apply() (cocohelper.filters.filter.columnfilter method)": [[22, "cocohelper.filters.filter.ColumnFilter._apply"]], "apply() (cocohelper.filters.filter.columnfilter method)": [[22, "cocohelper.filters.filter.ColumnFilter.apply"]], "composefilter (class in cocohelper.filters.filter)": [[23, "cocohelper.filters.filter.ComposeFilter"]], "_abc_impl (cocohelper.filters.filter.composefilter attribute)": [[23, "cocohelper.filters.filter.ComposeFilter._abc_impl"]], "apply() (cocohelper.filters.filter.composefilter method)": [[23, "cocohelper.filters.filter.ComposeFilter.apply"]], "filter (class in cocohelper.filters.filter)": [[24, "cocohelper.filters.filter.Filter"]], "_abc_impl (cocohelper.filters.filter.filter attribute)": [[24, "cocohelper.filters.filter.Filter._abc_impl"]], "apply() (cocohelper.filters.filter.filter method)": [[24, "cocohelper.filters.filter.Filter.apply"]], "notfilter (class in cocohelper.filters.filter)": [[25, "cocohelper.filters.filter.NotFilter"]], "_abc_impl (cocohelper.filters.filter.notfilter attribute)": [[25, "cocohelper.filters.filter.NotFilter._abc_impl"]], "apply() (cocohelper.filters.filter.notfilter method)": [[25, "cocohelper.filters.filter.NotFilter.apply"]], "orfilter (class in cocohelper.filters.filter)": [[26, "cocohelper.filters.filter.OrFilter"]], "_abc_impl (cocohelper.filters.filter.orfilter attribute)": [[26, "cocohelper.filters.filter.OrFilter._abc_impl"]], "apply() (cocohelper.filters.filter.orfilter method)": [[26, "cocohelper.filters.filter.OrFilter.apply"]], "rangefilter (class in cocohelper.filters.filter)": [[27, "cocohelper.filters.filter.RangeFilter"]], "_abc_impl (cocohelper.filters.filter.rangefilter attribute)": [[27, "cocohelper.filters.filter.RangeFilter._abc_impl"]], "_apply() (cocohelper.filters.filter.rangefilter method)": [[27, "cocohelper.filters.filter.RangeFilter._apply"]], "apply() (cocohelper.filters.filter.rangefilter method)": [[27, "cocohelper.filters.filter.RangeFilter.apply"]], "set_strategy() (cocohelper.filters.filter.rangefilter method)": [[27, "cocohelper.filters.filter.RangeFilter.set_strategy"]], "valuefilter (class in cocohelper.filters.filter)": [[28, "cocohelper.filters.filter.ValueFilter"]], "_abc_impl (cocohelper.filters.filter.valuefilter attribute)": [[28, "cocohelper.filters.filter.ValueFilter._abc_impl"]], "_apply() (cocohelper.filters.filter.valuefilter method)": [[28, "cocohelper.filters.filter.ValueFilter._apply"]], "apply() (cocohelper.filters.filter.valuefilter method)": [[28, "cocohelper.filters.filter.ValueFilter.apply"]], "set_strategy() (cocohelper.filters.filter.valuefilter method)": [[28, "cocohelper.filters.filter.ValueFilter.set_strategy"]], "cocohelper.filters.strategies": [[29, "module-cocohelper.filters.strategies"]], "cocohelper.filters.strategies.functional": [[30, "module-cocohelper.filters.strategies.functional"]], "filter_multi_rows_having_all() (in module cocohelper.filters.strategies.functional)": [[31, "cocohelper.filters.strategies.functional.filter_multi_rows_having_all"]], "filter_multi_rows_having_any() (in module cocohelper.filters.strategies.functional)": [[32, "cocohelper.filters.strategies.functional.filter_multi_rows_having_any"]], "filter_rows_having() (in module cocohelper.filters.strategies.functional)": [[33, "cocohelper.filters.strategies.functional.filter_rows_having"]], "filter_rows_in_range() (in module cocohelper.filters.strategies.functional)": [[34, "cocohelper.filters.strategies.functional.filter_rows_in_range"]], "filter_rows_out_range() (in module cocohelper.filters.strategies.functional)": [[35, "cocohelper.filters.strategies.functional.filter_rows_out_range"]], "cocohelper.filters.strategies.strategies": [[36, "module-cocohelper.filters.strategies.strategies"]], "allvaluefilterstrategy (class in cocohelper.filters.strategies.strategies)": [[37, "cocohelper.filters.strategies.strategies.AllValueFilterStrategy"]], "_abc_impl (cocohelper.filters.strategies.strategies.allvaluefilterstrategy attribute)": [[37, "cocohelper.filters.strategies.strategies.AllValueFilterStrategy._abc_impl"]], "apply() (cocohelper.filters.strategies.strategies.allvaluefilterstrategy method)": [[37, "cocohelper.filters.strategies.strategies.AllValueFilterStrategy.apply"]], "anyvaluefilterstrategy (class in cocohelper.filters.strategies.strategies)": [[38, "cocohelper.filters.strategies.strategies.AnyValueFilterStrategy"]], "_abc_impl (cocohelper.filters.strategies.strategies.anyvaluefilterstrategy attribute)": [[38, "cocohelper.filters.strategies.strategies.AnyValueFilterStrategy._abc_impl"]], "apply() (cocohelper.filters.strategies.strategies.anyvaluefilterstrategy method)": [[38, "cocohelper.filters.strategies.strategies.AnyValueFilterStrategy.apply"]], "havingvaluefilterstrategy (class in cocohelper.filters.strategies.strategies)": [[39, "cocohelper.filters.strategies.strategies.HavingValueFilterStrategy"]], "_abc_impl (cocohelper.filters.strategies.strategies.havingvaluefilterstrategy attribute)": [[39, "cocohelper.filters.strategies.strategies.HavingValueFilterStrategy._abc_impl"]], "apply() (cocohelper.filters.strategies.strategies.havingvaluefilterstrategy method)": [[39, "cocohelper.filters.strategies.strategies.HavingValueFilterStrategy.apply"]], "inrangefilterstrategy (class in cocohelper.filters.strategies.strategies)": [[40, "cocohelper.filters.strategies.strategies.InRangeFilterStrategy"]], "_abc_impl (cocohelper.filters.strategies.strategies.inrangefilterstrategy attribute)": [[40, "cocohelper.filters.strategies.strategies.InRangeFilterStrategy._abc_impl"]], "apply() (cocohelper.filters.strategies.strategies.inrangefilterstrategy method)": [[40, "cocohelper.filters.strategies.strategies.InRangeFilterStrategy.apply"]], "notinrangefilterstrategy (class in cocohelper.filters.strategies.strategies)": [[41, "cocohelper.filters.strategies.strategies.NotInRangeFilterStrategy"]], "_abc_impl (cocohelper.filters.strategies.strategies.notinrangefilterstrategy attribute)": [[41, "cocohelper.filters.strategies.strategies.NotInRangeFilterStrategy._abc_impl"]], "apply() (cocohelper.filters.strategies.strategies.notinrangefilterstrategy method)": [[41, "cocohelper.filters.strategies.strategies.NotInRangeFilterStrategy.apply"]], "rangefilterstrategy (class in cocohelper.filters.strategies.strategies)": [[42, "cocohelper.filters.strategies.strategies.RangeFilterStrategy"]], "_abc_impl (cocohelper.filters.strategies.strategies.rangefilterstrategy attribute)": [[42, "cocohelper.filters.strategies.strategies.RangeFilterStrategy._abc_impl"]], "apply() (cocohelper.filters.strategies.strategies.rangefilterstrategy method)": [[42, "cocohelper.filters.strategies.strategies.RangeFilterStrategy.apply"]], "valuefilterstrategy (class in cocohelper.filters.strategies.strategies)": [[43, "cocohelper.filters.strategies.strategies.ValueFilterStrategy"]], "_abc_impl (cocohelper.filters.strategies.strategies.valuefilterstrategy attribute)": [[43, "cocohelper.filters.strategies.strategies.ValueFilterStrategy._abc_impl"]], "apply() (cocohelper.filters.strategies.strategies.valuefilterstrategy method)": [[43, "cocohelper.filters.strategies.strategies.ValueFilterStrategy.apply"]], "cocohelper.helper": [[44, "module-cocohelper.helper"]], "cococolsmapper (class in cocohelper.helper)": [[45, "cocohelper.helper.COCOColsMapper"]], "all (cocohelper.helper.cococolsmapper attribute)": [[45, "cocohelper.helper.COCOColsMapper.all"]], "ann (cocohelper.helper.cococolsmapper attribute)": [[45, "cocohelper.helper.COCOColsMapper.ann"]], "cat (cocohelper.helper.cococolsmapper attribute)": [[45, "cocohelper.helper.COCOColsMapper.cat"]], "img (cocohelper.helper.cococolsmapper attribute)": [[45, "cocohelper.helper.COCOColsMapper.img"]], "lic (cocohelper.helper.cococolsmapper attribute)": [[45, "cocohelper.helper.COCOColsMapper.lic"]], "to_origs (cocohelper.helper.cococolsmapper attribute)": [[45, "cocohelper.helper.COCOColsMapper.to_origs"]], "cocohelper (class in cocohelper.helper)": [[46, "cocohelper.helper.COCOHelper"]], "_copy_images() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper._copy_images"]], "_read_annotations_file() (cocohelper.helper.cocohelper class method)": [[46, "cocohelper.helper.COCOHelper._read_annotations_file"]], "_remove_unlinked_anns() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper._remove_unlinked_anns"]], "_validate() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper._validate"]], "anns (cocohelper.helper.cocohelper attribute)": [[46, "cocohelper.helper.COCOHelper.anns"]], "cats (cocohelper.helper.cocohelper attribute)": [[46, "cocohelper.helper.COCOHelper.cats"]], "copy() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.copy"]], "drop_duplicate_anns() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.drop_duplicate_anns"]], "drop_duplicate_cats() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.drop_duplicate_cats"]], "drop_duplicate_imgs() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.drop_duplicate_imgs"]], "drop_duplicate_licenses() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.drop_duplicate_licenses"]], "drop_labelled() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.drop_labelled"]], "drop_unlabelled() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.drop_unlabelled"]], "filter() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.filter"]], "filter_anns() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.filter_anns"]], "filter_cats() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.filter_cats"]], "filter_imgs() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.filter_imgs"]], "filtered_anns() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.filtered_anns"]], "filtered_cats() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.filtered_cats"]], "filtered_imgs() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.filtered_imgs"]], "get_ann_sample() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.get_ann_sample"]], "get_img() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.get_img"]], "get_img_sample() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.get_img_sample"]], "imgs (cocohelper.helper.cocohelper attribute)": [[46, "cocohelper.helper.COCOHelper.imgs"]], "info (cocohelper.helper.cocohelper attribute)": [[46, "cocohelper.helper.COCOHelper.info"]], "joins (cocohelper.helper.cocohelper attribute)": [[46, "cocohelper.helper.COCOHelper.joins"]], "labelled_imgs (cocohelper.helper.cocohelper attribute)": [[46, "cocohelper.helper.COCOHelper.labelled_imgs"]], "licenses (cocohelper.helper.cocohelper attribute)": [[46, "cocohelper.helper.COCOHelper.licenses"]], "load() (cocohelper.helper.cocohelper class method)": [[46, "cocohelper.helper.COCOHelper.load"]], "load_data() (cocohelper.helper.cocohelper class method)": [[46, "cocohelper.helper.COCOHelper.load_data"]], "load_json() (cocohelper.helper.cocohelper class method)": [[46, "cocohelper.helper.COCOHelper.load_json"]], "merge() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.merge"]], "new_info_dict() (cocohelper.helper.cocohelper static method)": [[46, "cocohelper.helper.COCOHelper.new_info_dict"]], "paths (cocohelper.helper.cocohelper attribute)": [[46, "cocohelper.helper.COCOHelper.paths"]], "root_path (cocohelper.helper.cocohelper attribute)": [[46, "cocohelper.helper.COCOHelper.root_path"]], "save() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.save"]], "to_coco() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.to_coco"]], "to_json_dataset() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.to_json_dataset"]], "unlabelled_imgs (cocohelper.helper.cocohelper attribute)": [[46, "cocohelper.helper.COCOHelper.unlabelled_imgs"]], "validator (cocohelper.helper.cocohelper attribute)": [[46, "cocohelper.helper.COCOHelper.validator"]], "write_annotations_file() (cocohelper.helper.cocohelper method)": [[46, "cocohelper.helper.COCOHelper.write_annotations_file"]], "cocohelperpaths (class in cocohelper.helper)": [[47, "cocohelper.helper.COCOHelperPaths"]], "ann_dir (cocohelper.helper.cocohelperpaths attribute)": [[47, "cocohelper.helper.COCOHelperPaths.ann_dir"]], "ann_fname (cocohelper.helper.cocohelperpaths attribute)": [[47, "cocohelper.helper.COCOHelperPaths.ann_fname"]], "img_dir (cocohelper.helper.cocohelperpaths attribute)": [[47, "cocohelper.helper.COCOHelperPaths.img_dir"]], "cocohelper.importer": [[48, "module-cocohelper.importer"]], "importer (class in cocohelper.importer)": [[49, "cocohelper.importer.Importer"]], "create() (cocohelper.importer.importer method)": [[49, "cocohelper.importer.Importer.create"]], "_get_empty_json() (in module cocohelper.importer)": [[50, "cocohelper.importer._get_empty_json"]], "cocohelper.joins": [[51, "module-cocohelper.joins"]], "cocojoins (class in cocohelper.joins)": [[52, "cocohelper.joins.COCOJoins"]], "anns_cats (cocohelper.joins.cocojoins attribute)": [[52, "cocohelper.joins.COCOJoins.anns_cats"]], "anns_cats_imgs (cocohelper.joins.cocojoins attribute)": [[52, "cocohelper.joins.COCOJoins.anns_cats_imgs"]], "anns_imgs (cocohelper.joins.cocojoins attribute)": [[52, "cocohelper.joins.COCOJoins.anns_imgs"]], "anns_imgs_cats (cocohelper.joins.cocojoins attribute)": [[52, "cocohelper.joins.COCOJoins.anns_imgs_cats"]], "cats_anns (cocohelper.joins.cocojoins attribute)": [[52, "cocohelper.joins.COCOJoins.cats_anns"]], "cats_anns_imgs (cocohelper.joins.cocojoins attribute)": [[52, "cocohelper.joins.COCOJoins.cats_anns_imgs"]], "cats_imgs_anns (cocohelper.joins.cocojoins attribute)": [[52, "cocohelper.joins.COCOJoins.cats_imgs_anns"]], "extract_anns() (cocohelper.joins.cocojoins method)": [[52, "cocohelper.joins.COCOJoins.extract_anns"]], "extract_cats() (cocohelper.joins.cocojoins method)": [[52, "cocohelper.joins.COCOJoins.extract_cats"]], "extract_imgs() (cocohelper.joins.cocojoins method)": [[52, "cocohelper.joins.COCOJoins.extract_imgs"]], "imgs_anns (cocohelper.joins.cocojoins attribute)": [[52, "cocohelper.joins.COCOJoins.imgs_anns"]], "imgs_anns_cats (cocohelper.joins.cocojoins attribute)": [[52, "cocohelper.joins.COCOJoins.imgs_anns_cats"]], "imgs_cats_anns (cocohelper.joins.cocojoins attribute)": [[52, "cocohelper.joins.COCOJoins.imgs_cats_anns"]], "cocohelper.merge": [[53, "module-cocohelper.merge"]], "_create_cat_mapping() (in module cocohelper.merge)": [[54, "cocohelper.merge._create_cat_mapping"]], "_create_image_mapping() (in module cocohelper.merge)": [[55, "cocohelper.merge._create_image_mapping"]], "_merge_annotations() (in module cocohelper.merge)": [[56, "cocohelper.merge._merge_annotations"]], "_merge_categories() (in module cocohelper.merge)": [[57, "cocohelper.merge._merge_categories"]], "_merge_images() (in module cocohelper.merge)": [[58, "cocohelper.merge._merge_images"]], "_merge_info() (in module cocohelper.merge)": [[59, "cocohelper.merge._merge_info"]], "_merge_licenses() (in module cocohelper.merge)": [[60, "cocohelper.merge._merge_licenses"]], "merge_coco() (in module cocohelper.merge)": [[61, "cocohelper.merge.merge_coco"]], "cocohelper.splitters": [[62, "module-cocohelper.splitters"]], "cocohelper.splitters.kfold": [[63, "module-cocohelper.splitters.kfold"]], "kfoldsplitter (class in cocohelper.splitters.kfold)": [[64, "cocohelper.splitters.kfold.KFoldSplitter"]], "_abc_impl (cocohelper.splitters.kfold.kfoldsplitter attribute)": [[64, "cocohelper.splitters.kfold.KFoldSplitter._abc_impl"]], "apply() (cocohelper.splitters.kfold.kfoldsplitter method)": [[64, "cocohelper.splitters.kfold.KFoldSplitter.apply"]], "iter() (cocohelper.splitters.kfold.kfoldsplitter method)": [[64, "cocohelper.splitters.kfold.KFoldSplitter.iter"]], "cocohelper.splitters.proportional": [[65, "module-cocohelper.splitters.proportional"]], "proportionaldatasplitter (class in cocohelper.splitters.proportional)": [[66, "cocohelper.splitters.proportional.ProportionalDataSplitter"]], "_abc_impl (cocohelper.splitters.proportional.proportionaldatasplitter attribute)": [[66, "cocohelper.splitters.proportional.ProportionalDataSplitter._abc_impl"]], "_get_ids() (cocohelper.splitters.proportional.proportionaldatasplitter method)": [[66, "cocohelper.splitters.proportional.ProportionalDataSplitter._get_ids"]], "_get_n_samples() (cocohelper.splitters.proportional.proportionaldatasplitter method)": [[66, "cocohelper.splitters.proportional.ProportionalDataSplitter._get_n_samples"]], "apply() (cocohelper.splitters.proportional.proportionaldatasplitter method)": [[66, "cocohelper.splitters.proportional.ProportionalDataSplitter.apply"]], "cocohelper.splitters.splitter": [[67, "module-cocohelper.splitters.splitter"]], "splitter (class in cocohelper.splitters.splitter)": [[68, "cocohelper.splitters.splitter.Splitter"]], "_abc_impl (cocohelper.splitters.splitter.splitter attribute)": [[68, "cocohelper.splitters.splitter.Splitter._abc_impl"]], "apply() (cocohelper.splitters.splitter.splitter method)": [[68, "cocohelper.splitters.splitter.Splitter.apply"]], "cocohelper.splitters.stratified": [[69, "module-cocohelper.splitters.stratified"]], "stratifieddatasplitter (class in cocohelper.splitters.stratified)": [[70, "cocohelper.splitters.stratified.StratifiedDataSplitter"]], "_abc_impl (cocohelper.splitters.stratified.stratifieddatasplitter attribute)": [[70, "cocohelper.splitters.stratified.StratifiedDataSplitter._abc_impl"]], "_compute_label_ratios() (cocohelper.splitters.stratified.stratifieddatasplitter static method)": [[70, "cocohelper.splitters.stratified.StratifiedDataSplitter._compute_label_ratios"]], "_get_ids() (cocohelper.splitters.stratified.stratifieddatasplitter method)": [[70, "cocohelper.splitters.stratified.StratifiedDataSplitter._get_ids"]], "_get_n_samples() (cocohelper.splitters.stratified.stratifieddatasplitter method)": [[70, "cocohelper.splitters.stratified.StratifiedDataSplitter._get_n_samples"]], "apply() (cocohelper.splitters.stratified.stratifieddatasplitter method)": [[70, "cocohelper.splitters.stratified.StratifiedDataSplitter.apply"]], "cocohelper.stats": [[71, "module-cocohelper.stats"]], "cocostats (class in cocohelper.stats)": [[72, "cocohelper.stats.COCOStats"]], "__get_annotations_ratios() (cocohelper.stats.cocostats method)": [[72, "cocohelper.stats.COCOStats.__get_annotations_ratios"]], "__get_category_ratios() (cocohelper.stats.cocostats method)": [[72, "cocohelper.stats.COCOStats.__get_category_ratios"]], "cat_ids_ratios (cocohelper.stats.cocostats attribute)": [[72, "cocohelper.stats.COCOStats.cat_ids_ratios"]], "cat_nms_ratios (cocohelper.stats.cocostats attribute)": [[72, "cocohelper.stats.COCOStats.cat_nms_ratios"]], "coco_helper (cocohelper.stats.cocostats attribute)": [[72, "cocohelper.stats.COCOStats.coco_helper"]], "get_annotation_size_stats() (cocohelper.stats.cocostats method)": [[72, "cocohelper.stats.COCOStats.get_annotation_size_stats"]], "get_image_size_stats() (cocohelper.stats.cocostats method)": [[72, "cocohelper.stats.COCOStats.get_image_size_stats"]], "get_optimal_image_size() (cocohelper.stats.cocostats method)": [[72, "cocohelper.stats.COCOStats.get_optimal_image_size"]], "nb_anns (cocohelper.stats.cocostats attribute)": [[72, "cocohelper.stats.COCOStats.nb_anns"]], "nb_cats (cocohelper.stats.cocostats attribute)": [[72, "cocohelper.stats.COCOStats.nb_cats"]], "nb_imgs (cocohelper.stats.cocostats attribute)": [[72, "cocohelper.stats.COCOStats.nb_imgs"]], "nb_imgs_wo_anns (cocohelper.stats.cocostats attribute)": [[72, "cocohelper.stats.COCOStats.nb_imgs_wo_anns"]], "cocohelper.transforms": [[73, "module-cocohelper.transforms"]], "cocohelper.transforms.compose": [[74, "module-cocohelper.transforms.compose"]], "compose (class in cocohelper.transforms.compose)": [[75, "cocohelper.transforms.compose.Compose"]], "_abc_impl (cocohelper.transforms.compose.compose attribute)": [[75, "cocohelper.transforms.compose.Compose._abc_impl"]], "append() (cocohelper.transforms.compose.compose method)": [[75, "cocohelper.transforms.compose.Compose.append"]], "apply() (cocohelper.transforms.compose.compose method)": [[75, "cocohelper.transforms.compose.Compose.apply"]], "clear() (cocohelper.transforms.compose.compose method)": [[75, "cocohelper.transforms.compose.Compose.clear"]], "compute_bbox_area() (cocohelper.transforms.compose.compose static method)": [[75, "cocohelper.transforms.compose.Compose.compute_bbox_area"]], "insert() (cocohelper.transforms.compose.compose method)": [[75, "cocohelper.transforms.compose.Compose.insert"]], "pop() (cocohelper.transforms.compose.compose method)": [[75, "cocohelper.transforms.compose.Compose.pop"]], "remove() (cocohelper.transforms.compose.compose method)": [[75, "cocohelper.transforms.compose.Compose.remove"]], "reverse() (cocohelper.transforms.compose.compose method)": [[75, "cocohelper.transforms.compose.Compose.reverse"]], "transform_dataset() (cocohelper.transforms.compose.compose method)": [[75, "cocohelper.transforms.compose.Compose.transform_dataset"]], "cocohelper.transforms.crop": [[76, "module-cocohelper.transforms.crop"]], "centercrop (class in cocohelper.transforms.crop)": [[77, "cocohelper.transforms.crop.CenterCrop"]], "_abc_impl (cocohelper.transforms.crop.centercrop attribute)": [[77, "cocohelper.transforms.crop.CenterCrop._abc_impl"]], "apply() (cocohelper.transforms.crop.centercrop method)": [[77, "cocohelper.transforms.crop.CenterCrop.apply"]], "compute_bbox_area() (cocohelper.transforms.crop.centercrop static method)": [[77, "cocohelper.transforms.crop.CenterCrop.compute_bbox_area"]], "transform_dataset() (cocohelper.transforms.crop.centercrop method)": [[77, "cocohelper.transforms.crop.CenterCrop.transform_dataset"]], "crop (class in cocohelper.transforms.crop)": [[78, "cocohelper.transforms.crop.Crop"]], "_abc_impl (cocohelper.transforms.crop.crop attribute)": [[78, "cocohelper.transforms.crop.Crop._abc_impl"]], "apply() (cocohelper.transforms.crop.crop method)": [[78, "cocohelper.transforms.crop.Crop.apply"]], "compute_bbox_area() (cocohelper.transforms.crop.crop static method)": [[78, "cocohelper.transforms.crop.Crop.compute_bbox_area"]], "transform_dataset() (cocohelper.transforms.crop.crop method)": [[78, "cocohelper.transforms.crop.Crop.transform_dataset"]], "randomcrop (class in cocohelper.transforms.crop)": [[79, "cocohelper.transforms.crop.RandomCrop"]], "_abc_impl (cocohelper.transforms.crop.randomcrop attribute)": [[79, "cocohelper.transforms.crop.RandomCrop._abc_impl"]], "apply() (cocohelper.transforms.crop.randomcrop method)": [[79, "cocohelper.transforms.crop.RandomCrop.apply"]], "compute_bbox_area() (cocohelper.transforms.crop.randomcrop static method)": [[79, "cocohelper.transforms.crop.RandomCrop.compute_bbox_area"]], "transform_dataset() (cocohelper.transforms.crop.randomcrop method)": [[79, "cocohelper.transforms.crop.RandomCrop.transform_dataset"]], "sizemode (class in cocohelper.transforms.crop)": [[80, "cocohelper.transforms.crop.SizeMode"]], "percentage (cocohelper.transforms.crop.sizemode attribute)": [[80, "cocohelper.transforms.crop.SizeMode.percentage"]], "pixel (cocohelper.transforms.crop.sizemode attribute)": [[80, "cocohelper.transforms.crop.SizeMode.pixel"]], "_check_bbox() (in module cocohelper.transforms.crop)": [[81, "cocohelper.transforms.crop._check_bbox"]], "_crop_bbox() (in module cocohelper.transforms.crop)": [[82, "cocohelper.transforms.crop._crop_bbox"]], "_crop_segmentation() (in module cocohelper.transforms.crop)": [[83, "cocohelper.transforms.crop._crop_segmentation"]], "_norm_bbox() (in module cocohelper.transforms.crop)": [[84, "cocohelper.transforms.crop._norm_bbox"]], "crop_img() (in module cocohelper.transforms.crop)": [[85, "cocohelper.transforms.crop.crop_img"]], "cocohelper.transforms.randomflip": [[86, "module-cocohelper.transforms.randomflip"]], "randomflip (class in cocohelper.transforms.randomflip)": [[87, "cocohelper.transforms.randomflip.RandomFlip"]], "_abc_impl (cocohelper.transforms.randomflip.randomflip attribute)": [[87, "cocohelper.transforms.randomflip.RandomFlip._abc_impl"]], "_flip_bbox() (cocohelper.transforms.randomflip.randomflip static method)": [[87, "cocohelper.transforms.randomflip.RandomFlip._flip_bbox"]], "_flip_img() (cocohelper.transforms.randomflip.randomflip static method)": [[87, "cocohelper.transforms.randomflip.RandomFlip._flip_img"]], "_flip_segmentations() (cocohelper.transforms.randomflip.randomflip static method)": [[87, "cocohelper.transforms.randomflip.RandomFlip._flip_segmentations"]], "apply() (cocohelper.transforms.randomflip.randomflip method)": [[87, "cocohelper.transforms.randomflip.RandomFlip.apply"]], "compute_bbox_area() (cocohelper.transforms.randomflip.randomflip static method)": [[87, "cocohelper.transforms.randomflip.RandomFlip.compute_bbox_area"]], "transform_dataset() (cocohelper.transforms.randomflip.randomflip method)": [[87, "cocohelper.transforms.randomflip.RandomFlip.transform_dataset"]], "cocohelper.transforms.resize": [[88, "module-cocohelper.transforms.resize"]], "resize (class in cocohelper.transforms.resize)": [[89, "cocohelper.transforms.resize.Resize"]], "_abc_impl (cocohelper.transforms.resize.resize attribute)": [[89, "cocohelper.transforms.resize.Resize._abc_impl"]], "_resize_bbox() (cocohelper.transforms.resize.resize static method)": [[89, "cocohelper.transforms.resize.Resize._resize_bbox"]], "_resize_image_array() (cocohelper.transforms.resize.resize static method)": [[89, "cocohelper.transforms.resize.Resize._resize_image_array"]], "_resize_segmentations() (cocohelper.transforms.resize.resize static method)": [[89, "cocohelper.transforms.resize.Resize._resize_segmentations"]], "apply() (cocohelper.transforms.resize.resize method)": [[89, "cocohelper.transforms.resize.Resize.apply"]], "compute_bbox_area() (cocohelper.transforms.resize.resize static method)": [[89, "cocohelper.transforms.resize.Resize.compute_bbox_area"]], "transform_dataset() (cocohelper.transforms.resize.resize method)": [[89, "cocohelper.transforms.resize.Resize.transform_dataset"]], "cocohelper.transforms.transform": [[90, "module-cocohelper.transforms.transform"]], "transform (class in cocohelper.transforms.transform)": [[91, "cocohelper.transforms.transform.Transform"]], "_abc_impl (cocohelper.transforms.transform.transform attribute)": [[91, "cocohelper.transforms.transform.Transform._abc_impl"]], "apply() (cocohelper.transforms.transform.transform method)": [[91, "cocohelper.transforms.transform.Transform.apply"]], "compute_bbox_area() (cocohelper.transforms.transform.transform static method)": [[91, "cocohelper.transforms.transform.Transform.compute_bbox_area"]], "transform_dataset() (cocohelper.transforms.transform.transform method)": [[91, "cocohelper.transforms.transform.Transform.transform_dataset"]], "cocohelper.utils": [[92, "module-cocohelper.utils"]], "cocohelper.utils.colmapper": [[93, "module-cocohelper.utils.colmapper"]], "colmap (class in cocohelper.utils.colmapper)": [[94, "cocohelper.utils.colmapper.ColMap"]], "new (cocohelper.utils.colmapper.colmap attribute)": [[94, "cocohelper.utils.colmapper.ColMap.new"]], "orig (cocohelper.utils.colmapper.colmap attribute)": [[94, "cocohelper.utils.colmapper.ColMap.orig"]], "to_new (cocohelper.utils.colmapper.colmap attribute)": [[94, "cocohelper.utils.colmapper.ColMap.to_new"]], "to_orig (cocohelper.utils.colmapper.colmap attribute)": [[94, "cocohelper.utils.colmapper.ColMap.to_orig"]], "to_origs() (cocohelper.utils.colmapper.colmap class method)": [[94, "cocohelper.utils.colmapper.ColMap.to_origs"]], "colsmapper (class in cocohelper.utils.colmapper)": [[95, "cocohelper.utils.colmapper.ColsMapper"]], "all (cocohelper.utils.colmapper.colsmapper attribute)": [[95, "cocohelper.utils.colmapper.ColsMapper.all"]], "to_origs (cocohelper.utils.colmapper.colsmapper attribute)": [[95, "cocohelper.utils.colmapper.ColsMapper.to_origs"]], "cocohelper.utils.dataframe": [[96, "module-cocohelper.utils.dataframe"]], "df_to_records() (in module cocohelper.utils.dataframe)": [[97, "cocohelper.utils.dataframe.df_to_records"]], "drop_duplicate_rows() (in module cocohelper.utils.dataframe)": [[98, "cocohelper.utils.dataframe.drop_duplicate_rows"]], "fix_fk_after_drop_duplicate() (in module cocohelper.utils.dataframe)": [[99, "cocohelper.utils.dataframe.fix_fk_after_drop_duplicate"]], "records_to_df() (in module cocohelper.utils.dataframe)": [[100, "cocohelper.utils.dataframe.records_to_df"]], "serialize_row() (in module cocohelper.utils.dataframe)": [[101, "cocohelper.utils.dataframe.serialize_row"]], "cocohelper.utils.path": [[102, "module-cocohelper.utils.path"]], "subtract() (in module cocohelper.utils.path)": [[103, "cocohelper.utils.path.subtract"]], "cocohelper.utils.segmentation": [[104, "module-cocohelper.utils.segmentation"]], "compressedrlemaskconverter (class in cocohelper.utils.segmentation)": [[105, "cocohelper.utils.segmentation.CompressedRLEMaskConverter"]], "_abc_impl (cocohelper.utils.segmentation.compressedrlemaskconverter attribute)": [[105, "cocohelper.utils.segmentation.CompressedRLEMaskConverter._abc_impl"]], "decode() (cocohelper.utils.segmentation.compressedrlemaskconverter method)": [[105, "cocohelper.utils.segmentation.CompressedRLEMaskConverter.decode"]], "encode() (cocohelper.utils.segmentation.compressedrlemaskconverter method)": [[105, "cocohelper.utils.segmentation.CompressedRLEMaskConverter.encode"]], "maskconverter (class in cocohelper.utils.segmentation)": [[106, "cocohelper.utils.segmentation.MaskConverter"]], "_abc_impl (cocohelper.utils.segmentation.maskconverter attribute)": [[106, "cocohelper.utils.segmentation.MaskConverter._abc_impl"]], "decode() (cocohelper.utils.segmentation.maskconverter method)": [[106, "cocohelper.utils.segmentation.MaskConverter.decode"]], "encode() (cocohelper.utils.segmentation.maskconverter method)": [[106, "cocohelper.utils.segmentation.MaskConverter.encode"]], "polygonmaskconverter (class in cocohelper.utils.segmentation)": [[107, "cocohelper.utils.segmentation.PolygonMaskConverter"]], "_abc_impl (cocohelper.utils.segmentation.polygonmaskconverter attribute)": [[107, "cocohelper.utils.segmentation.PolygonMaskConverter._abc_impl"]], "decode() (cocohelper.utils.segmentation.polygonmaskconverter method)": [[107, "cocohelper.utils.segmentation.PolygonMaskConverter.decode"]], "encode() (cocohelper.utils.segmentation.polygonmaskconverter method)": [[107, "cocohelper.utils.segmentation.PolygonMaskConverter.encode"]], "rlemaskconverter (class in cocohelper.utils.segmentation)": [[108, "cocohelper.utils.segmentation.RLEMaskConverter"]], "_abc_impl (cocohelper.utils.segmentation.rlemaskconverter attribute)": [[108, "cocohelper.utils.segmentation.RLEMaskConverter._abc_impl"]], "decode() (cocohelper.utils.segmentation.rlemaskconverter method)": [[108, "cocohelper.utils.segmentation.RLEMaskConverter.decode"]], "encode() (cocohelper.utils.segmentation.rlemaskconverter method)": [[108, "cocohelper.utils.segmentation.RLEMaskConverter.encode"]], "coco_to_binary_masks() (in module cocohelper.utils.segmentation)": [[109, "cocohelper.utils.segmentation.coco_to_binary_masks"]], "compressed_rle_to_mask() (in module cocohelper.utils.segmentation)": [[110, "cocohelper.utils.segmentation.compressed_rle_to_mask"]], "compute_polygon_area() (in module cocohelper.utils.segmentation)": [[111, "cocohelper.utils.segmentation.compute_polygon_area"]], "convert_to_mask() (in module cocohelper.utils.segmentation)": [[112, "cocohelper.utils.segmentation.convert_to_mask"]], "convert_to_mode() (in module cocohelper.utils.segmentation)": [[113, "cocohelper.utils.segmentation.convert_to_mode"]], "decode_mask() (in module cocohelper.utils.segmentation)": [[114, "cocohelper.utils.segmentation.decode_mask"]], "encode_mask() (in module cocohelper.utils.segmentation)": [[115, "cocohelper.utils.segmentation.encode_mask"]], "get_segmentation_mode() (in module cocohelper.utils.segmentation)": [[116, "cocohelper.utils.segmentation.get_segmentation_mode"]], "mask_to_compressed_rle() (in module cocohelper.utils.segmentation)": [[117, "cocohelper.utils.segmentation.mask_to_compressed_rle"]], "mask_to_polygon() (in module cocohelper.utils.segmentation)": [[118, "cocohelper.utils.segmentation.mask_to_polygon"]], "mask_to_rle() (in module cocohelper.utils.segmentation)": [[119, "cocohelper.utils.segmentation.mask_to_rle"]], "polygon_to_mask() (in module cocohelper.utils.segmentation)": [[120, "cocohelper.utils.segmentation.polygon_to_mask"]], "rle_to_mask() (in module cocohelper.utils.segmentation)": [[121, "cocohelper.utils.segmentation.rle_to_mask"]], "cocohelper.utils.timer": [[122, "module-cocohelper.utils.timer"]], "timer (class in cocohelper.utils.timer)": [[123, "cocohelper.utils.timer.Timer"]], "_recreate_cm() (cocohelper.utils.timer.timer method)": [[123, "cocohelper.utils.timer.Timer._recreate_cm"]], "elapsed (cocohelper.utils.timer.timer attribute)": [[123, "cocohelper.utils.timer.Timer.elapsed"]], "cocohelper.utils.types": [[124, "module-cocohelper.utils.types"]], "cocohelper.utils.utils": [[125, "module-cocohelper.utils.utils"]], "fix_not_tuple() (in module cocohelper.utils.utils)": [[126, "cocohelper.utils.utils.fix_not_tuple"]], "fix_not_tuple_object() (in module cocohelper.utils.utils)": [[127, "cocohelper.utils.utils.fix_not_tuple_object"]], "isarraylike() (in module cocohelper.utils.utils)": [[128, "cocohelper.utils.utils.isArrayLike"]], "not_empty_intersect() (in module cocohelper.utils.utils)": [[129, "cocohelper.utils.utils.not_empty_intersect"]], "cocohelper.validator": [[130, "module-cocohelper.validator"]], "cocovalidator (class in cocohelper.validator)": [[131, "cocohelper.validator.COCOValidator"]], "_annotation_ids_are_unique() (cocohelper.validator.cocovalidator static method)": [[131, "cocohelper.validator.COCOValidator._annotation_ids_are_unique"]], "_annotations_have_mandatory_keys() (cocohelper.validator.cocovalidator static method)": [[131, "cocohelper.validator.COCOValidator._annotations_have_mandatory_keys"]], "_annotations_have_valid_category_id() (cocohelper.validator.cocovalidator static method)": [[131, "cocohelper.validator.COCOValidator._annotations_have_valid_category_id"]], "_annotations_have_valid_image_id() (cocohelper.validator.cocovalidator static method)": [[131, "cocohelper.validator.COCOValidator._annotations_have_valid_image_id"]], "_categories_have_mandatory_keys() (cocohelper.validator.cocovalidator static method)": [[131, "cocohelper.validator.COCOValidator._categories_have_mandatory_keys"]], "_category_ids_are_unique() (cocohelper.validator.cocovalidator static method)": [[131, "cocohelper.validator.COCOValidator._category_ids_are_unique"]], "_has_valid_dataset_tree() (cocohelper.validator.cocovalidator method)": [[131, "cocohelper.validator.COCOValidator._has_valid_dataset_tree"]], "_image_ids_are_unique() (cocohelper.validator.cocovalidator static method)": [[131, "cocohelper.validator.COCOValidator._image_ids_are_unique"]], "_images_have_mandatory_keys() (cocohelper.validator.cocovalidator static method)": [[131, "cocohelper.validator.COCOValidator._images_have_mandatory_keys"]], "_json_has_mandatory_keys() (cocohelper.validator.cocovalidator static method)": [[131, "cocohelper.validator.COCOValidator._json_has_mandatory_keys"]], "_licenses_ids_are_unique() (cocohelper.validator.cocovalidator static method)": [[131, "cocohelper.validator.COCOValidator._licenses_ids_are_unique"]], "validate_dataset() (cocohelper.validator.cocovalidator method)": [[131, "cocohelper.validator.COCOValidator.validate_dataset"]], "validate_dir() (cocohelper.validator.cocovalidator method)": [[131, "cocohelper.validator.COCOValidator.validate_dir"]], "_assert_dict_value_type() (in module cocohelper.validator)": [[132, "cocohelper.validator._assert_dict_value_type"]], "cocohelper.visualizer": [[133, "module-cocohelper.visualizer"]], "cocovisualizer (class in cocohelper.visualizer)": [[134, "cocohelper.visualizer.COCOVisualizer"]], "_visualize() (cocohelper.visualizer.cocovisualizer method)": [[134, "cocohelper.visualizer.COCOVisualizer._visualize"]], "draw_bounding_box() (cocohelper.visualizer.cocovisualizer static method)": [[134, "cocohelper.visualizer.COCOVisualizer.draw_bounding_box"]], "draw_segmentation_mask() (cocohelper.visualizer.cocovisualizer static method)": [[134, "cocohelper.visualizer.COCOVisualizer.draw_segmentation_mask"]], "load_image_array() (cocohelper.visualizer.cocovisualizer method)": [[134, "cocohelper.visualizer.COCOVisualizer.load_image_array"]], "pick_color_palette() (cocohelper.visualizer.cocovisualizer method)": [[134, "cocohelper.visualizer.COCOVisualizer.pick_color_palette"]], "pick_random_colors() (cocohelper.visualizer.cocovisualizer static method)": [[134, "cocohelper.visualizer.COCOVisualizer.pick_random_colors"]], "visualize() (cocohelper.visualizer.cocovisualizer method)": [[134, "cocohelper.visualizer.COCOVisualizer.visualize"]]}})